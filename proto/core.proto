syntax = "proto3";

package hashicorp.vagrant.sdk;

option go_package = ".;proto";

import "plugin.proto";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

message StateBag {
  map<string, Value> data = 1;

  message Value {
    oneof value {
      string text = 1;
      google.protobuf.Any map = 2;
    }
  }
}

// LabelSet is a set of labels for anything that can be labelled, such
// as a deployment, build, etc.
message LabelSet {
  map<string, string> labels = 1;
}

message Options {
  LabelSet opt = 1;
}

message SSHInfo {
  string host = 1;
  string port = 2;
  string private_key_path = 3;
  bool keys_only = 4;
  bool verify_host_key = 5;
  string username = 6;
  string remote_user = 7;
  bool compression = 8;
  bool dsa_authentication = 9;
  string config = 10;
  repeated string extra_args = 11;
  bool forward_agent = 12;
  bool forward_x11 = 13;
  repeated string forward_env = 14;
  int64 connect_timeout = 15;
  string ssh_command = 16;
  string proxy_command = 17;
}

message WinrmInfo {
  string username = 1;
  string password = 2;
  string host = 3;
  int64 port = 4;
  int64 guest_port = 5;
  int64 max_tries = 6;
  int64 retry_delay = 7;
  int64 timeout = 8;
  enum Transport {
    NEGOTIATE = 0;  // default
    SSL = 1;
    PLAINTEXT = 2;
  }
  Transport transport = 9;
  bool ssl_peer_verification = 10;
  string execution_time_limit = 11;
  bool basic_auth_only = 12;
  string codepage = 13;
}

message MachineState {
  string id = 1;
  string short_description = 2;
  string long_description = 3;
}

message MachineIndex {
  message Entry {
    string id = 1;
    string local_data_path = 2;
    string name = 3;
    string provider = 4;
    string state = 5;
    string vagrantfile_name = 6;
    string vagrantfile_path = 7;
    string updated_at = 8; // TODO(spox): should we make this an int?
    Options extra_data = 9;
  }
}

message BoxCollection {
  string directory = 1;
}

message Box {
  string name = 1;
  string provider = 2;
  string version = 3;
  string directory = 4;
  Options metadata = 5;
  string metadata_url = 6;
}

message Environment {}

message MachineProvider {}

message Configuration {}

message Vagrantfile {
}

/********************************************************************
* Shared Messages
********************************************************************/

// Ref contains shared messages used for references to other resources.
//
// Refs should be used when the full type shouldn't be embedded in the message.
message Ref {
  // Machine references a machine.
  message Machine {
    string resource_id = 1;
  }
}

/********************************************************************
* Machine services
********************************************************************/
service MachineService {
  rpc SetName(Machine.SetNameRequest) returns (Machine.SetNameResponse);
  rpc GetName(Machine.GetNameRequest) returns (Machine.GetNameResponse);
  rpc SetID(Machine.SetIDRequest) returns (Machine.SetIDResponse);
  rpc GetID(Machine.GetIDRequest) returns (Machine.GetIDResponse);
  rpc Box(Machine.BoxRequest) returns (Machine.BoxResponse);
  rpc Datadir(Machine.DatadirRequest) returns (Machine.DatadirResponse);
  rpc LocalDataPath(Machine.LocalDataPathRequest) returns (Machine.LocalDataPathResponse);
  rpc Provider(Machine.ProviderRequest) returns (Machine.ProviderResponse);
  rpc VagrantfileName(Machine.VagrantfileNameRequest) returns (Machine.VagrantfileNameResponse);
  rpc VagrantfilePath(Machine.VagrantfilePathRequest) returns (Machine.VagrantfilePathResponse);
  rpc UpdatedAt(Machine.UpdatedAtRequest) returns (Machine.UpdatedAtResponse);
  rpc UI(Machine.UIRequest) returns (Machine.UIResponse);
 }

/**********************************************
 * Machine message used with machine service
 **********************************************/
message Machine {
  // SetName
  message SetNameRequest {
    Ref.Machine machine = 1;
    string name = 2;
  }
  message SetNameResponse {}
  // GetName
  message GetNameRequest {
    Ref.Machine machine = 1;
  }
  message GetNameResponse {
    string name = 1;
  }
  // SetID
  message SetIDRequest {
    Ref.Machine machine = 1;
    string id = 2;
  }
  message SetIDResponse {}
  // GetID
  message GetIDRequest {
    Ref.Machine machine = 1;
  }
  message GetIDResponse {
    string id = 1;
  }
  // Box
  message BoxRequest {
    Ref.Machine machine = 1;
  }
  message BoxResponse {
    Box box = 1;
  }
  // Datadir
  message DatadirRequest {
    Ref.Machine machine = 1;
  }
  message DatadirResponse {
    Args.DataDir.Machine datadir = 1;
  }
  // LocalDataPath
  message LocalDataPathRequest {
    Ref.Machine machine = 1;
  }
  message LocalDataPathResponse {
    string path = 1;
  }
  // Provider
  message ProviderRequest {
    Ref.Machine machine = 1;
  }
  message ProviderResponse {
    // TODO(spox): component info here?
  }
  // VagrantfileName
  message VagrantfileNameRequest {
    Ref.Machine machine = 1;
  }
  message VagrantfileNameResponse {
    string name = 1;
  }
  // VagrantfilePath
  message VagrantfilePathRequest {
    Ref.Machine machine = 1;
  }
  message VagrantfilePathResponse {
    string path = 1;
  }
  // UpdatedAt
  message UpdatedAtRequest {
    Ref.Machine machine = 1;
  }
  message UpdatedAtResponse {
    google.protobuf.Timestamp updated_at = 1;
  }
  message UIRequest {
    Ref.Machine machine = 1;
  }
  message UIResponse {
    Args.TerminalUI ui = 1;
  }
}
