// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: vagrant_plugin_sdk/plugin.proto

package vagrant_plugin_sdk

import (
	protostructure "github.com/mitchellh/protostructure"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Args_JobInfo_ResourceType int32

const (
	Args_JobInfo_BASIS   Args_JobInfo_ResourceType = 0
	Args_JobInfo_PROJECT Args_JobInfo_ResourceType = 1
	Args_JobInfo_TARGET  Args_JobInfo_ResourceType = 2
)

// Enum value maps for Args_JobInfo_ResourceType.
var (
	Args_JobInfo_ResourceType_name = map[int32]string{
		0: "BASIS",
		1: "PROJECT",
		2: "TARGET",
	}
	Args_JobInfo_ResourceType_value = map[string]int32{
		"BASIS":   0,
		"PROJECT": 1,
		"TARGET":  2,
	}
)

func (x Args_JobInfo_ResourceType) Enum() *Args_JobInfo_ResourceType {
	p := new(Args_JobInfo_ResourceType)
	*p = x
	return p
}

func (x Args_JobInfo_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_JobInfo_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[0].Descriptor()
}

func (Args_JobInfo_ResourceType) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[0]
}

func (x Args_JobInfo_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_JobInfo_ResourceType.Descriptor instead.
func (Args_JobInfo_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 0}
}

type Args_Target_State_State int32

const (
	Args_Target_State_UNKNOWN   Args_Target_State_State = 0
	Args_Target_State_PENDING   Args_Target_State_State = 1
	Args_Target_State_CREATED   Args_Target_State_State = 2
	Args_Target_State_DESTROYED Args_Target_State_State = 3
)

// Enum value maps for Args_Target_State_State.
var (
	Args_Target_State_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "CREATED",
		3: "DESTROYED",
	}
	Args_Target_State_State_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"CREATED":   2,
		"DESTROYED": 3,
	}
)

func (x Args_Target_State_State) Enum() *Args_Target_State_State {
	p := new(Args_Target_State_State)
	*p = x
	return p
}

func (x Args_Target_State_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_Target_State_State) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[1].Descriptor()
}

func (Args_Target_State_State) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[1]
}

func (x Args_Target_State_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_Target_State_State.Descriptor instead.
func (Args_Target_State_State) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15, 0, 0}
}

type Args_Connection_WinrmInfo_Transport int32

const (
	Args_Connection_WinrmInfo_NEGOTIATE Args_Connection_WinrmInfo_Transport = 0 // default
	Args_Connection_WinrmInfo_SSL       Args_Connection_WinrmInfo_Transport = 1
	Args_Connection_WinrmInfo_PLAINTEXT Args_Connection_WinrmInfo_Transport = 2
)

// Enum value maps for Args_Connection_WinrmInfo_Transport.
var (
	Args_Connection_WinrmInfo_Transport_name = map[int32]string{
		0: "NEGOTIATE",
		1: "SSL",
		2: "PLAINTEXT",
	}
	Args_Connection_WinrmInfo_Transport_value = map[string]int32{
		"NEGOTIATE": 0,
		"SSL":       1,
		"PLAINTEXT": 2,
	}
)

func (x Args_Connection_WinrmInfo_Transport) Enum() *Args_Connection_WinrmInfo_Transport {
	p := new(Args_Connection_WinrmInfo_Transport)
	*p = x
	return p
}

func (x Args_Connection_WinrmInfo_Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_Connection_WinrmInfo_Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[2].Descriptor()
}

func (Args_Connection_WinrmInfo_Transport) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[2]
}

func (x Args_Connection_WinrmInfo_Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_Connection_WinrmInfo_Transport.Descriptor instead.
func (Args_Connection_WinrmInfo_Transport) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 22, 1, 0}
}

type TerminalUI_OutputRequest_Style int32

const (
	TerminalUI_OutputRequest_HEADER       TerminalUI_OutputRequest_Style = 0
	TerminalUI_OutputRequest_ERROR        TerminalUI_OutputRequest_Style = 1
	TerminalUI_OutputRequest_ERROR_BOLD   TerminalUI_OutputRequest_Style = 2
	TerminalUI_OutputRequest_WARNING      TerminalUI_OutputRequest_Style = 3
	TerminalUI_OutputRequest_WARNING_BOLD TerminalUI_OutputRequest_Style = 4
	TerminalUI_OutputRequest_INFO         TerminalUI_OutputRequest_Style = 5
	TerminalUI_OutputRequest_SUCCESS      TerminalUI_OutputRequest_Style = 6
	TerminalUI_OutputRequest_SUCCESS_BOLD TerminalUI_OutputRequest_Style = 7
)

// Enum value maps for TerminalUI_OutputRequest_Style.
var (
	TerminalUI_OutputRequest_Style_name = map[int32]string{
		0: "HEADER",
		1: "ERROR",
		2: "ERROR_BOLD",
		3: "WARNING",
		4: "WARNING_BOLD",
		5: "INFO",
		6: "SUCCESS",
		7: "SUCCESS_BOLD",
	}
	TerminalUI_OutputRequest_Style_value = map[string]int32{
		"HEADER":       0,
		"ERROR":        1,
		"ERROR_BOLD":   2,
		"WARNING":      3,
		"WARNING_BOLD": 4,
		"INFO":         5,
		"SUCCESS":      6,
		"SUCCESS_BOLD": 7,
	}
)

func (x TerminalUI_OutputRequest_Style) Enum() *TerminalUI_OutputRequest_Style {
	p := new(TerminalUI_OutputRequest_Style)
	*p = x
	return p
}

func (x TerminalUI_OutputRequest_Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TerminalUI_OutputRequest_Style) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[3].Descriptor()
}

func (TerminalUI_OutputRequest_Style) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[3]
}

func (x TerminalUI_OutputRequest_Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TerminalUI_OutputRequest_Style.Descriptor instead.
func (TerminalUI_OutputRequest_Style) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 1, 0}
}

type Command_Flag_Type int32

const (
	Command_Flag_STRING Command_Flag_Type = 0
	Command_Flag_BOOL   Command_Flag_Type = 2
)

// Enum value maps for Command_Flag_Type.
var (
	Command_Flag_Type_name = map[int32]string{
		0: "STRING",
		2: "BOOL",
	}
	Command_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   2,
	}
)

func (x Command_Flag_Type) Enum() *Command_Flag_Type {
	p := new(Command_Flag_Type)
	*p = x
	return p
}

func (x Command_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[4].Descriptor()
}

func (Command_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[4]
}

func (x Command_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Flag_Type.Descriptor instead.
func (Command_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 0, 0}
}

type Command_Arguments_Flag_Type int32

const (
	Command_Arguments_Flag_STRING Command_Arguments_Flag_Type = 0
	Command_Arguments_Flag_BOOL   Command_Arguments_Flag_Type = 1
)

// Enum value maps for Command_Arguments_Flag_Type.
var (
	Command_Arguments_Flag_Type_name = map[int32]string{
		0: "STRING",
		1: "BOOL",
	}
	Command_Arguments_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   1,
	}
)

func (x Command_Arguments_Flag_Type) Enum() *Command_Arguments_Flag_Type {
	p := new(Command_Arguments_Flag_Type)
	*p = x
	return p
}

func (x Command_Arguments_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Arguments_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[5].Descriptor()
}

func (Command_Arguments_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[5]
}

func (x Command_Arguments_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Arguments_Flag_Type.Descriptor instead.
func (Command_Arguments_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 6, 0, 0}
}

// Args are the common argument types that are available to many of the
// dynamic functions. The exact list of available argument types is available
// on the Go interface docs.
type Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args) Reset() {
	*x = Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args) ProtoMessage() {}

func (x *Args) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args.ProtoReflect.Descriptor instead.
func (*Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0}
}

// FuncSpec describes a function and is used by the dependency-injection
// framework to provide the function with the proper values.
//
// Value types are specified using strings. Built-in framework types
// are defined via constants in the `sdk` package. For custom types, you
// can use whatever string as long as it is unique. We recommend using a
// unique prefix plus the Go type name.
type FuncSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the function. This is used for improved logging.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// args is the list of arguments by protobuf Any types.
	Args []*FuncSpec_Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// result are the resulting types that are made available. This is only
	// critically important to be set for functions that may chain to other
	// functions. It can be set to blank in which case it will not be used.
	Result []*FuncSpec_Value `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *FuncSpec) Reset() {
	*x = FuncSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec) ProtoMessage() {}

func (x *FuncSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec.ProtoReflect.Descriptor instead.
func (*FuncSpec) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *FuncSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FuncSpec) GetResult() []*FuncSpec_Value {
	if x != nil {
		return x.Result
	}
	return nil
}

// Config is the namespace of messages related to configuration.
//
// All components that take configuration are expected to have two RPC calls:
//
//   * ConfigStruct - Returns the configuration structure.
//   * Configure - Sends the configuration data back to the plugin and the
//       plugin is also expected to perform any validation at this stage.
//   * Documentation - Returns a Documentation struct that details what configuration
//       is accepted, with documentation.
//
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2}
}

// Auth is the namespace of messages related to auth.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{3}
}

// ImplementsResp returns true if the component implements an additional interface.
type ImplementsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Implements bool `protobuf:"varint,1,opt,name=implements,proto3" json:"implements,omitempty"`
}

func (x *ImplementsResp) Reset() {
	*x = ImplementsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImplementsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImplementsResp) ProtoMessage() {}

func (x *ImplementsResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImplementsResp.ProtoReflect.Descriptor instead.
func (*ImplementsResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *ImplementsResp) GetImplements() bool {
	if x != nil {
		return x.Implements
	}
	return false
}

type TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerminalUI) Reset() {
	*x = TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI) ProtoMessage() {}

func (x *TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI.ProtoReflect.Descriptor instead.
func (*TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5}
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6}
}

type StateBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag) Reset() {
	*x = StateBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag) ProtoMessage() {}

func (x *StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag.ProtoReflect.Descriptor instead.
func (*StateBag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7}
}

type PluginInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PluginInfo) Reset() {
	*x = PluginInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo) ProtoMessage() {}

func (x *PluginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo.ProtoReflect.Descriptor instead.
func (*PluginInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8}
}

type PluginManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PluginManager) Reset() {
	*x = PluginManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManager) ProtoMessage() {}

func (x *PluginManager) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManager.ProtoReflect.Descriptor instead.
func (*PluginManager) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9}
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11}
}

type Communicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator) Reset() {
	*x = Communicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator) ProtoMessage() {}

func (x *Communicator) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator.ProtoReflect.Descriptor instead.
func (*Communicator) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12}
}

type Platform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Platform) Reset() {
	*x = Platform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform) ProtoMessage() {}

func (x *Platform) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform.ProtoReflect.Descriptor instead.
func (*Platform) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13}
}

type SyncedFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SyncedFolder) Reset() {
	*x = SyncedFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncedFolder) ProtoMessage() {}

func (x *SyncedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncedFolder.ProtoReflect.Descriptor instead.
func (*SyncedFolder) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14}
}

// Ref contains shared messages used for references to other resources.
//
// Refs should be used when the full type shouldn't be embedded in the message.
type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15}
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16}
}

//******************************************************
// Project message used with Project service
//*****************************************************
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17}
}

//******************************************************
// Vagrantfile message used with Vagrantfile service
//*****************************************************
type Vagrantfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vagrantfile) Reset() {
	*x = Vagrantfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile) ProtoMessage() {}

func (x *Vagrantfile) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile.ProtoReflect.Descriptor instead.
func (*Vagrantfile) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18}
}

//******************************************************
// TargetIndex message used with TargetIndex service
//*****************************************************
type TargetIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TargetIndex) Reset() {
	*x = TargetIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex) ProtoMessage() {}

func (x *TargetIndex) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex.ProtoReflect.Descriptor instead.
func (*TargetIndex) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19}
}

//******************************************************
// Box message used with Box service
//*****************************************************
type Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Box) Reset() {
	*x = Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box) ProtoMessage() {}

func (x *Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box.ProtoReflect.Descriptor instead.
func (*Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20}
}

//******************************************************
// BoxCollection messages used with BoxCollection service
//*****************************************************
type BoxCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BoxCollection) Reset() {
	*x = BoxCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection) ProtoMessage() {}

func (x *BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection.ProtoReflect.Descriptor instead.
func (*BoxCollection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{21}
}

type Args_Seeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Typed []*anypb.Any          `protobuf:"bytes,1,rep,name=typed,proto3" json:"typed,omitempty"`
	Named map[string]*anypb.Any `protobuf:"bytes,2,rep,name=named,proto3" json:"named,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_Seeds) Reset() {
	*x = Args_Seeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Seeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Seeds) ProtoMessage() {}

func (x *Args_Seeds) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Seeds.ProtoReflect.Descriptor instead.
func (*Args_Seeds) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Args_Seeds) GetTyped() []*anypb.Any {
	if x != nil {
		return x.Typed
	}
	return nil
}

func (x *Args_Seeds) GetNamed() map[string]*anypb.Any {
	if x != nil {
		return x.Named
	}
	return nil
}

type Args_DataDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_DataDir) Reset() {
	*x = Args_DataDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir) ProtoMessage() {}

func (x *Args_DataDir) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir.ProtoReflect.Descriptor instead.
func (*Args_DataDir) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1}
}

type Args_MetadataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_MetadataSet) Reset() {
	*x = Args_MetadataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_MetadataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_MetadataSet) ProtoMessage() {}

func (x *Args_MetadataSet) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_MetadataSet.ProtoReflect.Descriptor instead.
func (*Args_MetadataSet) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Args_MetadataSet) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Args_Path struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Args_Path) Reset() {
	*x = Args_Path{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Path) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Path) ProtoMessage() {}

func (x *Args_Path) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Path.ProtoReflect.Descriptor instead.
func (*Args_Path) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Args_Path) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Args_Folder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Folders map[string]*anypb.Any `protobuf:"bytes,1,rep,name=folders,proto3" json:"folders,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_Folder) Reset() {
	*x = Args_Folder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Folder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Folder) ProtoMessage() {}

func (x *Args_Folder) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Folder.ProtoReflect.Descriptor instead.
func (*Args_Folder) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Args_Folder) GetFolders() map[string]*anypb.Any {
	if x != nil {
		return x.Folders
	}
	return nil
}

type Args_TimeDuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration int32 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *Args_TimeDuration) Reset() {
	*x = Args_TimeDuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_TimeDuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_TimeDuration) ProtoMessage() {}

func (x *Args_TimeDuration) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_TimeDuration.ProtoReflect.Descriptor instead.
func (*Args_TimeDuration) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Args_TimeDuration) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type Args_TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_TerminalUI) Reset() {
	*x = Args_TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_TerminalUI) ProtoMessage() {}

func (x *Args_TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_TerminalUI.ProtoReflect.Descriptor instead.
func (*Args_TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Args_TerminalUI) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_TerminalUI) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_TerminalUI) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Args_Logger) Reset() {
	*x = Args_Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Logger) ProtoMessage() {}

func (x *Args_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Logger.ProtoReflect.Descriptor instead.
func (*Args_Logger) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Args_Logger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Args_JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local        bool                      `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	ResourceId   string                    `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType Args_JobInfo_ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=hashicorp.vagrant.sdk.Args_JobInfo_ResourceType" json:"resource_type,omitempty"`
	Id           string                    `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Args_JobInfo) Reset() {
	*x = Args_JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_JobInfo) ProtoMessage() {}

func (x *Args_JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_JobInfo.ProtoReflect.Descriptor instead.
func (*Args_JobInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Args_JobInfo) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *Args_JobInfo) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Args_JobInfo) GetResourceType() Args_JobInfo_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return Args_JobInfo_BASIS
}

func (x *Args_JobInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Args_PluginManager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_PluginManager) Reset() {
	*x = Args_PluginManager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_PluginManager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_PluginManager) ProtoMessage() {}

func (x *Args_PluginManager) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_PluginManager.ProtoReflect.Descriptor instead.
func (*Args_PluginManager) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Args_PluginManager) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_PluginManager) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_PluginManager) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Command) Reset() {
	*x = Args_Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Command) ProtoMessage() {}

func (x *Args_Command) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Command.ProtoReflect.Descriptor instead.
func (*Args_Command) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Args_Command) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Command) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Command) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Basis) Reset() {
	*x = Args_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Basis) ProtoMessage() {}

func (x *Args_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Basis.ProtoReflect.Descriptor instead.
func (*Args_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Args_Basis) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Basis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Basis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Project) Reset() {
	*x = Args_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Project) ProtoMessage() {}

func (x *Args_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Project.ProtoReflect.Descriptor instead.
func (*Args_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Args_Project) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Project) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Project) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Provider) Reset() {
	*x = Args_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Provider) ProtoMessage() {}

func (x *Args_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Provider.ProtoReflect.Descriptor instead.
func (*Args_Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Args_Provider) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Provider) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Provider) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Provisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Provisioner) Reset() {
	*x = Args_Provisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Provisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Provisioner) ProtoMessage() {}

func (x *Args_Provisioner) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Provisioner.ProtoReflect.Descriptor instead.
func (*Args_Provisioner) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Args_Provisioner) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Provisioner) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Provisioner) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generic target
	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Target) Reset() {
	*x = Args_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target) ProtoMessage() {}

func (x *Args_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target.ProtoReflect.Descriptor instead.
func (*Args_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Args_Target) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Target) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Target) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Box) Reset() {
	*x = Args_Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Box) ProtoMessage() {}

func (x *Args_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Box.ProtoReflect.Descriptor instead.
func (*Args_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Args_Box) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Box) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Box) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_BoxCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_BoxCollection) Reset() {
	*x = Args_BoxCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_BoxCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_BoxCollection) ProtoMessage() {}

func (x *Args_BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_BoxCollection.ProtoReflect.Descriptor instead.
func (*Args_BoxCollection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 17}
}

func (x *Args_BoxCollection) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_BoxCollection) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_BoxCollection) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_StateBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_StateBag) Reset() {
	*x = Args_StateBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_StateBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_StateBag) ProtoMessage() {}

func (x *Args_StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_StateBag.ProtoReflect.Descriptor instead.
func (*Args_StateBag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 18}
}

func (x *Args_StateBag) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_StateBag) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_StateBag) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Host) Reset() {
	*x = Args_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Host) ProtoMessage() {}

func (x *Args_Host) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Host.ProtoReflect.Descriptor instead.
func (*Args_Host) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 19}
}

func (x *Args_Host) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Host) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Host) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Guest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Guest) Reset() {
	*x = Args_Guest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Guest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Guest) ProtoMessage() {}

func (x *Args_Guest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Guest.ProtoReflect.Descriptor instead.
func (*Args_Guest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 20}
}

func (x *Args_Guest) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Guest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Guest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Communicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Communicator) Reset() {
	*x = Args_Communicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Communicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Communicator) ProtoMessage() {}

func (x *Args_Communicator) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Communicator.ProtoReflect.Descriptor instead.
func (*Args_Communicator) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 21}
}

func (x *Args_Communicator) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Communicator) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Communicator) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Connection) Reset() {
	*x = Args_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Connection) ProtoMessage() {}

func (x *Args_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Connection.ProtoReflect.Descriptor instead.
func (*Args_Connection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 22}
}

type Args_Push struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Push) Reset() {
	*x = Args_Push{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Push) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Push) ProtoMessage() {}

func (x *Args_Push) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Push.ProtoReflect.Descriptor instead.
func (*Args_Push) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 23}
}

func (x *Args_Push) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Push) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Push) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_SyncedFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_SyncedFolder) Reset() {
	*x = Args_SyncedFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_SyncedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_SyncedFolder) ProtoMessage() {}

func (x *Args_SyncedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_SyncedFolder.ProtoReflect.Descriptor instead.
func (*Args_SyncedFolder) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 24}
}

func (x *Args_SyncedFolder) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_SyncedFolder) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_SyncedFolder) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_TargetIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_TargetIndex) Reset() {
	*x = Args_TargetIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_TargetIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_TargetIndex) ProtoMessage() {}

func (x *Args_TargetIndex) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_TargetIndex.ProtoReflect.Descriptor instead.
func (*Args_TargetIndex) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 25}
}

func (x *Args_TargetIndex) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_TargetIndex) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_TargetIndex) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_NamedCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capability string `protobuf:"bytes,1,opt,name=capability,proto3" json:"capability,omitempty"`
}

func (x *Args_NamedCapability) Reset() {
	*x = Args_NamedCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_NamedCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_NamedCapability) ProtoMessage() {}

func (x *Args_NamedCapability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_NamedCapability.ProtoReflect.Descriptor instead.
func (*Args_NamedCapability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 26}
}

func (x *Args_NamedCapability) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

type Args_Direct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Arguments []*anypb.Any `protobuf:"bytes,1,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *Args_Direct) Reset() {
	*x = Args_Direct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Direct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Direct) ProtoMessage() {}

func (x *Args_Direct) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Direct.ProtoReflect.Descriptor instead.
func (*Args_Direct) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 27}
}

func (x *Args_Direct) GetArguments() []*anypb.Any {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type Args_Array struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*anypb.Any `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *Args_Array) Reset() {
	*x = Args_Array{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Array) ProtoMessage() {}

func (x *Args_Array) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Array.ProtoReflect.Descriptor instead.
func (*Args_Array) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 28}
}

func (x *Args_Array) GetList() []*anypb.Any {
	if x != nil {
		return x.List
	}
	return nil
}

type Args_Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields map[string]*anypb.Any `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_Hash) Reset() {
	*x = Args_Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Hash) ProtoMessage() {}

func (x *Args_Hash) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Hash.ProtoReflect.Descriptor instead.
func (*Args_Hash) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 29}
}

func (x *Args_Hash) GetFields() map[string]*anypb.Any {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Args_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *Args_Hash `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Args_Options) Reset() {
	*x = Args_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Options) ProtoMessage() {}

func (x *Args_Options) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Options.ProtoReflect.Descriptor instead.
func (*Args_Options) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 30}
}

func (x *Args_Options) GetOptions() *Args_Hash {
	if x != nil {
		return x.Options
	}
	return nil
}

type Args_Null struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Null) Reset() {
	*x = Args_Null{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Null) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Null) ProtoMessage() {}

func (x *Args_Null) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Null.ProtoReflect.Descriptor instead.
func (*Args_Null) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 31}
}

type Args_DataDir_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigDir string `protobuf:"bytes,1,opt,name=config_dir,json=configDir,proto3" json:"config_dir,omitempty"`
	CacheDir  string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir   string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir   string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Basis) Reset() {
	*x = Args_DataDir_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Basis) ProtoMessage() {}

func (x *Args_DataDir_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Basis.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Args_DataDir_Basis) GetConfigDir() string {
	if x != nil {
		return x.ConfigDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigDir string `protobuf:"bytes,1,opt,name=config_dir,json=configDir,proto3" json:"config_dir,omitempty"`
	CacheDir  string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir   string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir   string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Project) Reset() {
	*x = Args_DataDir_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Project) ProtoMessage() {}

func (x *Args_DataDir_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Project.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Args_DataDir_Project) GetConfigDir() string {
	if x != nil {
		return x.ConfigDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigDir string `protobuf:"bytes,1,opt,name=config_dir,json=configDir,proto3" json:"config_dir,omitempty"`
	CacheDir  string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir   string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir   string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Target) Reset() {
	*x = Args_DataDir_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Target) ProtoMessage() {}

func (x *Args_DataDir_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Target.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1, 2}
}

func (x *Args_DataDir_Target) GetConfigDir() string {
	if x != nil {
		return x.ConfigDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigDir string `protobuf:"bytes,1,opt,name=config_dir,json=configDir,proto3" json:"config_dir,omitempty"`
	CacheDir  string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir   string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir   string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Component) Reset() {
	*x = Args_DataDir_Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Component) ProtoMessage() {}

func (x *Args_DataDir_Component) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Component.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Component) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1, 3}
}

func (x *Args_DataDir_Component) GetConfigDir() string {
	if x != nil {
		return x.ConfigDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_Target_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Args_Target_State_State `protobuf:"varint,1,opt,name=state,proto3,enum=hashicorp.vagrant.sdk.Args_Target_State_State" json:"state,omitempty"`
}

func (x *Args_Target_State) Reset() {
	*x = Args_Target_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_State) ProtoMessage() {}

func (x *Args_Target_State) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_State.ProtoReflect.Descriptor instead.
func (*Args_Target_State) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15, 0}
}

func (x *Args_Target_State) GetState() Args_Target_State_State {
	if x != nil {
		return x.State
	}
	return Args_Target_State_UNKNOWN
}

// Specialized targets
type Args_Target_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Addr     string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_Target_Machine) Reset() {
	*x = Args_Target_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_Machine) ProtoMessage() {}

func (x *Args_Target_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_Machine.ProtoReflect.Descriptor instead.
func (*Args_Target_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15, 1}
}

func (x *Args_Target_Machine) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Target_Machine) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Target_Machine) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_Target_Machine_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortDescription string `protobuf:"bytes,2,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string `protobuf:"bytes,3,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
}

func (x *Args_Target_Machine_State) Reset() {
	*x = Args_Target_Machine_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_Machine_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_Machine_State) ProtoMessage() {}

func (x *Args_Target_Machine_State) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_Machine_State.ProtoReflect.Descriptor instead.
func (*Args_Target_Machine_State) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15, 1, 0}
}

func (x *Args_Target_Machine_State) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Args_Target_Machine_State) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Args_Target_Machine_State) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

type Args_Connection_SSHInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host              string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port              string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	PrivateKeyPath    string   `protobuf:"bytes,3,opt,name=private_key_path,json=privateKeyPath,proto3" json:"private_key_path,omitempty"`
	KeysOnly          bool     `protobuf:"varint,4,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	VerifyHostKey     bool     `protobuf:"varint,5,opt,name=verify_host_key,json=verifyHostKey,proto3" json:"verify_host_key,omitempty"`
	Username          string   `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	RemoteUser        string   `protobuf:"bytes,7,opt,name=remote_user,json=remoteUser,proto3" json:"remote_user,omitempty"`
	Compression       bool     `protobuf:"varint,8,opt,name=compression,proto3" json:"compression,omitempty"`
	DsaAuthentication bool     `protobuf:"varint,9,opt,name=dsa_authentication,json=dsaAuthentication,proto3" json:"dsa_authentication,omitempty"`
	Config            string   `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
	ExtraArgs         []string `protobuf:"bytes,11,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	ForwardAgent      bool     `protobuf:"varint,12,opt,name=forward_agent,json=forwardAgent,proto3" json:"forward_agent,omitempty"`
	ForwardX11        bool     `protobuf:"varint,13,opt,name=forward_x11,json=forwardX11,proto3" json:"forward_x11,omitempty"`
	ForwardEnv        []string `protobuf:"bytes,14,rep,name=forward_env,json=forwardEnv,proto3" json:"forward_env,omitempty"`
	ConnectTimeout    int64    `protobuf:"varint,15,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	SshCommand        string   `protobuf:"bytes,16,opt,name=ssh_command,json=sshCommand,proto3" json:"ssh_command,omitempty"`
	ProxyCommand      string   `protobuf:"bytes,17,opt,name=proxy_command,json=proxyCommand,proto3" json:"proxy_command,omitempty"`
}

func (x *Args_Connection_SSHInfo) Reset() {
	*x = Args_Connection_SSHInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Connection_SSHInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Connection_SSHInfo) ProtoMessage() {}

func (x *Args_Connection_SSHInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Connection_SSHInfo.ProtoReflect.Descriptor instead.
func (*Args_Connection_SSHInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 22, 0}
}

func (x *Args_Connection_SSHInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetPrivateKeyPath() string {
	if x != nil {
		return x.PrivateKeyPath
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetVerifyHostKey() bool {
	if x != nil {
		return x.VerifyHostKey
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetRemoteUser() string {
	if x != nil {
		return x.RemoteUser
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetCompression() bool {
	if x != nil {
		return x.Compression
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetDsaAuthentication() bool {
	if x != nil {
		return x.DsaAuthentication
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

func (x *Args_Connection_SSHInfo) GetForwardAgent() bool {
	if x != nil {
		return x.ForwardAgent
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetForwardX11() bool {
	if x != nil {
		return x.ForwardX11
	}
	return false
}

func (x *Args_Connection_SSHInfo) GetForwardEnv() []string {
	if x != nil {
		return x.ForwardEnv
	}
	return nil
}

func (x *Args_Connection_SSHInfo) GetConnectTimeout() int64 {
	if x != nil {
		return x.ConnectTimeout
	}
	return 0
}

func (x *Args_Connection_SSHInfo) GetSshCommand() string {
	if x != nil {
		return x.SshCommand
	}
	return ""
}

func (x *Args_Connection_SSHInfo) GetProxyCommand() string {
	if x != nil {
		return x.ProxyCommand
	}
	return ""
}

type Args_Connection_WinrmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username            string                              `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password            string                              `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Host                string                              `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                int64                               `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	GuestPort           int64                               `protobuf:"varint,5,opt,name=guest_port,json=guestPort,proto3" json:"guest_port,omitempty"`
	MaxTries            int64                               `protobuf:"varint,6,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	RetryDelay          int64                               `protobuf:"varint,7,opt,name=retry_delay,json=retryDelay,proto3" json:"retry_delay,omitempty"`
	Timeout             int64                               `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Transport           Args_Connection_WinrmInfo_Transport `protobuf:"varint,9,opt,name=transport,proto3,enum=hashicorp.vagrant.sdk.Args_Connection_WinrmInfo_Transport" json:"transport,omitempty"`
	SslPeerVerification bool                                `protobuf:"varint,10,opt,name=ssl_peer_verification,json=sslPeerVerification,proto3" json:"ssl_peer_verification,omitempty"`
	ExecutionTimeLimit  string                              `protobuf:"bytes,11,opt,name=execution_time_limit,json=executionTimeLimit,proto3" json:"execution_time_limit,omitempty"`
	BasicAuthOnly       bool                                `protobuf:"varint,12,opt,name=basic_auth_only,json=basicAuthOnly,proto3" json:"basic_auth_only,omitempty"`
	Codepage            string                              `protobuf:"bytes,13,opt,name=codepage,proto3" json:"codepage,omitempty"`
}

func (x *Args_Connection_WinrmInfo) Reset() {
	*x = Args_Connection_WinrmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Connection_WinrmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Connection_WinrmInfo) ProtoMessage() {}

func (x *Args_Connection_WinrmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Connection_WinrmInfo.ProtoReflect.Descriptor instead.
func (*Args_Connection_WinrmInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 22, 1}
}

func (x *Args_Connection_WinrmInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Args_Connection_WinrmInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Args_Connection_WinrmInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Args_Connection_WinrmInfo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Args_Connection_WinrmInfo) GetGuestPort() int64 {
	if x != nil {
		return x.GuestPort
	}
	return 0
}

func (x *Args_Connection_WinrmInfo) GetMaxTries() int64 {
	if x != nil {
		return x.MaxTries
	}
	return 0
}

func (x *Args_Connection_WinrmInfo) GetRetryDelay() int64 {
	if x != nil {
		return x.RetryDelay
	}
	return 0
}

func (x *Args_Connection_WinrmInfo) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Args_Connection_WinrmInfo) GetTransport() Args_Connection_WinrmInfo_Transport {
	if x != nil {
		return x.Transport
	}
	return Args_Connection_WinrmInfo_NEGOTIATE
}

func (x *Args_Connection_WinrmInfo) GetSslPeerVerification() bool {
	if x != nil {
		return x.SslPeerVerification
	}
	return false
}

func (x *Args_Connection_WinrmInfo) GetExecutionTimeLimit() string {
	if x != nil {
		return x.ExecutionTimeLimit
	}
	return ""
}

func (x *Args_Connection_WinrmInfo) GetBasicAuthOnly() bool {
	if x != nil {
		return x.BasicAuthOnly
	}
	return false
}

func (x *Args_Connection_WinrmInfo) GetCodepage() string {
	if x != nil {
		return x.Codepage
	}
	return ""
}

type FuncSpec_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the argument. This may be empty for typed arguments.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type is the type of the argument. All arguments must be encoded using
	// *any.Any so this type specifies the proto Any message type and not
	// a language-specific type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// value is the value for this Value. This is only expected to be set
	// for Args and has no impact on specs.
	Value *anypb.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FuncSpec_Value) Reset() {
	*x = FuncSpec_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Value) ProtoMessage() {}

func (x *FuncSpec_Value) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Value.ProtoReflect.Descriptor instead.
func (*FuncSpec_Value) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FuncSpec_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec_Value) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FuncSpec_Value) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

// Args is the standard argument type for an RPC that is calling a FuncSpec.
type FuncSpec_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of arguments. This will include some of the
	// standard types in this file (in the Args message namespace) as well
	// as custom types declared by the FuncSpec that the plugin is expected
	// to understand how to decode.
	Args []*FuncSpec_Value `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *FuncSpec_Args) Reset() {
	*x = FuncSpec_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Args) ProtoMessage() {}

func (x *FuncSpec_Args) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Args.ProtoReflect.Descriptor instead.
func (*FuncSpec_Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FuncSpec_Args) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

// ConfigureRequest is the request sent once the configuration decoding
// is complete to actually assign the values to the structure.
type Config_ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json is the json data for the structure returned in the StructResp.
	// It is guaranteed to decode cleanly into the target structure.
	Json []byte `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *Config_ConfigureRequest) Reset() {
	*x = Config_ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_ConfigureRequest) ProtoMessage() {}

func (x *Config_ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_ConfigureRequest.ProtoReflect.Descriptor instead.
func (*Config_ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Config_ConfigureRequest) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

// StructResp returns the struct for configuration.
type Config_StructResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// struct is the configuration structure (or empty/nil if one doesn't exist).
	// This struct should have all the proper struct tags for HCL decoding
	// You should do validation on the Configure call.
	Struct *protostructure.Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct,omitempty"`
}

func (x *Config_StructResp) Reset() {
	*x = Config_StructResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_StructResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_StructResp) ProtoMessage() {}

func (x *Config_StructResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_StructResp.ProtoReflect.Descriptor instead.
func (*Config_StructResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Config_StructResp) GetStruct() *protostructure.Struct {
	if x != nil {
		return x.Struct
	}
	return nil
}

type Config_FieldDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Synopsis string `protobuf:"bytes,2,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Summary  string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Optional bool   `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	EnvVar   string `protobuf:"bytes,5,opt,name=env_var,json=envVar,proto3" json:"env_var,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Default  string `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *Config_FieldDocumentation) Reset() {
	*x = Config_FieldDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_FieldDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_FieldDocumentation) ProtoMessage() {}

func (x *Config_FieldDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_FieldDocumentation.ProtoReflect.Descriptor instead.
func (*Config_FieldDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Config_FieldDocumentation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Config_FieldDocumentation) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Config_FieldDocumentation) GetEnvVar() string {
	if x != nil {
		return x.EnvVar
	}
	return ""
}

func (x *Config_FieldDocumentation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Config_FieldDocumentation) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type Config_MapperDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input       string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Config_MapperDocumentation) Reset() {
	*x = Config_MapperDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MapperDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MapperDocumentation) ProtoMessage() {}

func (x *Config_MapperDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MapperDocumentation.ProtoReflect.Descriptor instead.
func (*Config_MapperDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Config_MapperDocumentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_MapperDocumentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_MapperDocumentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Config_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Example     string                                `protobuf:"bytes,2,opt,name=example,proto3" json:"example,omitempty"`
	Input       string                                `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string                                `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Fields      map[string]*Config_FieldDocumentation `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mappers     []*Config_MapperDocumentation         `protobuf:"bytes,6,rep,name=mappers,proto3" json:"mappers,omitempty"`
}

func (x *Config_Documentation) Reset() {
	*x = Config_Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Documentation) ProtoMessage() {}

func (x *Config_Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Documentation.ProtoReflect.Descriptor instead.
func (*Config_Documentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Config_Documentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Config_Documentation) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *Config_Documentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_Documentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_Documentation) GetFields() map[string]*Config_FieldDocumentation {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Config_Documentation) GetMappers() []*Config_MapperDocumentation {
	if x != nil {
		return x.Mappers
	}
	return nil
}

// AuthResponse is returned by the Auth functions.
type Auth_AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authenticated bool `protobuf:"varint,1,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
}

func (x *Auth_AuthResponse) Reset() {
	*x = Auth_AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth_AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_AuthResponse) ProtoMessage() {}

func (x *Auth_AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_AuthResponse.ProtoReflect.Descriptor instead.
func (*Auth_AuthResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Auth_AuthResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type TerminalUI_IsInteractiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interactive bool `protobuf:"varint,1,opt,name=interactive,proto3" json:"interactive,omitempty"`
}

func (x *TerminalUI_IsInteractiveResponse) Reset() {
	*x = TerminalUI_IsInteractiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_IsInteractiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_IsInteractiveResponse) ProtoMessage() {}

func (x *TerminalUI_IsInteractiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_IsInteractiveResponse.ProtoReflect.Descriptor instead.
func (*TerminalUI_IsInteractiveResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TerminalUI_IsInteractiveResponse) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

type TerminalUI_OutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines          []string                       `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	Style          TerminalUI_OutputRequest_Style `protobuf:"varint,2,opt,name=style,proto3,enum=hashicorp.vagrant.sdk.TerminalUI_OutputRequest_Style" json:"style,omitempty"`
	DisableNewLine bool                           `protobuf:"varint,3,opt,name=disable_new_line,json=disableNewLine,proto3" json:"disable_new_line,omitempty"`
}

func (x *TerminalUI_OutputRequest) Reset() {
	*x = TerminalUI_OutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_OutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_OutputRequest) ProtoMessage() {}

func (x *TerminalUI_OutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_OutputRequest.ProtoReflect.Descriptor instead.
func (*TerminalUI_OutputRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 1}
}

func (x *TerminalUI_OutputRequest) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *TerminalUI_OutputRequest) GetStyle() TerminalUI_OutputRequest_Style {
	if x != nil {
		return x.Style
	}
	return TerminalUI_OutputRequest_HEADER
}

func (x *TerminalUI_OutputRequest) GetDisableNewLine() bool {
	if x != nil {
		return x.DisableNewLine
	}
	return false
}

type TerminalUI_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Response_Input
	Event isTerminalUI_Response_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Response) Reset() {
	*x = TerminalUI_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Response) ProtoMessage() {}

func (x *TerminalUI_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Response.ProtoReflect.Descriptor instead.
func (*TerminalUI_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 2}
}

func (m *TerminalUI_Response) GetEvent() isTerminalUI_Response_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Response) GetInput() *TerminalUI_Event_InputResp {
	if x, ok := x.GetEvent().(*TerminalUI_Response_Input); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Response_Event interface {
	isTerminalUI_Response_Event()
}

type TerminalUI_Response_Input struct {
	Input *TerminalUI_Event_InputResp `protobuf:"bytes,1,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Response_Input) isTerminalUI_Response_Event() {}

type TerminalUI_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Event_Line_
	//	*TerminalUI_Event_Status_
	//	*TerminalUI_Event_NamedValues_
	//	*TerminalUI_Event_Raw_
	//	*TerminalUI_Event_Table_
	//	*TerminalUI_Event_StepGroup_
	//	*TerminalUI_Event_Step_
	//	*TerminalUI_Event_Input_
	Event isTerminalUI_Event_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Event) Reset() {
	*x = TerminalUI_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event) ProtoMessage() {}

func (x *TerminalUI_Event) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3}
}

func (m *TerminalUI_Event) GetEvent() isTerminalUI_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Event) GetLine() *TerminalUI_Event_Line {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Line_); ok {
		return x.Line
	}
	return nil
}

func (x *TerminalUI_Event) GetStatus() *TerminalUI_Event_Status {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Status_); ok {
		return x.Status
	}
	return nil
}

func (x *TerminalUI_Event) GetNamedValues() *TerminalUI_Event_NamedValues {
	if x, ok := x.GetEvent().(*TerminalUI_Event_NamedValues_); ok {
		return x.NamedValues
	}
	return nil
}

func (x *TerminalUI_Event) GetRaw() *TerminalUI_Event_Raw {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Raw_); ok {
		return x.Raw
	}
	return nil
}

func (x *TerminalUI_Event) GetTable() *TerminalUI_Event_Table {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Table_); ok {
		return x.Table
	}
	return nil
}

func (x *TerminalUI_Event) GetStepGroup() *TerminalUI_Event_StepGroup {
	if x, ok := x.GetEvent().(*TerminalUI_Event_StepGroup_); ok {
		return x.StepGroup
	}
	return nil
}

func (x *TerminalUI_Event) GetStep() *TerminalUI_Event_Step {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Step_); ok {
		return x.Step
	}
	return nil
}

func (x *TerminalUI_Event) GetInput() *TerminalUI_Event_Input {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Input_); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Event_Event interface {
	isTerminalUI_Event_Event()
}

type TerminalUI_Event_Line_ struct {
	Line *TerminalUI_Event_Line `protobuf:"bytes,1,opt,name=line,proto3,oneof"`
}

type TerminalUI_Event_Status_ struct {
	Status *TerminalUI_Event_Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type TerminalUI_Event_NamedValues_ struct {
	NamedValues *TerminalUI_Event_NamedValues `protobuf:"bytes,3,opt,name=named_values,json=namedValues,proto3,oneof"`
}

type TerminalUI_Event_Raw_ struct {
	Raw *TerminalUI_Event_Raw `protobuf:"bytes,4,opt,name=raw,proto3,oneof"`
}

type TerminalUI_Event_Table_ struct {
	Table *TerminalUI_Event_Table `protobuf:"bytes,5,opt,name=table,proto3,oneof"`
}

type TerminalUI_Event_StepGroup_ struct {
	StepGroup *TerminalUI_Event_StepGroup `protobuf:"bytes,6,opt,name=step_group,json=stepGroup,proto3,oneof"`
}

type TerminalUI_Event_Step_ struct {
	Step *TerminalUI_Event_Step `protobuf:"bytes,7,opt,name=step,proto3,oneof"`
}

type TerminalUI_Event_Input_ struct {
	Input *TerminalUI_Event_Input `protobuf:"bytes,8,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Event_Line_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Status_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_NamedValues_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Raw_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Table_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_StepGroup_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Step_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Input_) isTerminalUI_Event_Event() {}

type TerminalUI_Event_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Style  string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
	Secret bool   `protobuf:"varint,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TerminalUI_Event_Input) Reset() {
	*x = TerminalUI_Event_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Input) ProtoMessage() {}

func (x *TerminalUI_Event_Input) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Input.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Input) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 0}
}

func (x *TerminalUI_Event_Input) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetSecret() bool {
	if x != nil {
		return x.Secret
	}
	return false
}

type TerminalUI_Event_InputResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string         `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TerminalUI_Event_InputResp) Reset() {
	*x = TerminalUI_Event_InputResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_InputResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_InputResp) ProtoMessage() {}

func (x *TerminalUI_Event_InputResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_InputResp.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_InputResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 1}
}

func (x *TerminalUI_Event_InputResp) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TerminalUI_Event_InputResp) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type TerminalUI_Event_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Step   bool   `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *TerminalUI_Event_Status) Reset() {
	*x = TerminalUI_Event_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Status) ProtoMessage() {}

func (x *TerminalUI_Event_Status) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Status.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Status) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 2}
}

func (x *TerminalUI_Event_Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetStep() bool {
	if x != nil {
		return x.Step
	}
	return false
}

type TerminalUI_Event_Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg            string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Style          string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
	DisableNewLine bool   `protobuf:"varint,3,opt,name=disable_new_line,json=disableNewLine,proto3" json:"disable_new_line,omitempty"`
}

func (x *TerminalUI_Event_Line) Reset() {
	*x = TerminalUI_Event_Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Line) ProtoMessage() {}

func (x *TerminalUI_Event_Line) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Line.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Line) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 3}
}

func (x *TerminalUI_Event_Line) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Line) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *TerminalUI_Event_Line) GetDisableNewLine() bool {
	if x != nil {
		return x.DisableNewLine
	}
	return false
}

type TerminalUI_Event_Raw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Stderr bool   `protobuf:"varint,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *TerminalUI_Event_Raw) Reset() {
	*x = TerminalUI_Event_Raw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Raw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Raw) ProtoMessage() {}

func (x *TerminalUI_Event_Raw) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Raw.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Raw) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 4}
}

func (x *TerminalUI_Event_Raw) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TerminalUI_Event_Raw) GetStderr() bool {
	if x != nil {
		return x.Stderr
	}
	return false
}

type TerminalUI_Event_NamedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TerminalUI_Event_NamedValue) Reset() {
	*x = TerminalUI_Event_NamedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValue) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValue) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValue.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValue) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 5}
}

func (x *TerminalUI_Event_NamedValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TerminalUI_Event_NamedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TerminalUI_Event_NamedValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*TerminalUI_Event_NamedValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TerminalUI_Event_NamedValues) Reset() {
	*x = TerminalUI_Event_NamedValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValues) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValues) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValues.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValues) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 6}
}

func (x *TerminalUI_Event_NamedValues) GetValues() []*TerminalUI_Event_NamedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type TerminalUI_Event_TableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *TerminalUI_Event_TableEntry) Reset() {
	*x = TerminalUI_Event_TableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableEntry) ProtoMessage() {}

func (x *TerminalUI_Event_TableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableEntry.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableEntry) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 7}
}

func (x *TerminalUI_Event_TableEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TerminalUI_Event_TableEntry) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type TerminalUI_Event_TableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TerminalUI_Event_TableEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *TerminalUI_Event_TableRow) Reset() {
	*x = TerminalUI_Event_TableRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableRow) ProtoMessage() {}

func (x *TerminalUI_Event_TableRow) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableRow.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableRow) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 8}
}

func (x *TerminalUI_Event_TableRow) GetEntries() []*TerminalUI_Event_TableEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TerminalUI_Event_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []string                     `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Rows    []*TerminalUI_Event_TableRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TerminalUI_Event_Table) Reset() {
	*x = TerminalUI_Event_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Table) ProtoMessage() {}

func (x *TerminalUI_Event_Table) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Table.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Table) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 9}
}

func (x *TerminalUI_Event_Table) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TerminalUI_Event_Table) GetRows() []*TerminalUI_Event_TableRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TerminalUI_Event_StepGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Close bool `protobuf:"varint,1,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *TerminalUI_Event_StepGroup) Reset() {
	*x = TerminalUI_Event_StepGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_StepGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_StepGroup) ProtoMessage() {}

func (x *TerminalUI_Event_StepGroup) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_StepGroup.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_StepGroup) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 10}
}

func (x *TerminalUI_Event_StepGroup) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

type TerminalUI_Event_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Close  bool   `protobuf:"varint,2,opt,name=close,proto3" json:"close,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Output []byte `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *TerminalUI_Event_Step) Reset() {
	*x = TerminalUI_Event_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Step) ProtoMessage() {}

func (x *TerminalUI_Event_Step) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Step.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Step) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 11}
}

func (x *TerminalUI_Event_Step) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TerminalUI_Event_Step) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

func (x *TerminalUI_Event_Step) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type Map_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of argument types.
	Args *FuncSpec_Args `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
	// result is the desired result type.
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Request) Reset() {
	*x = Map_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Request) ProtoMessage() {}

func (x *Map_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Request.ProtoReflect.Descriptor instead.
func (*Map_Request) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Map_Request) GetArgs() *FuncSpec_Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Map_Request) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type Map_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// result is the mapped data type that matches the type expected
	// by the MapRequest.result field.
	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Response) Reset() {
	*x = Map_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Response) ProtoMessage() {}

func (x *Map_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Response.ProtoReflect.Descriptor instead.
func (*Map_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Map_Response) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Map_ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FuncSpec
	Funcs []*FuncSpec `protobuf:"bytes,1,rep,name=funcs,proto3" json:"funcs,omitempty"`
}

func (x *Map_ListResponse) Reset() {
	*x = Map_ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_ListResponse) ProtoMessage() {}

func (x *Map_ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_ListResponse.ProtoReflect.Descriptor instead.
func (*Map_ListResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Map_ListResponse) GetFuncs() []*FuncSpec {
	if x != nil {
		return x.Funcs
	}
	return nil
}

type StateBag_GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StateBag_GetRequest) Reset() {
	*x = StateBag_GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetRequest) ProtoMessage() {}

func (x *StateBag_GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetRequest.ProtoReflect.Descriptor instead.
func (*StateBag_GetRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 0}
}

func (x *StateBag_GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StateBag_GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_GetResponse) Reset() {
	*x = StateBag_GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetResponse) ProtoMessage() {}

func (x *StateBag_GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetResponse.ProtoReflect.Descriptor instead.
func (*StateBag_GetResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 1}
}

func (x *StateBag_GetResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_GetOkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_GetOkResponse) Reset() {
	*x = StateBag_GetOkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetOkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetOkResponse) ProtoMessage() {}

func (x *StateBag_GetOkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetOkResponse.ProtoReflect.Descriptor instead.
func (*StateBag_GetOkResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 2}
}

func (x *StateBag_GetOkResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StateBag_GetOkResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_PutRequest) Reset() {
	*x = StateBag_PutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_PutRequest) ProtoMessage() {}

func (x *StateBag_PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_PutRequest.ProtoReflect.Descriptor instead.
func (*StateBag_PutRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 3}
}

func (x *StateBag_PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateBag_PutRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_PutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag_PutResponse) Reset() {
	*x = StateBag_PutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_PutResponse) ProtoMessage() {}

func (x *StateBag_PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_PutResponse.ProtoReflect.Descriptor instead.
func (*StateBag_PutResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 4}
}

type StateBag_RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StateBag_RemoveRequest) Reset() {
	*x = StateBag_RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_RemoveRequest) ProtoMessage() {}

func (x *StateBag_RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_RemoveRequest.ProtoReflect.Descriptor instead.
func (*StateBag_RemoveRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 5}
}

func (x *StateBag_RemoveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StateBag_RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag_RemoveResponse) Reset() {
	*x = StateBag_RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_RemoveResponse) ProtoMessage() {}

func (x *StateBag_RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_RemoveResponse.ProtoReflect.Descriptor instead.
func (*StateBag_RemoveResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 6}
}

type PluginInfo_ComponentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component []uint32 `protobuf:"varint,1,rep,packed,name=component,proto3" json:"component,omitempty"`
}

func (x *PluginInfo_ComponentList) Reset() {
	*x = PluginInfo_ComponentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfo_ComponentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo_ComponentList) ProtoMessage() {}

func (x *PluginInfo_ComponentList) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo_ComponentList.ProtoReflect.Descriptor instead.
func (*PluginInfo_ComponentList) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PluginInfo_ComponentList) GetComponent() []uint32 {
	if x != nil {
		return x.Component
	}
	return nil
}

type PluginInfo_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PluginInfo_Name) Reset() {
	*x = PluginInfo_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginInfo_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginInfo_Name) ProtoMessage() {}

func (x *PluginInfo_Name) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginInfo_Name.ProtoReflect.Descriptor instead.
func (*PluginInfo_Name) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PluginInfo_Name) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PluginManager_PluginsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *PluginManager_PluginsRequest) Reset() {
	*x = PluginManager_PluginsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginManager_PluginsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManager_PluginsRequest) ProtoMessage() {}

func (x *PluginManager_PluginsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManager_PluginsRequest.ProtoReflect.Descriptor instead.
func (*PluginManager_PluginsRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PluginManager_PluginsRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type PluginManager_PluginsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins []*PluginManager_Plugin `protobuf:"bytes,1,rep,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *PluginManager_PluginsResponse) Reset() {
	*x = PluginManager_PluginsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginManager_PluginsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManager_PluginsResponse) ProtoMessage() {}

func (x *PluginManager_PluginsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManager_PluginsResponse.ProtoReflect.Descriptor instead.
func (*PluginManager_PluginsResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 1}
}

func (x *PluginManager_PluginsResponse) GetPlugins() []*PluginManager_Plugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type PluginManager_Plugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   string     `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Plugin *anypb.Any `protobuf:"bytes,3,opt,name=plugin,proto3" json:"plugin,omitempty"`
}

func (x *PluginManager_Plugin) Reset() {
	*x = PluginManager_Plugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginManager_Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginManager_Plugin) ProtoMessage() {}

func (x *PluginManager_Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginManager_Plugin.ProtoReflect.Descriptor instead.
func (*PluginManager_Plugin) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 2}
}

func (x *PluginManager_Plugin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginManager_Plugin) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginManager_Plugin) GetPlugin() *anypb.Any {
	if x != nil {
		return x.Plugin
	}
	return nil
}

type Provider_UsableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUsable bool `protobuf:"varint,1,opt,name=is_usable,json=isUsable,proto3" json:"is_usable,omitempty"`
}

func (x *Provider_UsableResp) Reset() {
	*x = Provider_UsableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_UsableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_UsableResp) ProtoMessage() {}

func (x *Provider_UsableResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_UsableResp.ProtoReflect.Descriptor instead.
func (*Provider_UsableResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Provider_UsableResp) GetIsUsable() bool {
	if x != nil {
		return x.IsUsable
	}
	return false
}

type Provider_InstalledResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInstalled bool `protobuf:"varint,1,opt,name=is_installed,json=isInstalled,proto3" json:"is_installed,omitempty"`
}

func (x *Provider_InstalledResp) Reset() {
	*x = Provider_InstalledResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_InstalledResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_InstalledResp) ProtoMessage() {}

func (x *Provider_InstalledResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_InstalledResp.ProtoReflect.Descriptor instead.
func (*Provider_InstalledResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Provider_InstalledResp) GetIsInstalled() bool {
	if x != nil {
		return x.IsInstalled
	}
	return false
}

type Provider_ActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuncArgs *FuncSpec_Args `protobuf:"bytes,2,opt,name=func_args,json=funcArgs,proto3" json:"func_args,omitempty"`
}

func (x *Provider_ActionRequest) Reset() {
	*x = Provider_ActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_ActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_ActionRequest) ProtoMessage() {}

func (x *Provider_ActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_ActionRequest.ProtoReflect.Descriptor instead.
func (*Provider_ActionRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Provider_ActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider_ActionRequest) GetFuncArgs() *FuncSpec_Args {
	if x != nil {
		return x.FuncArgs
	}
	return nil
}

type Command_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongName     string            `protobuf:"bytes,1,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName    string            `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Description  string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue string            `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Type         Command_Flag_Type `protobuf:"varint,5,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Flag) Reset() {
	*x = Command_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Flag) ProtoMessage() {}

func (x *Command_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Flag.ProtoReflect.Descriptor instead.
func (*Command_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Command_Flag) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Command_Flag) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Command_Flag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Command_Flag) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Command_Flag) GetType() Command_Flag_Type {
	if x != nil {
		return x.Type
	}
	return Command_Flag_STRING
}

type Command_CommandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Help        string                 `protobuf:"bytes,2,opt,name=help,proto3" json:"help,omitempty"`
	Synopsis    string                 `protobuf:"bytes,3,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Flags       []*Command_Flag        `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty"`
	Subcommands []*Command_CommandInfo `protobuf:"bytes,5,rep,name=subcommands,proto3" json:"subcommands,omitempty"`
}

func (x *Command_CommandInfo) Reset() {
	*x = Command_CommandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_CommandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_CommandInfo) ProtoMessage() {}

func (x *Command_CommandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_CommandInfo.ProtoReflect.Descriptor instead.
func (*Command_CommandInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 1}
}

func (x *Command_CommandInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Command_CommandInfo) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Command_CommandInfo) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Command_CommandInfo) GetFlags() []*Command_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command_CommandInfo) GetSubcommands() []*Command_CommandInfo {
	if x != nil {
		return x.Subcommands
	}
	return nil
}

type Command_CommandInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandInfo *Command_CommandInfo `protobuf:"bytes,1,opt,name=command_info,json=commandInfo,proto3" json:"command_info,omitempty"`
}

func (x *Command_CommandInfoResp) Reset() {
	*x = Command_CommandInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_CommandInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_CommandInfoResp) ProtoMessage() {}

func (x *Command_CommandInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_CommandInfoResp.ProtoReflect.Descriptor instead.
func (*Command_CommandInfoResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 2}
}

func (x *Command_CommandInfoResp) GetCommandInfo() *Command_CommandInfo {
	if x != nil {
		return x.CommandInfo
	}
	return nil
}

type Command_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Command_ExecuteResp) Reset() {
	*x = Command_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteResp) ProtoMessage() {}

func (x *Command_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Command_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 3}
}

func (x *Command_ExecuteResp) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Command_ExecuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec        *FuncSpec_Args `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	CommandArgs []string       `protobuf:"bytes,2,rep,name=command_args,json=commandArgs,proto3" json:"command_args,omitempty"`
}

func (x *Command_ExecuteReq) Reset() {
	*x = Command_ExecuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteReq) ProtoMessage() {}

func (x *Command_ExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteReq.ProtoReflect.Descriptor instead.
func (*Command_ExecuteReq) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 4}
}

func (x *Command_ExecuteReq) GetSpec() *FuncSpec_Args {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Command_ExecuteReq) GetCommandArgs() []string {
	if x != nil {
		return x.CommandArgs
	}
	return nil
}

type Command_ExecuteSpecReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandArgs []string `protobuf:"bytes,1,rep,name=command_args,json=commandArgs,proto3" json:"command_args,omitempty"`
}

func (x *Command_ExecuteSpecReq) Reset() {
	*x = Command_ExecuteSpecReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteSpecReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteSpecReq) ProtoMessage() {}

func (x *Command_ExecuteSpecReq) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteSpecReq.ProtoReflect.Descriptor instead.
func (*Command_ExecuteSpecReq) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 5}
}

func (x *Command_ExecuteSpecReq) GetCommandArgs() []string {
	if x != nil {
		return x.CommandArgs
	}
	return nil
}

type Command_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []*Command_Arguments_Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	Args  []string                  `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *Command_Arguments) Reset() {
	*x = Command_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments) ProtoMessage() {}

func (x *Command_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments.ProtoReflect.Descriptor instead.
func (*Command_Arguments) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 6}
}

func (x *Command_Arguments) GetFlags() []*Command_Arguments_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command_Arguments) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type Command_Arguments_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//	*Command_Arguments_Flag_String_
	//	*Command_Arguments_Flag_Bool
	Value isCommand_Arguments_Flag_Value `protobuf_oneof:"value"`
	Type  Command_Arguments_Flag_Type    `protobuf:"varint,4,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Arguments_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Arguments_Flag) Reset() {
	*x = Command_Arguments_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments_Flag) ProtoMessage() {}

func (x *Command_Arguments_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments_Flag.ProtoReflect.Descriptor instead.
func (*Command_Arguments_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 6, 0}
}

func (x *Command_Arguments_Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Command_Arguments_Flag) GetValue() isCommand_Arguments_Flag_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Command_Arguments_Flag) GetString_() string {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Command_Arguments_Flag) GetBool() bool {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Command_Arguments_Flag) GetType() Command_Arguments_Flag_Type {
	if x != nil {
		return x.Type
	}
	return Command_Arguments_Flag_STRING
}

type isCommand_Arguments_Flag_Value interface {
	isCommand_Arguments_Flag_Value()
}

type Command_Arguments_Flag_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Command_Arguments_Flag_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

func (*Command_Arguments_Flag_String_) isCommand_Arguments_Flag_Value() {}

func (*Command_Arguments_Flag_Bool) isCommand_Arguments_Flag_Value() {}

type Communicator_MatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match bool `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *Communicator_MatchResp) Reset() {
	*x = Communicator_MatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_MatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_MatchResp) ProtoMessage() {}

func (x *Communicator_MatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_MatchResp.ProtoReflect.Descriptor instead.
func (*Communicator_MatchResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Communicator_MatchResp) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

type Communicator_ReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *Communicator_ReadyResp) Reset() {
	*x = Communicator_ReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ReadyResp) ProtoMessage() {}

func (x *Communicator_ReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ReadyResp.ProtoReflect.Descriptor instead.
func (*Communicator_ReadyResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Communicator_ReadyResp) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type Communicator_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32  `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Stdout   string `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr   string `protobuf:"bytes,3,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *Communicator_ExecuteResp) Reset() {
	*x = Communicator_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ExecuteResp) ProtoMessage() {}

func (x *Communicator_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Communicator_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 2}
}

func (x *Communicator_ExecuteResp) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *Communicator_ExecuteResp) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *Communicator_ExecuteResp) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

type Communicator_TestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *Communicator_TestResp) Reset() {
	*x = Communicator_TestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_TestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_TestResp) ProtoMessage() {}

func (x *Communicator_TestResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_TestResp.ProtoReflect.Descriptor instead.
func (*Communicator_TestResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 3}
}

func (x *Communicator_TestResp) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type Communicator_Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
}

func (x *Communicator_Command) Reset() {
	*x = Communicator_Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_Command) ProtoMessage() {}

func (x *Communicator_Command) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_Command.ProtoReflect.Descriptor instead.
func (*Communicator_Command) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 4}
}

func (x *Communicator_Command) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type Platform_DetectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detected bool `protobuf:"varint,1,opt,name=detected,proto3" json:"detected,omitempty"`
}

func (x *Platform_DetectResp) Reset() {
	*x = Platform_DetectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_DetectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_DetectResp) ProtoMessage() {}

func (x *Platform_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_DetectResp.ProtoReflect.Descriptor instead.
func (*Platform_DetectResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Platform_DetectResp) GetDetected() bool {
	if x != nil {
		return x.Detected
	}
	return false
}

type Platform_ParentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
}

func (x *Platform_ParentResp) Reset() {
	*x = Platform_ParentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_ParentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_ParentResp) ProtoMessage() {}

func (x *Platform_ParentResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_ParentResp.ProtoReflect.Descriptor instead.
func (*Platform_ParentResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 1}
}

func (x *Platform_ParentResp) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

type Platform_Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Platform_Capability) Reset() {
	*x = Platform_Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_Capability) ProtoMessage() {}

func (x *Platform_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_Capability.ProtoReflect.Descriptor instead.
func (*Platform_Capability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2}
}

type Platform_Capability_NamedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuncArgs *FuncSpec_Args `protobuf:"bytes,2,opt,name=func_args,json=funcArgs,proto3" json:"func_args,omitempty"`
}

func (x *Platform_Capability_NamedRequest) Reset() {
	*x = Platform_Capability_NamedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_Capability_NamedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_Capability_NamedRequest) ProtoMessage() {}

func (x *Platform_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_Capability_NamedRequest.ProtoReflect.Descriptor instead.
func (*Platform_Capability_NamedRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2, 0}
}

func (x *Platform_Capability_NamedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Platform_Capability_NamedRequest) GetFuncArgs() *FuncSpec_Args {
	if x != nil {
		return x.FuncArgs
	}
	return nil
}

type Platform_Capability_CheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasCapability bool `protobuf:"varint,1,opt,name=has_capability,json=hasCapability,proto3" json:"has_capability,omitempty"`
}

func (x *Platform_Capability_CheckResp) Reset() {
	*x = Platform_Capability_CheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_Capability_CheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_Capability_CheckResp) ProtoMessage() {}

func (x *Platform_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_Capability_CheckResp.ProtoReflect.Descriptor instead.
func (*Platform_Capability_CheckResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2, 1}
}

func (x *Platform_Capability_CheckResp) GetHasCapability() bool {
	if x != nil {
		return x.HasCapability
	}
	return false
}

type Platform_Capability_Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Platform_Capability_Resp) Reset() {
	*x = Platform_Capability_Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Platform_Capability_Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Platform_Capability_Resp) ProtoMessage() {}

func (x *Platform_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Platform_Capability_Resp.ProtoReflect.Descriptor instead.
func (*Platform_Capability_Resp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2, 2}
}

func (x *Platform_Capability_Resp) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type SyncedFolder_UsableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usable bool `protobuf:"varint,1,opt,name=usable,proto3" json:"usable,omitempty"`
}

func (x *SyncedFolder_UsableResp) Reset() {
	*x = SyncedFolder_UsableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncedFolder_UsableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncedFolder_UsableResp) ProtoMessage() {}

func (x *SyncedFolder_UsableResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncedFolder_UsableResp.ProtoReflect.Descriptor instead.
func (*SyncedFolder_UsableResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 0}
}

func (x *SyncedFolder_UsableResp) GetUsable() bool {
	if x != nil {
		return x.Usable
	}
	return false
}

// Box references a Box.
type Ref_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Provider   string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Ref_Box) Reset() {
	*x = Ref_Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Box) ProtoMessage() {}

func (x *Ref_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Box.ProtoReflect.Descriptor instead.
func (*Ref_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Ref_Box) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Box) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ref_Box) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Ref_Box) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

// References a basis configuration (analogous to VAGRANT_HOME)
type Ref_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Basis) Reset() {
	*x = Ref_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Basis) ProtoMessage() {}

func (x *Ref_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Basis.ProtoReflect.Descriptor instead.
func (*Ref_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1}
}

func (x *Ref_Basis) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Basis) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ref_Basis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Represents a Project (in vagrant-agogo), an Environment (in vagrant-ruby)
type Ref_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string     `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Path       string     `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Basis      *Ref_Basis `protobuf:"bytes,3,opt,name=basis,proto3" json:"basis,omitempty"`
	Name       string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Project) Reset() {
	*x = Ref_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Project) ProtoMessage() {}

func (x *Ref_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Project.ProtoReflect.Descriptor instead.
func (*Ref_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 2}
}

func (x *Ref_Project) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Project) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ref_Project) GetBasis() *Ref_Basis {
	if x != nil {
		return x.Basis
	}
	return nil
}

func (x *Ref_Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// References a Target (in vagrant-ruby this is a Machine)
type Ref_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string       `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Project    *Ref_Project `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	Name       string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Target) Reset() {
	*x = Ref_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Target) ProtoMessage() {}

func (x *Ref_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Target.ProtoReflect.Descriptor instead.
func (*Ref_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 3}
}

func (x *Ref_Target) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Target) GetProject() *Ref_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Ref_Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Target_ResourceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Target_ResourceIdResponse) Reset() {
	*x = Target_ResourceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_ResourceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_ResourceIdResponse) ProtoMessage() {}

func (x *Target_ResourceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_ResourceIdResponse.ProtoReflect.Descriptor instead.
func (*Target_ResourceIdResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Target_ResourceIdResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type Target_RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *anypb.Any `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *Target_RecordResponse) Reset() {
	*x = Target_RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_RecordResponse) ProtoMessage() {}

func (x *Target_RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_RecordResponse.ProtoReflect.Descriptor instead.
func (*Target_RecordResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 1}
}

func (x *Target_RecordResponse) GetRecord() *anypb.Any {
	if x != nil {
		return x.Record
	}
	return nil
}

type Target_NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_NameResponse) Reset() {
	*x = Target_NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_NameResponse) ProtoMessage() {}

func (x *Target_NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_NameResponse.ProtoReflect.Descriptor instead.
func (*Target_NameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 2}
}

func (x *Target_NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Target_ProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Ref_Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *Target_ProjectResponse) Reset() {
	*x = Target_ProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_ProjectResponse) ProtoMessage() {}

func (x *Target_ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_ProjectResponse.ProtoReflect.Descriptor instead.
func (*Target_ProjectResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 3}
}

func (x *Target_ProjectResponse) GetProject() *Ref_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type Target_SetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_SetNameRequest) Reset() {
	*x = Target_SetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_SetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_SetNameRequest) ProtoMessage() {}

func (x *Target_SetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_SetNameRequest.ProtoReflect.Descriptor instead.
func (*Target_SetNameRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 4}
}

func (x *Target_SetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VagrantfileName
type Target_VagrantfileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_VagrantfileNameResponse) Reset() {
	*x = Target_VagrantfileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_VagrantfileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_VagrantfileNameResponse) ProtoMessage() {}

func (x *Target_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_VagrantfileNameResponse.ProtoReflect.Descriptor instead.
func (*Target_VagrantfileNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 5}
}

func (x *Target_VagrantfileNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VagrantfilePath
type Target_VagrantfilePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Target_VagrantfilePathResponse) Reset() {
	*x = Target_VagrantfilePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_VagrantfilePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_VagrantfilePathResponse) ProtoMessage() {}

func (x *Target_VagrantfilePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_VagrantfilePathResponse.ProtoReflect.Descriptor instead.
func (*Target_VagrantfilePathResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 6}
}

func (x *Target_VagrantfilePathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// UpdatedAt
type Target_UpdatedAtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Target_UpdatedAtResponse) Reset() {
	*x = Target_UpdatedAtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_UpdatedAtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_UpdatedAtResponse) ProtoMessage() {}

func (x *Target_UpdatedAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_UpdatedAtResponse.ProtoReflect.Descriptor instead.
func (*Target_UpdatedAtResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 7}
}

func (x *Target_UpdatedAtResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Target_GetUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Target_GetUUIDResponse) Reset() {
	*x = Target_GetUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_GetUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_GetUUIDResponse) ProtoMessage() {}

func (x *Target_GetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_GetUUIDResponse.ProtoReflect.Descriptor instead.
func (*Target_GetUUIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 8}
}

func (x *Target_GetUUIDResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Target_SetUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Target_SetUUIDRequest) Reset() {
	*x = Target_SetUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_SetUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_SetUUIDRequest) ProtoMessage() {}

func (x *Target_SetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_SetUUIDRequest.ProtoReflect.Descriptor instead.
func (*Target_SetUUIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 9}
}

func (x *Target_SetUUIDRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

//*********************************************
// Machine message used with machine service
//********************************************
type Target_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Target_Machine) Reset() {
	*x = Target_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine) ProtoMessage() {}

func (x *Target_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine.ProtoReflect.Descriptor instead.
func (*Target_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10}
}

type Target_Machine_SetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Target_Machine_SetIDRequest) Reset() {
	*x = Target_Machine_SetIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SetIDRequest) ProtoMessage() {}

func (x *Target_Machine_SetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SetIDRequest.ProtoReflect.Descriptor instead.
func (*Target_Machine_SetIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 0}
}

func (x *Target_Machine_SetIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Target_Machine_GetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Target_Machine_GetIDResponse) Reset() {
	*x = Target_Machine_GetIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_GetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_GetIDResponse) ProtoMessage() {}

func (x *Target_Machine_GetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_GetIDResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_GetIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 1}
}

func (x *Target_Machine_GetIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Target_Machine_SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *Args_Target_Machine_State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Target_Machine_SetStateRequest) Reset() {
	*x = Target_Machine_SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SetStateRequest) ProtoMessage() {}

func (x *Target_Machine_SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SetStateRequest.ProtoReflect.Descriptor instead.
func (*Target_Machine_SetStateRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 2}
}

func (x *Target_Machine_SetStateRequest) GetState() *Args_Target_Machine_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Target_Machine_GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *Args_Target_Machine_State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Target_Machine_GetStateResponse) Reset() {
	*x = Target_Machine_GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_GetStateResponse) ProtoMessage() {}

func (x *Target_Machine_GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_GetStateResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_GetStateResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 3}
}

func (x *Target_Machine_GetStateResponse) GetState() *Args_Target_Machine_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Target_Machine_ConnectionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionInfo map[string]*anypb.Any `protobuf:"bytes,1,rep,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Target_Machine_ConnectionInfoResponse) Reset() {
	*x = Target_Machine_ConnectionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_ConnectionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_ConnectionInfoResponse) ProtoMessage() {}

func (x *Target_Machine_ConnectionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_ConnectionInfoResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_ConnectionInfoResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 4}
}

func (x *Target_Machine_ConnectionInfoResponse) GetConnectionInfo() map[string]*anypb.Any {
	if x != nil {
		return x.ConnectionInfo
	}
	return nil
}

type Target_Machine_UIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Target_Machine_UIDResponse) Reset() {
	*x = Target_Machine_UIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_UIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_UIDResponse) ProtoMessage() {}

func (x *Target_Machine_UIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_UIDResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_UIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 5}
}

func (x *Target_Machine_UIDResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Target_Machine_SyncedFoldersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncedFolders []*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder `protobuf:"bytes,1,rep,name=synced_folders,json=syncedFolders,proto3" json:"synced_folders,omitempty"`
}

func (x *Target_Machine_SyncedFoldersResponse) Reset() {
	*x = Target_Machine_SyncedFoldersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SyncedFoldersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SyncedFoldersResponse) ProtoMessage() {}

func (x *Target_Machine_SyncedFoldersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SyncedFoldersResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_SyncedFoldersResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 6}
}

func (x *Target_Machine_SyncedFoldersResponse) GetSyncedFolders() []*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder {
	if x != nil {
		return x.SyncedFolders
	}
	return nil
}

type Target_Machine_SyncedFoldersResponse_MachineSyncedFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugin *Args_SyncedFolder        `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Folder *Vagrantfile_SyncedFolder `protobuf:"bytes,2,opt,name=folder,proto3" json:"folder,omitempty"`
}

func (x *Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) Reset() {
	*x = Target_Machine_SyncedFoldersResponse_MachineSyncedFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) ProtoMessage() {}

func (x *Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SyncedFoldersResponse_MachineSyncedFolder.ProtoReflect.Descriptor instead.
func (*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 10, 6, 0}
}

func (x *Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) GetPlugin() *Args_SyncedFolder {
	if x != nil {
		return x.Plugin
	}
	return nil
}

func (x *Target_Machine_SyncedFoldersResponse_MachineSyncedFolder) GetFolder() *Vagrantfile_SyncedFolder {
	if x != nil {
		return x.Folder
	}
	return nil
}

type Project_ResourceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Project_ResourceIdResponse) Reset() {
	*x = Project_ResourceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_ResourceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ResourceIdResponse) ProtoMessage() {}

func (x *Project_ResourceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ResourceIdResponse.ProtoReflect.Descriptor instead.
func (*Project_ResourceIdResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Project_ResourceIdResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type Project_TargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Project_TargetRequest) Reset() {
	*x = Project_TargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetRequest) ProtoMessage() {}

func (x *Project_TargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetRequest.ProtoReflect.Descriptor instead.
func (*Project_TargetRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 1}
}

func (x *Project_TargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Project_TargetNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Project_TargetNamesResponse) Reset() {
	*x = Project_TargetNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetNamesResponse) ProtoMessage() {}

func (x *Project_TargetNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetNamesResponse.ProtoReflect.Descriptor instead.
func (*Project_TargetNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 2}
}

func (x *Project_TargetNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Project_TargetIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *Project_TargetIdsResponse) Reset() {
	*x = Project_TargetIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetIdsResponse) ProtoMessage() {}

func (x *Project_TargetIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetIdsResponse.ProtoReflect.Descriptor instead.
func (*Project_TargetIdsResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 3}
}

func (x *Project_TargetIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Project_MachineAndProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Project_MachineAndProvider) Reset() {
	*x = Project_MachineAndProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_MachineAndProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_MachineAndProvider) ProtoMessage() {}

func (x *Project_MachineAndProvider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_MachineAndProvider.ProtoReflect.Descriptor instead.
func (*Project_MachineAndProvider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 4}
}

func (x *Project_MachineAndProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_MachineAndProvider) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type Project_MachineNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Project_MachineNamesResponse) Reset() {
	*x = Project_MachineNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_MachineNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_MachineNamesResponse) ProtoMessage() {}

func (x *Project_MachineNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_MachineNamesResponse.ProtoReflect.Descriptor instead.
func (*Project_MachineNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 5}
}

func (x *Project_MachineNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Project_ActiveMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Project_MachineAndProvider `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *Project_ActiveMachinesResponse) Reset() {
	*x = Project_ActiveMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_ActiveMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ActiveMachinesResponse) ProtoMessage() {}

func (x *Project_ActiveMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ActiveMachinesResponse.ProtoReflect.Descriptor instead.
func (*Project_ActiveMachinesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 6}
}

func (x *Project_ActiveMachinesResponse) GetMachines() []*Project_MachineAndProvider {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Project_CwdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_CwdResponse) Reset() {
	*x = Project_CwdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_CwdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_CwdResponse) ProtoMessage() {}

func (x *Project_CwdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_CwdResponse.ProtoReflect.Descriptor instead.
func (*Project_CwdResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 7}
}

func (x *Project_CwdResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vagrantfile *Vagrantfile_Vagrantfile `protobuf:"bytes,1,opt,name=vagrantfile,proto3" json:"vagrantfile,omitempty"`
}

func (x *Project_ConfigResponse) Reset() {
	*x = Project_ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ConfigResponse) ProtoMessage() {}

func (x *Project_ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ConfigResponse.ProtoReflect.Descriptor instead.
func (*Project_ConfigResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 8}
}

func (x *Project_ConfigResponse) GetVagrantfile() *Vagrantfile_Vagrantfile {
	if x != nil {
		return x.Vagrantfile
	}
	return nil
}

type Project_VagrantfileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Project_VagrantfileNameResponse) Reset() {
	*x = Project_VagrantfileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_VagrantfileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_VagrantfileNameResponse) ProtoMessage() {}

func (x *Project_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_VagrantfileNameResponse.ProtoReflect.Descriptor instead.
func (*Project_VagrantfileNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 9}
}

func (x *Project_VagrantfileNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Project_VagrantfilePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_VagrantfilePathResponse) Reset() {
	*x = Project_VagrantfilePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_VagrantfilePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_VagrantfilePathResponse) ProtoMessage() {}

func (x *Project_VagrantfilePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_VagrantfilePathResponse.ProtoReflect.Descriptor instead.
func (*Project_VagrantfilePathResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 10}
}

func (x *Project_VagrantfilePathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_HomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_HomeResponse) Reset() {
	*x = Project_HomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_HomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_HomeResponse) ProtoMessage() {}

func (x *Project_HomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_HomeResponse.ProtoReflect.Descriptor instead.
func (*Project_HomeResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 11}
}

func (x *Project_HomeResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_LocalDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_LocalDataResponse) Reset() {
	*x = Project_LocalDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_LocalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_LocalDataResponse) ProtoMessage() {}

func (x *Project_LocalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_LocalDataResponse.ProtoReflect.Descriptor instead.
func (*Project_LocalDataResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 12}
}

func (x *Project_LocalDataResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_TmpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_TmpResponse) Reset() {
	*x = Project_TmpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TmpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TmpResponse) ProtoMessage() {}

func (x *Project_TmpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TmpResponse.ProtoReflect.Descriptor instead.
func (*Project_TmpResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 13}
}

func (x *Project_TmpResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_DefaultPrivateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Project_DefaultPrivateKeyResponse) Reset() {
	*x = Project_DefaultPrivateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_DefaultPrivateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_DefaultPrivateKeyResponse) ProtoMessage() {}

func (x *Project_DefaultPrivateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_DefaultPrivateKeyResponse.ProtoReflect.Descriptor instead.
func (*Project_DefaultPrivateKeyResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 14}
}

func (x *Project_DefaultPrivateKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Vagrantfile_BoxCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *Vagrantfile_BoxCollection) Reset() {
	*x = Vagrantfile_BoxCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_BoxCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_BoxCollection) ProtoMessage() {}

func (x *Vagrantfile_BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_BoxCollection.ProtoReflect.Descriptor instead.
func (*Vagrantfile_BoxCollection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Vagrantfile_BoxCollection) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type Vagrantfile_GetVagrantfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Component:
	//	*Vagrantfile_GetVagrantfileRequest_Project
	//	*Vagrantfile_GetVagrantfileRequest_Box
	//	*Vagrantfile_GetVagrantfileRequest_Basis
	Component isVagrantfile_GetVagrantfileRequest_Component `protobuf_oneof:"component"`
}

func (x *Vagrantfile_GetVagrantfileRequest) Reset() {
	*x = Vagrantfile_GetVagrantfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_GetVagrantfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_GetVagrantfileRequest) ProtoMessage() {}

func (x *Vagrantfile_GetVagrantfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_GetVagrantfileRequest.ProtoReflect.Descriptor instead.
func (*Vagrantfile_GetVagrantfileRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 1}
}

func (m *Vagrantfile_GetVagrantfileRequest) GetComponent() isVagrantfile_GetVagrantfileRequest_Component {
	if m != nil {
		return m.Component
	}
	return nil
}

func (x *Vagrantfile_GetVagrantfileRequest) GetProject() *Ref_Project {
	if x, ok := x.GetComponent().(*Vagrantfile_GetVagrantfileRequest_Project); ok {
		return x.Project
	}
	return nil
}

func (x *Vagrantfile_GetVagrantfileRequest) GetBox() *Ref_Box {
	if x, ok := x.GetComponent().(*Vagrantfile_GetVagrantfileRequest_Box); ok {
		return x.Box
	}
	return nil
}

func (x *Vagrantfile_GetVagrantfileRequest) GetBasis() *Ref_Basis {
	if x, ok := x.GetComponent().(*Vagrantfile_GetVagrantfileRequest_Basis); ok {
		return x.Basis
	}
	return nil
}

type isVagrantfile_GetVagrantfileRequest_Component interface {
	isVagrantfile_GetVagrantfileRequest_Component()
}

type Vagrantfile_GetVagrantfileRequest_Project struct {
	Project *Ref_Project `protobuf:"bytes,1,opt,name=project,proto3,oneof"`
}

type Vagrantfile_GetVagrantfileRequest_Box struct {
	Box *Ref_Box `protobuf:"bytes,2,opt,name=box,proto3,oneof"`
}

type Vagrantfile_GetVagrantfileRequest_Basis struct {
	Basis *Ref_Basis `protobuf:"bytes,3,opt,name=basis,proto3,oneof"`
}

func (*Vagrantfile_GetVagrantfileRequest_Project) isVagrantfile_GetVagrantfileRequest_Component() {}

func (*Vagrantfile_GetVagrantfileRequest_Box) isVagrantfile_GetVagrantfileRequest_Component() {}

func (*Vagrantfile_GetVagrantfileRequest_Basis) isVagrantfile_GetVagrantfileRequest_Component() {}

type Vagrantfile_GetVagrantfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vagrantfile *Vagrantfile_Vagrantfile `protobuf:"bytes,1,opt,name=vagrantfile,proto3" json:"vagrantfile,omitempty"`
}

func (x *Vagrantfile_GetVagrantfileResponse) Reset() {
	*x = Vagrantfile_GetVagrantfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_GetVagrantfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_GetVagrantfileResponse) ProtoMessage() {}

func (x *Vagrantfile_GetVagrantfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_GetVagrantfileResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_GetVagrantfileResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 2}
}

func (x *Vagrantfile_GetVagrantfileResponse) GetVagrantfile() *Vagrantfile_Vagrantfile {
	if x != nil {
		return x.Vagrantfile
	}
	return nil
}

type Vagrantfile_TargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider string                     `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Boxes    *Vagrantfile_BoxCollection `protobuf:"bytes,3,opt,name=boxes,proto3" json:"boxes,omitempty"`
	DataPath string                     `protobuf:"bytes,4,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	Project  *Args_Project              `protobuf:"bytes,5,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *Vagrantfile_TargetRequest) Reset() {
	*x = Vagrantfile_TargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_TargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_TargetRequest) ProtoMessage() {}

func (x *Vagrantfile_TargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_TargetRequest.ProtoReflect.Descriptor instead.
func (*Vagrantfile_TargetRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 3}
}

func (x *Vagrantfile_TargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vagrantfile_TargetRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Vagrantfile_TargetRequest) GetBoxes() *Vagrantfile_BoxCollection {
	if x != nil {
		return x.Boxes
	}
	return nil
}

func (x *Vagrantfile_TargetRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *Vagrantfile_TargetRequest) GetProject() *Args_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type Vagrantfile_TargetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target *Ref_Target `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Vagrantfile_TargetResponse) Reset() {
	*x = Vagrantfile_TargetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_TargetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_TargetResponse) ProtoMessage() {}

func (x *Vagrantfile_TargetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_TargetResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_TargetResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 4}
}

func (x *Vagrantfile_TargetResponse) GetTarget() *Ref_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type Vagrantfile_TargetConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider         string                     `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Boxes            *Vagrantfile_BoxCollection `protobuf:"bytes,3,opt,name=boxes,proto3" json:"boxes,omitempty"`
	DataPath         string                     `protobuf:"bytes,4,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	ValidateProvider bool                       `protobuf:"varint,5,opt,name=validate_provider,json=validateProvider,proto3" json:"validate_provider,omitempty"`
}

func (x *Vagrantfile_TargetConfigRequest) Reset() {
	*x = Vagrantfile_TargetConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_TargetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_TargetConfigRequest) ProtoMessage() {}

func (x *Vagrantfile_TargetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_TargetConfigRequest.ProtoReflect.Descriptor instead.
func (*Vagrantfile_TargetConfigRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 5}
}

func (x *Vagrantfile_TargetConfigRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vagrantfile_TargetConfigRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Vagrantfile_TargetConfigRequest) GetBoxes() *Vagrantfile_BoxCollection {
	if x != nil {
		return x.Boxes
	}
	return nil
}

func (x *Vagrantfile_TargetConfigRequest) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *Vagrantfile_TargetConfigRequest) GetValidateProvider() bool {
	if x != nil {
		return x.ValidateProvider
	}
	return false
}

type Vagrantfile_TargetConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetConfig *Vagrantfile_MachineConfig `protobuf:"bytes,1,opt,name=target_config,json=targetConfig,proto3" json:"target_config,omitempty"`
}

func (x *Vagrantfile_TargetConfigResponse) Reset() {
	*x = Vagrantfile_TargetConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_TargetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_TargetConfigResponse) ProtoMessage() {}

func (x *Vagrantfile_TargetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_TargetConfigResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_TargetConfigResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 6}
}

func (x *Vagrantfile_TargetConfigResponse) GetTargetConfig() *Vagrantfile_MachineConfig {
	if x != nil {
		return x.TargetConfig
	}
	return nil
}

type Vagrantfile_TargetNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *Vagrantfile_TargetNamesResponse) Reset() {
	*x = Vagrantfile_TargetNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_TargetNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_TargetNamesResponse) ProtoMessage() {}

func (x *Vagrantfile_TargetNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_TargetNamesResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_TargetNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 7}
}

func (x *Vagrantfile_TargetNamesResponse) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type Vagrantfile_PrimaryTargetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Vagrantfile_PrimaryTargetNameResponse) Reset() {
	*x = Vagrantfile_PrimaryTargetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_PrimaryTargetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_PrimaryTargetNameResponse) ProtoMessage() {}

func (x *Vagrantfile_PrimaryTargetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_PrimaryTargetNameResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_PrimaryTargetNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8}
}

func (x *Vagrantfile_PrimaryTargetNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Vagrantfile_ConfigVM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowedSyncedFolderTypes   []string          `protobuf:"bytes,1,rep,name=allowed_synced_folder_types,json=allowedSyncedFolderTypes,proto3" json:"allowed_synced_folder_types,omitempty"`
	AllowFstabModification     bool              `protobuf:"varint,2,opt,name=allow_fstab_modification,json=allowFstabModification,proto3" json:"allow_fstab_modification,omitempty"`
	AllowHostsModificaion      bool              `protobuf:"varint,3,opt,name=allow_hosts_modificaion,json=allowHostsModificaion,proto3" json:"allow_hosts_modificaion,omitempty"`
	BaseMac                    string            `protobuf:"bytes,4,opt,name=base_mac,json=baseMac,proto3" json:"base_mac,omitempty"`
	BaseAddress                string            `protobuf:"bytes,5,opt,name=base_address,json=baseAddress,proto3" json:"base_address,omitempty"`
	BootTimeout                int32             `protobuf:"varint,6,opt,name=boot_timeout,json=bootTimeout,proto3" json:"boot_timeout,omitempty"`
	Box                        string            `protobuf:"bytes,7,opt,name=box,proto3" json:"box,omitempty"`
	IgnoreBoxVagrantfile       bool              `protobuf:"varint,8,opt,name=ignore_box_vagrantfile,json=ignoreBoxVagrantfile,proto3" json:"ignore_box_vagrantfile,omitempty"`
	BoxCheckUpdate             bool              `protobuf:"varint,9,opt,name=box_check_update,json=boxCheckUpdate,proto3" json:"box_check_update,omitempty"`
	BoxUrl                     []string          `protobuf:"bytes,10,rep,name=box_url,json=boxUrl,proto3" json:"box_url,omitempty"`
	BoxServerUrl               string            `protobuf:"bytes,11,opt,name=box_server_url,json=boxServerUrl,proto3" json:"box_server_url,omitempty"`
	BoxVersion                 string            `protobuf:"bytes,12,opt,name=box_version,json=boxVersion,proto3" json:"box_version,omitempty"`
	BoxDownloadCaCert          string            `protobuf:"bytes,13,opt,name=box_download_ca_cert,json=boxDownloadCaCert,proto3" json:"box_download_ca_cert,omitempty"`
	BoxDownloadCaPath          string            `protobuf:"bytes,14,opt,name=box_download_ca_path,json=boxDownloadCaPath,proto3" json:"box_download_ca_path,omitempty"`
	BoxDownloadChecksum        string            `protobuf:"bytes,15,opt,name=box_download_checksum,json=boxDownloadChecksum,proto3" json:"box_download_checksum,omitempty"`
	BoxDownloadChecksumType    string            `protobuf:"bytes,16,opt,name=box_download_checksum_type,json=boxDownloadChecksumType,proto3" json:"box_download_checksum_type,omitempty"`
	BoxDownloadClientCert      string            `protobuf:"bytes,17,opt,name=box_download_client_cert,json=boxDownloadClientCert,proto3" json:"box_download_client_cert,omitempty"`
	BoxDownloadInsecure        bool              `protobuf:"varint,18,opt,name=box_download_insecure,json=boxDownloadInsecure,proto3" json:"box_download_insecure,omitempty"`
	BoxDownloadLocationTrusted bool              `protobuf:"varint,19,opt,name=box_download_location_trusted,json=boxDownloadLocationTrusted,proto3" json:"box_download_location_trusted,omitempty"`
	BoxDownloadOptions         map[string]string `protobuf:"bytes,20,rep,name=box_download_options,json=boxDownloadOptions,proto3" json:"box_download_options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Communicator               string            `protobuf:"bytes,21,opt,name=communicator,proto3" json:"communicator,omitempty"`
	GracefulHaltTimeout        int32             `protobuf:"varint,22,opt,name=graceful_halt_timeout,json=gracefulHaltTimeout,proto3" json:"graceful_halt_timeout,omitempty"`
	Guest                      string            `protobuf:"bytes,23,opt,name=guest,proto3" json:"guest,omitempty"`
	Hostname                   string            `protobuf:"bytes,24,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PostUpMessage              string            `protobuf:"bytes,25,opt,name=post_up_message,json=postUpMessage,proto3" json:"post_up_message,omitempty"`
	UsablePortRange            []int32           `protobuf:"varint,26,rep,packed,name=usable_port_range,json=usablePortRange,proto3" json:"usable_port_range,omitempty"`
	BoxExtraDownloadOptions    []string          `protobuf:"bytes,27,rep,name=box_extra_download_options,json=boxExtraDownloadOptions,proto3" json:"box_extra_download_options,omitempty"`
	// TODO: CloudInit = 4 (Experimental)
	Providers []*Vagrantfile_Provider `protobuf:"bytes,29,rep,name=providers,proto3" json:"providers,omitempty"`
	// TODO: Disks = 6 (Experimental)
	Networks      []*Vagrantfile_Network      `protobuf:"bytes,31,rep,name=networks,proto3" json:"networks,omitempty"`
	Provisioners  []*Vagrantfile_Provisioner  `protobuf:"bytes,32,rep,name=provisioners,proto3" json:"provisioners,omitempty"`
	SyncedFolders []*Vagrantfile_SyncedFolder `protobuf:"bytes,33,rep,name=synced_folders,json=syncedFolders,proto3" json:"synced_folders,omitempty"`
}

func (x *Vagrantfile_ConfigVM) Reset() {
	*x = Vagrantfile_ConfigVM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_ConfigVM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_ConfigVM) ProtoMessage() {}

func (x *Vagrantfile_ConfigVM) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_ConfigVM.ProtoReflect.Descriptor instead.
func (*Vagrantfile_ConfigVM) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 9}
}

func (x *Vagrantfile_ConfigVM) GetAllowedSyncedFolderTypes() []string {
	if x != nil {
		return x.AllowedSyncedFolderTypes
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetAllowFstabModification() bool {
	if x != nil {
		return x.AllowFstabModification
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetAllowHostsModificaion() bool {
	if x != nil {
		return x.AllowHostsModificaion
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetBaseMac() string {
	if x != nil {
		return x.BaseMac
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBaseAddress() string {
	if x != nil {
		return x.BaseAddress
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBootTimeout() int32 {
	if x != nil {
		return x.BootTimeout
	}
	return 0
}

func (x *Vagrantfile_ConfigVM) GetBox() string {
	if x != nil {
		return x.Box
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetIgnoreBoxVagrantfile() bool {
	if x != nil {
		return x.IgnoreBoxVagrantfile
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetBoxCheckUpdate() bool {
	if x != nil {
		return x.BoxCheckUpdate
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetBoxUrl() []string {
	if x != nil {
		return x.BoxUrl
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetBoxServerUrl() string {
	if x != nil {
		return x.BoxServerUrl
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxVersion() string {
	if x != nil {
		return x.BoxVersion
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadCaCert() string {
	if x != nil {
		return x.BoxDownloadCaCert
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadCaPath() string {
	if x != nil {
		return x.BoxDownloadCaPath
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadChecksum() string {
	if x != nil {
		return x.BoxDownloadChecksum
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadChecksumType() string {
	if x != nil {
		return x.BoxDownloadChecksumType
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadClientCert() string {
	if x != nil {
		return x.BoxDownloadClientCert
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadInsecure() bool {
	if x != nil {
		return x.BoxDownloadInsecure
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadLocationTrusted() bool {
	if x != nil {
		return x.BoxDownloadLocationTrusted
	}
	return false
}

func (x *Vagrantfile_ConfigVM) GetBoxDownloadOptions() map[string]string {
	if x != nil {
		return x.BoxDownloadOptions
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetCommunicator() string {
	if x != nil {
		return x.Communicator
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetGracefulHaltTimeout() int32 {
	if x != nil {
		return x.GracefulHaltTimeout
	}
	return 0
}

func (x *Vagrantfile_ConfigVM) GetGuest() string {
	if x != nil {
		return x.Guest
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetPostUpMessage() string {
	if x != nil {
		return x.PostUpMessage
	}
	return ""
}

func (x *Vagrantfile_ConfigVM) GetUsablePortRange() []int32 {
	if x != nil {
		return x.UsablePortRange
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetBoxExtraDownloadOptions() []string {
	if x != nil {
		return x.BoxExtraDownloadOptions
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetProviders() []*Vagrantfile_Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetNetworks() []*Vagrantfile_Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetProvisioners() []*Vagrantfile_Provisioner {
	if x != nil {
		return x.Provisioners
	}
	return nil
}

func (x *Vagrantfile_ConfigVM) GetSyncedFolders() []*Vagrantfile_SyncedFolder {
	if x != nil {
		return x.SyncedFolders
	}
	return nil
}

type Vagrantfile_ConfigVagrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// TODO: plugins can be a string, a hash or array
	Plugins   []string `protobuf:"bytes,2,rep,name=plugins,proto3" json:"plugins,omitempty"`
	Sensitive []string `protobuf:"bytes,3,rep,name=sensitive,proto3" json:"sensitive,omitempty"`
}

func (x *Vagrantfile_ConfigVagrant) Reset() {
	*x = Vagrantfile_ConfigVagrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_ConfigVagrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_ConfigVagrant) ProtoMessage() {}

func (x *Vagrantfile_ConfigVagrant) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_ConfigVagrant.ProtoReflect.Descriptor instead.
func (*Vagrantfile_ConfigVagrant) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 10}
}

func (x *Vagrantfile_ConfigVagrant) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Vagrantfile_ConfigVagrant) GetPlugins() []string {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *Vagrantfile_ConfigVagrant) GetSensitive() []string {
	if x != nil {
		return x.Sensitive
	}
	return nil
}

type Vagrantfile_GeneralConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Config *anypb.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Vagrantfile_GeneralConfig) Reset() {
	*x = Vagrantfile_GeneralConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_GeneralConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_GeneralConfig) ProtoMessage() {}

func (x *Vagrantfile_GeneralConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_GeneralConfig.ProtoReflect.Descriptor instead.
func (*Vagrantfile_GeneralConfig) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 11}
}

func (x *Vagrantfile_GeneralConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vagrantfile_GeneralConfig) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

// TODO: Review what needs to be sent here
type Vagrantfile_MachineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConfigVm      *Vagrantfile_ConfigVM        `protobuf:"bytes,2,opt,name=config_vm,json=configVm,proto3" json:"config_vm,omitempty"`
	ConfigVagrant *Vagrantfile_ConfigVagrant   `protobuf:"bytes,3,opt,name=config_vagrant,json=configVagrant,proto3" json:"config_vagrant,omitempty"`
	PluginConfigs []*Vagrantfile_GeneralConfig `protobuf:"bytes,4,rep,name=plugin_configs,json=pluginConfigs,proto3" json:"plugin_configs,omitempty"`
}

func (x *Vagrantfile_MachineConfig) Reset() {
	*x = Vagrantfile_MachineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_MachineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_MachineConfig) ProtoMessage() {}

func (x *Vagrantfile_MachineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_MachineConfig.ProtoReflect.Descriptor instead.
func (*Vagrantfile_MachineConfig) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 12}
}

func (x *Vagrantfile_MachineConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vagrantfile_MachineConfig) GetConfigVm() *Vagrantfile_ConfigVM {
	if x != nil {
		return x.ConfigVm
	}
	return nil
}

func (x *Vagrantfile_MachineConfig) GetConfigVagrant() *Vagrantfile_ConfigVagrant {
	if x != nil {
		return x.ConfigVagrant
	}
	return nil
}

func (x *Vagrantfile_MachineConfig) GetPluginConfigs() []*Vagrantfile_GeneralConfig {
	if x != nil {
		return x.PluginConfigs
	}
	return nil
}

type Vagrantfile_Provisioner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Before               string `protobuf:"bytes,3,opt,name=before,proto3" json:"before,omitempty"`
	After                string `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	CommunicatorRequired bool   `protobuf:"varint,5,opt,name=communicator_required,json=communicatorRequired,proto3" json:"communicator_required,omitempty"`
	// A Provisioner plugin defines it's own configuration,
	// that gets added in here
	Config *anypb.Any `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Vagrantfile_Provisioner) Reset() {
	*x = Vagrantfile_Provisioner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_Provisioner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_Provisioner) ProtoMessage() {}

func (x *Vagrantfile_Provisioner) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_Provisioner.ProtoReflect.Descriptor instead.
func (*Vagrantfile_Provisioner) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 13}
}

func (x *Vagrantfile_Provisioner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vagrantfile_Provisioner) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vagrantfile_Provisioner) GetBefore() string {
	if x != nil {
		return x.Before
	}
	return ""
}

func (x *Vagrantfile_Provisioner) GetAfter() string {
	if x != nil {
		return x.After
	}
	return ""
}

func (x *Vagrantfile_Provisioner) GetCommunicatorRequired() bool {
	if x != nil {
		return x.CommunicatorRequired
	}
	return false
}

func (x *Vagrantfile_Provisioner) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Vagrantfile_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Config *anypb.Any `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Vagrantfile_Provider) Reset() {
	*x = Vagrantfile_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_Provider) ProtoMessage() {}

func (x *Vagrantfile_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_Provider.ProtoReflect.Descriptor instead.
func (*Vagrantfile_Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 14}
}

func (x *Vagrantfile_Provider) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vagrantfile_Provider) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Vagrantfile_Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id     string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Config *anypb.Any `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Vagrantfile_Network) Reset() {
	*x = Vagrantfile_Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_Network) ProtoMessage() {}

func (x *Vagrantfile_Network) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_Network.ProtoReflect.Descriptor instead.
func (*Vagrantfile_Network) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 15}
}

func (x *Vagrantfile_Network) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Vagrantfile_Network) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vagrantfile_Network) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type Vagrantfile_SyncedFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source      string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	// A SyncedFolder plugin defines it's own configuration,
	// that gets added in here
	Config       *anypb.Any `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Create       bool       `protobuf:"varint,4,opt,name=create,proto3" json:"create,omitempty"`
	Disabled     bool       `protobuf:"varint,5,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Group        string     `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	Id           string     `protobuf:"bytes,7,opt,name=id,proto3" json:"id,omitempty"`
	MountOptions []string   `protobuf:"bytes,8,rep,name=mount_options,json=mountOptions,proto3" json:"mount_options,omitempty"`
	Owner        string     `protobuf:"bytes,9,opt,name=owner,proto3" json:"owner,omitempty"`
	Type         string     `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Vagrantfile_SyncedFolder) Reset() {
	*x = Vagrantfile_SyncedFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_SyncedFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_SyncedFolder) ProtoMessage() {}

func (x *Vagrantfile_SyncedFolder) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_SyncedFolder.ProtoReflect.Descriptor instead.
func (*Vagrantfile_SyncedFolder) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 16}
}

func (x *Vagrantfile_SyncedFolder) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Vagrantfile_SyncedFolder) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *Vagrantfile_SyncedFolder) GetConfig() *anypb.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Vagrantfile_SyncedFolder) GetCreate() bool {
	if x != nil {
		return x.Create
	}
	return false
}

func (x *Vagrantfile_SyncedFolder) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *Vagrantfile_SyncedFolder) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Vagrantfile_SyncedFolder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vagrantfile_SyncedFolder) GetMountOptions() []string {
	if x != nil {
		return x.MountOptions
	}
	return nil
}

func (x *Vagrantfile_SyncedFolder) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Vagrantfile_SyncedFolder) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Vagrantfile_PushConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Each push plugin defines its own config
	Config *Vagrantfile_GeneralConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Vagrantfile_PushConfig) Reset() {
	*x = Vagrantfile_PushConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_PushConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_PushConfig) ProtoMessage() {}

func (x *Vagrantfile_PushConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_PushConfig.ProtoReflect.Descriptor instead.
func (*Vagrantfile_PushConfig) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 17}
}

func (x *Vagrantfile_PushConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Vagrantfile_PushConfig) GetConfig() *Vagrantfile_GeneralConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// TODO: Review what needs to be sent here
type Vagrantfile_Vagrantfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The full path the the Vagrantfile including the Vagrantfile name
	Path           string                       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Raw            string                       `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	CurrentVersion string                       `protobuf:"bytes,3,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`
	MachineConfigs []*Vagrantfile_MachineConfig `protobuf:"bytes,4,rep,name=machine_configs,json=machineConfigs,proto3" json:"machine_configs,omitempty"`
	PushConfigs    []*Vagrantfile_PushConfig    `protobuf:"bytes,5,rep,name=push_configs,json=pushConfigs,proto3" json:"push_configs,omitempty"`
	Provisioners   []*Vagrantfile_Provisioner   `protobuf:"bytes,6,rep,name=provisioners,proto3" json:"provisioners,omitempty"`
}

func (x *Vagrantfile_Vagrantfile) Reset() {
	*x = Vagrantfile_Vagrantfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_Vagrantfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_Vagrantfile) ProtoMessage() {}

func (x *Vagrantfile_Vagrantfile) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_Vagrantfile.ProtoReflect.Descriptor instead.
func (*Vagrantfile_Vagrantfile) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 18}
}

func (x *Vagrantfile_Vagrantfile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Vagrantfile_Vagrantfile) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Vagrantfile_Vagrantfile) GetCurrentVersion() string {
	if x != nil {
		return x.CurrentVersion
	}
	return ""
}

func (x *Vagrantfile_Vagrantfile) GetMachineConfigs() []*Vagrantfile_MachineConfig {
	if x != nil {
		return x.MachineConfigs
	}
	return nil
}

func (x *Vagrantfile_Vagrantfile) GetPushConfigs() []*Vagrantfile_PushConfig {
	if x != nil {
		return x.PushConfigs
	}
	return nil
}

func (x *Vagrantfile_Vagrantfile) GetProvisioners() []*Vagrantfile_Provisioner {
	if x != nil {
		return x.Provisioners
	}
	return nil
}

type TargetIndex_TargetIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TargetIndex_TargetIdentifier) Reset() {
	*x = TargetIndex_TargetIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex_TargetIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex_TargetIdentifier) ProtoMessage() {}

func (x *TargetIndex_TargetIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex_TargetIdentifier.ProtoReflect.Descriptor instead.
func (*TargetIndex_TargetIdentifier) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 0}
}

func (x *TargetIndex_TargetIdentifier) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TargetIndex_AllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []*Args_Target `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *TargetIndex_AllResponse) Reset() {
	*x = TargetIndex_AllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex_AllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex_AllResponse) ProtoMessage() {}

func (x *TargetIndex_AllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex_AllResponse.ProtoReflect.Descriptor instead.
func (*TargetIndex_AllResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 1}
}

func (x *TargetIndex_AllResponse) GetTargets() []*Args_Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

type TargetIndex_IncludesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
}

func (x *TargetIndex_IncludesResponse) Reset() {
	*x = TargetIndex_IncludesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex_IncludesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex_IncludesResponse) ProtoMessage() {}

func (x *TargetIndex_IncludesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex_IncludesResponse.ProtoReflect.Descriptor instead.
func (*TargetIndex_IncludesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 2}
}

func (x *TargetIndex_IncludesResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type Box_AutomaticUpdateCheckAllowedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allowed bool `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
}

func (x *Box_AutomaticUpdateCheckAllowedResponse) Reset() {
	*x = Box_AutomaticUpdateCheckAllowedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_AutomaticUpdateCheckAllowedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_AutomaticUpdateCheckAllowedResponse) ProtoMessage() {}

func (x *Box_AutomaticUpdateCheckAllowedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_AutomaticUpdateCheckAllowedResponse.ProtoReflect.Descriptor instead.
func (*Box_AutomaticUpdateCheckAllowedResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 0}
}

func (x *Box_AutomaticUpdateCheckAllowedResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

type Box_HasUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Box_HasUpdateRequest) Reset() {
	*x = Box_HasUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_HasUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_HasUpdateRequest) ProtoMessage() {}

func (x *Box_HasUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_HasUpdateRequest.ProtoReflect.Descriptor instead.
func (*Box_HasUpdateRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 1}
}

func (x *Box_HasUpdateRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Box_HasUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasUpdate bool `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
}

func (x *Box_HasUpdateResponse) Reset() {
	*x = Box_HasUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_HasUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_HasUpdateResponse) ProtoMessage() {}

func (x *Box_HasUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_HasUpdateResponse.ProtoReflect.Descriptor instead.
func (*Box_HasUpdateResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 2}
}

func (x *Box_HasUpdateResponse) GetHasUpdate() bool {
	if x != nil {
		return x.HasUpdate
	}
	return false
}

type Box_InUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InUse bool `protobuf:"varint,1,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
}

func (x *Box_InUseResponse) Reset() {
	*x = Box_InUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_InUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_InUseResponse) ProtoMessage() {}

func (x *Box_InUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_InUseResponse.ProtoReflect.Descriptor instead.
func (*Box_InUseResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 3}
}

func (x *Box_InUseResponse) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

type Box_MetadataUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetadataUrl string `protobuf:"bytes,1,opt,name=metadataUrl,proto3" json:"metadataUrl,omitempty"`
}

func (x *Box_MetadataUrlResponse) Reset() {
	*x = Box_MetadataUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_MetadataUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_MetadataUrlResponse) ProtoMessage() {}

func (x *Box_MetadataUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_MetadataUrlResponse.ProtoReflect.Descriptor instead.
func (*Box_MetadataUrlResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 4}
}

func (x *Box_MetadataUrlResponse) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

type Box_NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Box_NameResponse) Reset() {
	*x = Box_NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_NameResponse) ProtoMessage() {}

func (x *Box_NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_NameResponse.ProtoReflect.Descriptor instead.
func (*Box_NameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 5}
}

func (x *Box_NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Box_ProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Box_ProviderResponse) Reset() {
	*x = Box_ProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_ProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_ProviderResponse) ProtoMessage() {}

func (x *Box_ProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_ProviderResponse.ProtoReflect.Descriptor instead.
func (*Box_ProviderResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 6}
}

func (x *Box_ProviderResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type Box_VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Box_VersionResponse) Reset() {
	*x = Box_VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_VersionResponse) ProtoMessage() {}

func (x *Box_VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_VersionResponse.ProtoReflect.Descriptor instead.
func (*Box_VersionResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 7}
}

func (x *Box_VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Returns -1, 0, or 1 if this version is smaller, equal,
// or larger than the other version, respectively.
type Box_EqualityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Box_EqualityResponse) Reset() {
	*x = Box_EqualityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Box_EqualityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Box_EqualityResponse) ProtoMessage() {}

func (x *Box_EqualityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Box_EqualityResponse.ProtoReflect.Descriptor instead.
func (*Box_EqualityResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{20, 8}
}

func (x *Box_EqualityResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type BoxCollection_AddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path        string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version     string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	MetadataUrl string   `protobuf:"bytes,4,opt,name=metadataUrl,proto3" json:"metadataUrl,omitempty"`
	Force       bool     `protobuf:"varint,5,opt,name=force,proto3" json:"force,omitempty"`
	Providers   []string `protobuf:"bytes,6,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *BoxCollection_AddRequest) Reset() {
	*x = BoxCollection_AddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection_AddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection_AddRequest) ProtoMessage() {}

func (x *BoxCollection_AddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection_AddRequest.ProtoReflect.Descriptor instead.
func (*BoxCollection_AddRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{21, 0}
}

func (x *BoxCollection_AddRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *BoxCollection_AddRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoxCollection_AddRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BoxCollection_AddRequest) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

func (x *BoxCollection_AddRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *BoxCollection_AddRequest) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

type BoxCollection_AllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boxes []*Args_Box `protobuf:"bytes,1,rep,name=boxes,proto3" json:"boxes,omitempty"`
}

func (x *BoxCollection_AllResponse) Reset() {
	*x = BoxCollection_AllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection_AllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection_AllResponse) ProtoMessage() {}

func (x *BoxCollection_AllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection_AllResponse.ProtoReflect.Descriptor instead.
func (*BoxCollection_AllResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{21, 1}
}

func (x *BoxCollection_AllResponse) GetBoxes() []*Args_Box {
	if x != nil {
		return x.Boxes
	}
	return nil
}

type BoxCollection_CleanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BoxCollection_CleanRequest) Reset() {
	*x = BoxCollection_CleanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection_CleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection_CleanRequest) ProtoMessage() {}

func (x *BoxCollection_CleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection_CleanRequest.ProtoReflect.Descriptor instead.
func (*BoxCollection_CleanRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{21, 2}
}

func (x *BoxCollection_CleanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BoxCollection_FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version   string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Providers []string `protobuf:"bytes,3,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *BoxCollection_FindRequest) Reset() {
	*x = BoxCollection_FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection_FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection_FindRequest) ProtoMessage() {}

func (x *BoxCollection_FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection_FindRequest.ProtoReflect.Descriptor instead.
func (*BoxCollection_FindRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{21, 3}
}

func (x *BoxCollection_FindRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BoxCollection_FindRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BoxCollection_FindRequest) GetProviders() []string {
	if x != nil {
		return x.Providers
	}
	return nil
}

var File_vagrant_plugin_sdk_plugin_proto protoreflect.FileDescriptor

var file_vagrant_plugin_sdk_plugin_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xfa, 0x24, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x1a, 0xc7, 0x01, 0x0a, 0x05, 0x53, 0x65,
	0x65, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x64, 0x12,
	0x42, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64,
	0x73, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x64, 0x1a, 0x4e, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0xfc, 0x03, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x1a,
	0x79, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x7b, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x7a, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70,
	0x44, 0x69, 0x72, 0x1a, 0x7d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x69, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f,
	0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44,
	0x69, 0x72, 0x1a, 0x9d, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x12, 0x51, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x1a, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0xa5,
	0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x1a, 0x50, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x2a, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x57, 0x0a, 0x0a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x1c, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xdb, 0x01, 0x0a, 0x07, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x41, 0x53, 0x49, 0x53, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02, 0x1a, 0x5a, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x1a, 0x54, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x52, 0x0a, 0x05, 0x42, 0x61, 0x73,
	0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x54, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x1a, 0x55, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x58, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x1a, 0xaa, 0x03, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x8c, 0x01, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45,
	0x53, 0x54, 0x52, 0x4f, 0x59, 0x45, 0x44, 0x10, 0x03, 0x1a, 0xc5, 0x01, 0x0a, 0x07, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x1a, 0x6f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x50, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x1a, 0x5a, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a,
	0x55, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x51, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x52, 0x0a, 0x05, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x59, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0xe7, 0x08, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbb, 0x04, 0x0a, 0x07, 0x53, 0x53, 0x48, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x73, 0x61,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x73, 0x61, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x78, 0x31, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x58, 0x31, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x6e, 0x76, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x9a, 0x04, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x58, 0x0a, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x69, 0x6e, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x73, 0x6c, 0x5f, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x73, 0x6c, 0x50, 0x65, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x67, 0x65, 0x22, 0x32,
	0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x45, 0x47, 0x4f, 0x54, 0x49, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53,
	0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x02, 0x1a, 0x51, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x59, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x1a, 0x58, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x31, 0x0a, 0x0f, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x3c, 0x0a,
	0x06, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x31, 0x0a, 0x05, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x9d,
	0x01, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x1a, 0x4f, 0x0a,
	0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x45,
	0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x06, 0x0a, 0x04, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0xb8, 0x02,
	0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x5b, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x41, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x39, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xa0, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x26, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x1a, 0x3c, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0xc1, 0x01, 0x0a, 0x12, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x65, 0x0a,
	0x13, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x84, 0x03, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x1a, 0x6b,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x04, 0x41,
	0x75, 0x74, 0x68, 0x1a, 0x34, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x49, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb4, 0x0f, 0x0a, 0x0a,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x1a, 0x39, 0x0a, 0x15, 0x49, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x94, 0x02, 0x0a, 0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4b, 0x0a,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x77,
	0x4c, 0x69, 0x6e, 0x65, 0x22, 0x76, 0x0a, 0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x42, 0x4f,
	0x4c, 0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x4f, 0x4c,
	0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x05, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x10, 0x07, 0x1a, 0x5e, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xf3, 0x0b, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12,
	0x45, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x45,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x1a, 0x4b, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x1a, 0x58, 0x0a, 0x04, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x1a, 0x31, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0x36, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x59,
	0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x4a, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x1a, 0x58, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12,
	0x4c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x67, 0x0a,
	0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x21, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x1a, 0x6e, 0x0a, 0x04, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x22, 0x80, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x67, 0x1a, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x23, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x35, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x34, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x57, 0x0a, 0x0a, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2d, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x1a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x26, 0x0a, 0x0e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x58,
	0x0a, 0x0f, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52,
	0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x1a, 0x5e, 0x0a, 0x06, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x29, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x1a, 0x32, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x66, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x66, 0x75, 0x6e,
	0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x41, 0x72, 0x67, 0x73, 0x22, 0x9f, 0x08, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0xe5, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x61,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54,
	0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x02,
	0x1a, 0xda, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f,
	0x70, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f,
	0x70, 0x73, 0x69, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x4c, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0x60, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x2a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x69, 0x0a, 0x0a, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x33, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0xa0, 0x02, 0x0a, 0x09,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12,
	0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x2e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf7,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x1a,
	0x21, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x1a, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x1a, 0x5a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64,
	0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72,
	0x72, 0x1a, 0x20, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x1a, 0x23, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0xba, 0x02, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x1a, 0x28, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a,
	0x24, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x1a, 0xdd, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x1a, 0x65, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63,
	0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x32, 0x0a, 0x09, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f,
	0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x68, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a,
	0x34, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x1a, 0x24, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xd3, 0x03, 0x0a, 0x03,
	0x52, 0x65, 0x66, 0x1a, 0x70, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x50, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x8a, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x7b, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xe5, 0x0a, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x35, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x1a, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x4f, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x24, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2d,
	0x0a, 0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2d, 0x0a,
	0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x4e, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x25, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x1a, 0x24, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0xcd, 0x06, 0x0a, 0x07, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x1e, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x59, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x1a, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xec, 0x01,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x50, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x57, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x26, 0x0a, 0x0b,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0xb2, 0x02, 0x0a, 0x15, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76,
	0x0a, 0x0e, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x65,
	0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x40,
	0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x12, 0x47, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x9a, 0x06, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x35, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x23, 0x0a, 0x0d,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0x2b, 0x0a, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x25,
	0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x1a, 0x44, 0x0a, 0x12, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x2c, 0x0a, 0x14, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x67, 0x0a, 0x16, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x1a, 0x21, 0x0a, 0x0b, 0x43, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x62, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x27, 0x0a, 0x11, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x1a, 0x21, 0x0a, 0x0b, 0x54, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x2d, 0x0a, 0x19, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x95, 0x22, 0x0a, 0x0b, 0x56, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x2d, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0xd2, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3e, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x32, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x42, 0x6f, 0x78, 0x48, 0x00, 0x52, 0x03,
	0x62, 0x6f, 0x78, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x73, 0x48, 0x00, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x1a, 0x6a, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0xe3, 0x01, 0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x78, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3d, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x4b, 0x0a, 0x0e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0xd7, 0x01, 0x0a, 0x13, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x46, 0x0a, 0x05, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x1a, 0x6d, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0d, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x29, 0x0a, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2f, 0x0a,
	0x19, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x89,
	0x0d, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x4d, 0x12, 0x3d, 0x0a, 0x1b, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x66, 0x73, 0x74, 0x61, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x46, 0x73, 0x74, 0x61, 0x62, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f,
	0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x6f, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x12,
	0x34, 0x0a, 0x16, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x78, 0x5f, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x78, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x6f, 0x78, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x62, 0x6f, 0x78, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x6f, 0x78, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x6f, 0x78, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x6f, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x14, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62,
	0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x12, 0x2f, 0x0a, 0x14, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x62, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x62, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x62, 0x6f, 0x78, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x62,
	0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x62, 0x6f, 0x78, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12,
	0x41, 0x0a, 0x1d, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x62, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x12, 0x75, 0x0a, 0x14, 0x62, 0x6f, 0x78, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x43, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x4d, 0x2e, 0x42, 0x6f,
	0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x62, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a,
	0x15, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x68, 0x61, 0x6c, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x67, 0x72,
	0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x48, 0x61, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f,
	0x73, 0x74, 0x55, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x75,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x1a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f,
	0x72, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x6f, 0x78, 0x5f, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x62, 0x6f, 0x78,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x49, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x46, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x08, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x73,
	0x79, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x21, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x1a, 0x45, 0x0a, 0x17, 0x42, 0x6f, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x0d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x9f, 0x02, 0x0a, 0x0d, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x48, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x4d,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x6d, 0x12, 0x57, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a, 0xc6, 0x01, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x4c, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x5b, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x9f, 0x02, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0x6a, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xdd,
	0x02, 0x0a, 0x0b, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x72, 0x61, 0x77, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a,
	0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x50, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x70,
	0x75, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x52, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72,
	0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x73, 0x22, 0xaa,
	0x01, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x22,
	0x0a, 0x10, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x1a, 0x4b, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3c, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x1a,
	0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0xb6, 0x03, 0x0a, 0x03,
	0x42, 0x6f, 0x78, 0x1a, 0x3f, 0x0a, 0x23, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x1a, 0x2c, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x1a, 0x32, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x26, 0x0a, 0x0d, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x1a, 0x37,
	0x0a, 0x13, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x1a, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2e, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x2b, 0x0a, 0x0f, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x2a, 0x0a, 0x10, 0x45, 0x71, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xfb, 0x02, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa4, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x44, 0x0a,
	0x0b, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05,
	0x62, 0x6f, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x05, 0x62, 0x6f,
	0x78, 0x65, 0x73, 0x1a, 0x22, 0x0a, 0x0c, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x59, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x32, 0xab, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x06, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x60,
	0x0a, 0x0d, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xa8, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x03, 0x4d,
	0x61, 0x70, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x03, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4f, 0x6b, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb6, 0x01, 0x0a,
	0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0xf7, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x78,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x12, 0x33, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x32,
	0xa5, 0x0e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x06, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x4f, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x50, 0x0a, 0x10, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x14, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x5f, 0x0a, 0x07, 0x53, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x53,
	0x48, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0b, 0x53, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5f, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x30, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x0e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6b, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x32, 0xd6, 0x04, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x49, 0x0a,
	0x09, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x47, 0x0a, 0x07, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65,
	0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05,
	0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73,
	0x32, 0x86, 0x06, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5d, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x60, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x63, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x32, 0xd6, 0x0f, 0x0a, 0x13, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a,
	0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4b, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x63,
	0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x48, 0x0a, 0x08,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a,
	0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a,
	0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x50, 0x0a, 0x15, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x6a, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a,
	0x08, 0x54, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x45, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x04, 0x53,
	0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42,
	0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65,
	0x64, 0x73, 0x32, 0x8c, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x32, 0xf6, 0x08, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x0e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6b, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x5a, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a,
	0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x32, 0xf7, 0x08, 0x0a, 0x0c, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a,
	0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x76, 0x0a, 0x0a, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x6b, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11,
	0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x06, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x41, 0x0a,
	0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53,
	0x65, 0x65, 0x64, 0x73, 0x32, 0x90, 0x0b, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x06, 0x55, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x46, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x47, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x47, 0x0a, 0x07, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x75, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x0e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x37, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6b, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x32, 0xe4, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72,
	0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x44, 0x0a, 0x02, 0x55, 0x49, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x12, 0x40, 0x0a, 0x04,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x32, 0xde,
	0x0a, 0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x69, 0x72, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x49, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x55, 0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x52,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x4f, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x50, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0x9f, 0x11, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07,
	0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53,
	0x65, 0x74, 0x12, 0x4d, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x49, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x02,
	0x55, 0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x55, 0x49, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x12, 0x48, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4f, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x36, 0x0a, 0x04, 0x53, 0x61, 0x76, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x07, 0x53, 0x65, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x12, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x53, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x49, 0x44,
	0x12, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x05,
	0x47, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x42, 0x6f, 0x78, 0x12, 0x42, 0x0a, 0x05, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x66, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x3c, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x03, 0x55, 0x49, 0x44,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0d, 0x53,
	0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x3b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x80, 0x0c, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x49, 0x0a, 0x03, 0x43, 0x57, 0x44, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x43, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x69, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x61, 0x0a,
	0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x55, 0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x12, 0x4b, 0x0a, 0x04, 0x48, 0x6f, 0x6d,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x03, 0x54, 0x6d, 0x70, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x6d, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x38, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x5a, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x59, 0x0a,
	0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x05, 0x42, 0x6f, 0x78, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f,
	0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd6, 0x04, 0x0a, 0x12, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x38,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x30, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c,
	0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x69, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x3c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdf, 0x03,
	0x0a, 0x12, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x33,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x74, 0x0a, 0x08, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x33, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x22, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x4d, 0x0a, 0x03, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xf6, 0x07, 0x0a, 0x0a, 0x42, 0x6f, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75,
	0x0a, 0x1b, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x3e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f,
	0x78, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x66, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e, 0x48, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x05, 0x49, 0x6e, 0x55, 0x73,
	0x65, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x4b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12,
	0x55, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x52, 0x4c, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42,
	0x6f, 0x78, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42,
	0x6f, 0x78, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x1a, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x2e, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xef, 0x02, 0x0a, 0x14, 0x42, 0x6f, 0x78,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x57, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x12, 0x4f, 0x0a, 0x03, 0x41, 0x6c,
	0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x6f, 0x78,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x59, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x32, 0x9f, 0x02, 0x0a, 0x0b, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x50, 0x75,
	0x73, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x44, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x04, 0x53, 0x65, 0x65, 0x64, 0x12, 0x21, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x53, 0x65, 0x65, 0x64,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x53, 0x65, 0x65, 0x64, 0x73, 0x42, 0x42, 0x5a, 0x40,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2d, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x64, 0x6b,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce sync.Once
	file_vagrant_plugin_sdk_plugin_proto_rawDescData = file_vagrant_plugin_sdk_plugin_proto_rawDesc
)

func file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP() []byte {
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce.Do(func() {
		file_vagrant_plugin_sdk_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_vagrant_plugin_sdk_plugin_proto_rawDescData)
	})
	return file_vagrant_plugin_sdk_plugin_proto_rawDescData
}

var file_vagrant_plugin_sdk_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_vagrant_plugin_sdk_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 205)
var file_vagrant_plugin_sdk_plugin_proto_goTypes = []interface{}{
	(Args_JobInfo_ResourceType)(0),                // 0: hashicorp.vagrant.sdk.Args.JobInfo.ResourceType
	(Args_Target_State_State)(0),                  // 1: hashicorp.vagrant.sdk.Args.Target.State.State
	(Args_Connection_WinrmInfo_Transport)(0),      // 2: hashicorp.vagrant.sdk.Args.Connection.WinrmInfo.Transport
	(TerminalUI_OutputRequest_Style)(0),           // 3: hashicorp.vagrant.sdk.TerminalUI.OutputRequest.Style
	(Command_Flag_Type)(0),                        // 4: hashicorp.vagrant.sdk.Command.Flag.Type
	(Command_Arguments_Flag_Type)(0),              // 5: hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	(*Args)(nil),                                  // 6: hashicorp.vagrant.sdk.Args
	(*FuncSpec)(nil),                              // 7: hashicorp.vagrant.sdk.FuncSpec
	(*Config)(nil),                                // 8: hashicorp.vagrant.sdk.Config
	(*Auth)(nil),                                  // 9: hashicorp.vagrant.sdk.Auth
	(*ImplementsResp)(nil),                        // 10: hashicorp.vagrant.sdk.ImplementsResp
	(*TerminalUI)(nil),                            // 11: hashicorp.vagrant.sdk.TerminalUI
	(*Map)(nil),                                   // 12: hashicorp.vagrant.sdk.Map
	(*StateBag)(nil),                              // 13: hashicorp.vagrant.sdk.StateBag
	(*PluginInfo)(nil),                            // 14: hashicorp.vagrant.sdk.PluginInfo
	(*PluginManager)(nil),                         // 15: hashicorp.vagrant.sdk.PluginManager
	(*Provider)(nil),                              // 16: hashicorp.vagrant.sdk.Provider
	(*Command)(nil),                               // 17: hashicorp.vagrant.sdk.Command
	(*Communicator)(nil),                          // 18: hashicorp.vagrant.sdk.Communicator
	(*Platform)(nil),                              // 19: hashicorp.vagrant.sdk.Platform
	(*SyncedFolder)(nil),                          // 20: hashicorp.vagrant.sdk.SyncedFolder
	(*Ref)(nil),                                   // 21: hashicorp.vagrant.sdk.Ref
	(*Target)(nil),                                // 22: hashicorp.vagrant.sdk.Target
	(*Project)(nil),                               // 23: hashicorp.vagrant.sdk.Project
	(*Vagrantfile)(nil),                           // 24: hashicorp.vagrant.sdk.Vagrantfile
	(*TargetIndex)(nil),                           // 25: hashicorp.vagrant.sdk.TargetIndex
	(*Box)(nil),                                   // 26: hashicorp.vagrant.sdk.Box
	(*BoxCollection)(nil),                         // 27: hashicorp.vagrant.sdk.BoxCollection
	(*Args_Seeds)(nil),                            // 28: hashicorp.vagrant.sdk.Args.Seeds
	(*Args_DataDir)(nil),                          // 29: hashicorp.vagrant.sdk.Args.DataDir
	(*Args_MetadataSet)(nil),                      // 30: hashicorp.vagrant.sdk.Args.MetadataSet
	(*Args_Path)(nil),                             // 31: hashicorp.vagrant.sdk.Args.Path
	(*Args_Folder)(nil),                           // 32: hashicorp.vagrant.sdk.Args.Folder
	(*Args_TimeDuration)(nil),                     // 33: hashicorp.vagrant.sdk.Args.TimeDuration
	(*Args_TerminalUI)(nil),                       // 34: hashicorp.vagrant.sdk.Args.TerminalUI
	(*Args_Logger)(nil),                           // 35: hashicorp.vagrant.sdk.Args.Logger
	(*Args_JobInfo)(nil),                          // 36: hashicorp.vagrant.sdk.Args.JobInfo
	(*Args_PluginManager)(nil),                    // 37: hashicorp.vagrant.sdk.Args.PluginManager
	(*Args_Command)(nil),                          // 38: hashicorp.vagrant.sdk.Args.Command
	(*Args_Basis)(nil),                            // 39: hashicorp.vagrant.sdk.Args.Basis
	(*Args_Project)(nil),                          // 40: hashicorp.vagrant.sdk.Args.Project
	(*Args_Provider)(nil),                         // 41: hashicorp.vagrant.sdk.Args.Provider
	(*Args_Provisioner)(nil),                      // 42: hashicorp.vagrant.sdk.Args.Provisioner
	(*Args_Target)(nil),                           // 43: hashicorp.vagrant.sdk.Args.Target
	(*Args_Box)(nil),                              // 44: hashicorp.vagrant.sdk.Args.Box
	(*Args_BoxCollection)(nil),                    // 45: hashicorp.vagrant.sdk.Args.BoxCollection
	(*Args_StateBag)(nil),                         // 46: hashicorp.vagrant.sdk.Args.StateBag
	(*Args_Host)(nil),                             // 47: hashicorp.vagrant.sdk.Args.Host
	(*Args_Guest)(nil),                            // 48: hashicorp.vagrant.sdk.Args.Guest
	(*Args_Communicator)(nil),                     // 49: hashicorp.vagrant.sdk.Args.Communicator
	(*Args_Connection)(nil),                       // 50: hashicorp.vagrant.sdk.Args.Connection
	(*Args_Push)(nil),                             // 51: hashicorp.vagrant.sdk.Args.Push
	(*Args_SyncedFolder)(nil),                     // 52: hashicorp.vagrant.sdk.Args.SyncedFolder
	(*Args_TargetIndex)(nil),                      // 53: hashicorp.vagrant.sdk.Args.TargetIndex
	(*Args_NamedCapability)(nil),                  // 54: hashicorp.vagrant.sdk.Args.NamedCapability
	(*Args_Direct)(nil),                           // 55: hashicorp.vagrant.sdk.Args.Direct
	(*Args_Array)(nil),                            // 56: hashicorp.vagrant.sdk.Args.Array
	(*Args_Hash)(nil),                             // 57: hashicorp.vagrant.sdk.Args.Hash
	(*Args_Options)(nil),                          // 58: hashicorp.vagrant.sdk.Args.Options
	(*Args_Null)(nil),                             // 59: hashicorp.vagrant.sdk.Args.Null
	nil,                                           // 60: hashicorp.vagrant.sdk.Args.Seeds.NamedEntry
	(*Args_DataDir_Basis)(nil),                    // 61: hashicorp.vagrant.sdk.Args.DataDir.Basis
	(*Args_DataDir_Project)(nil),                  // 62: hashicorp.vagrant.sdk.Args.DataDir.Project
	(*Args_DataDir_Target)(nil),                   // 63: hashicorp.vagrant.sdk.Args.DataDir.Target
	(*Args_DataDir_Component)(nil),                // 64: hashicorp.vagrant.sdk.Args.DataDir.Component
	nil,                                           // 65: hashicorp.vagrant.sdk.Args.MetadataSet.MetadataEntry
	nil,                                           // 66: hashicorp.vagrant.sdk.Args.Folder.FoldersEntry
	(*Args_Target_State)(nil),                     // 67: hashicorp.vagrant.sdk.Args.Target.State
	(*Args_Target_Machine)(nil),                   // 68: hashicorp.vagrant.sdk.Args.Target.Machine
	(*Args_Target_Machine_State)(nil),             // 69: hashicorp.vagrant.sdk.Args.Target.Machine.State
	(*Args_Connection_SSHInfo)(nil),               // 70: hashicorp.vagrant.sdk.Args.Connection.SSHInfo
	(*Args_Connection_WinrmInfo)(nil),             // 71: hashicorp.vagrant.sdk.Args.Connection.WinrmInfo
	nil,                                           // 72: hashicorp.vagrant.sdk.Args.Hash.FieldsEntry
	(*FuncSpec_Value)(nil),                        // 73: hashicorp.vagrant.sdk.FuncSpec.Value
	(*FuncSpec_Args)(nil),                         // 74: hashicorp.vagrant.sdk.FuncSpec.Args
	(*Config_ConfigureRequest)(nil),               // 75: hashicorp.vagrant.sdk.Config.ConfigureRequest
	(*Config_StructResp)(nil),                     // 76: hashicorp.vagrant.sdk.Config.StructResp
	(*Config_FieldDocumentation)(nil),             // 77: hashicorp.vagrant.sdk.Config.FieldDocumentation
	(*Config_MapperDocumentation)(nil),            // 78: hashicorp.vagrant.sdk.Config.MapperDocumentation
	(*Config_Documentation)(nil),                  // 79: hashicorp.vagrant.sdk.Config.Documentation
	nil,                                           // 80: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	(*Auth_AuthResponse)(nil),                     // 81: hashicorp.vagrant.sdk.Auth.AuthResponse
	(*TerminalUI_IsInteractiveResponse)(nil),      // 82: hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	(*TerminalUI_OutputRequest)(nil),              // 83: hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	(*TerminalUI_Response)(nil),                   // 84: hashicorp.vagrant.sdk.TerminalUI.Response
	(*TerminalUI_Event)(nil),                      // 85: hashicorp.vagrant.sdk.TerminalUI.Event
	(*TerminalUI_Event_Input)(nil),                // 86: hashicorp.vagrant.sdk.TerminalUI.Event.Input
	(*TerminalUI_Event_InputResp)(nil),            // 87: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	(*TerminalUI_Event_Status)(nil),               // 88: hashicorp.vagrant.sdk.TerminalUI.Event.Status
	(*TerminalUI_Event_Line)(nil),                 // 89: hashicorp.vagrant.sdk.TerminalUI.Event.Line
	(*TerminalUI_Event_Raw)(nil),                  // 90: hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	(*TerminalUI_Event_NamedValue)(nil),           // 91: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	(*TerminalUI_Event_NamedValues)(nil),          // 92: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	(*TerminalUI_Event_TableEntry)(nil),           // 93: hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	(*TerminalUI_Event_TableRow)(nil),             // 94: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	(*TerminalUI_Event_Table)(nil),                // 95: hashicorp.vagrant.sdk.TerminalUI.Event.Table
	(*TerminalUI_Event_StepGroup)(nil),            // 96: hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	(*TerminalUI_Event_Step)(nil),                 // 97: hashicorp.vagrant.sdk.TerminalUI.Event.Step
	(*Map_Request)(nil),                           // 98: hashicorp.vagrant.sdk.Map.Request
	(*Map_Response)(nil),                          // 99: hashicorp.vagrant.sdk.Map.Response
	(*Map_ListResponse)(nil),                      // 100: hashicorp.vagrant.sdk.Map.ListResponse
	(*StateBag_GetRequest)(nil),                   // 101: hashicorp.vagrant.sdk.StateBag.GetRequest
	(*StateBag_GetResponse)(nil),                  // 102: hashicorp.vagrant.sdk.StateBag.GetResponse
	(*StateBag_GetOkResponse)(nil),                // 103: hashicorp.vagrant.sdk.StateBag.GetOkResponse
	(*StateBag_PutRequest)(nil),                   // 104: hashicorp.vagrant.sdk.StateBag.PutRequest
	(*StateBag_PutResponse)(nil),                  // 105: hashicorp.vagrant.sdk.StateBag.PutResponse
	(*StateBag_RemoveRequest)(nil),                // 106: hashicorp.vagrant.sdk.StateBag.RemoveRequest
	(*StateBag_RemoveResponse)(nil),               // 107: hashicorp.vagrant.sdk.StateBag.RemoveResponse
	(*PluginInfo_ComponentList)(nil),              // 108: hashicorp.vagrant.sdk.PluginInfo.ComponentList
	(*PluginInfo_Name)(nil),                       // 109: hashicorp.vagrant.sdk.PluginInfo.Name
	(*PluginManager_PluginsRequest)(nil),          // 110: hashicorp.vagrant.sdk.PluginManager.PluginsRequest
	(*PluginManager_PluginsResponse)(nil),         // 111: hashicorp.vagrant.sdk.PluginManager.PluginsResponse
	(*PluginManager_Plugin)(nil),                  // 112: hashicorp.vagrant.sdk.PluginManager.Plugin
	(*Provider_UsableResp)(nil),                   // 113: hashicorp.vagrant.sdk.Provider.UsableResp
	(*Provider_InstalledResp)(nil),                // 114: hashicorp.vagrant.sdk.Provider.InstalledResp
	(*Provider_ActionRequest)(nil),                // 115: hashicorp.vagrant.sdk.Provider.ActionRequest
	(*Command_Flag)(nil),                          // 116: hashicorp.vagrant.sdk.Command.Flag
	(*Command_CommandInfo)(nil),                   // 117: hashicorp.vagrant.sdk.Command.CommandInfo
	(*Command_CommandInfoResp)(nil),               // 118: hashicorp.vagrant.sdk.Command.CommandInfoResp
	(*Command_ExecuteResp)(nil),                   // 119: hashicorp.vagrant.sdk.Command.ExecuteResp
	(*Command_ExecuteReq)(nil),                    // 120: hashicorp.vagrant.sdk.Command.ExecuteReq
	(*Command_ExecuteSpecReq)(nil),                // 121: hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	(*Command_Arguments)(nil),                     // 122: hashicorp.vagrant.sdk.Command.Arguments
	(*Command_Arguments_Flag)(nil),                // 123: hashicorp.vagrant.sdk.Command.Arguments.Flag
	(*Communicator_MatchResp)(nil),                // 124: hashicorp.vagrant.sdk.Communicator.MatchResp
	(*Communicator_ReadyResp)(nil),                // 125: hashicorp.vagrant.sdk.Communicator.ReadyResp
	(*Communicator_ExecuteResp)(nil),              // 126: hashicorp.vagrant.sdk.Communicator.ExecuteResp
	(*Communicator_TestResp)(nil),                 // 127: hashicorp.vagrant.sdk.Communicator.TestResp
	(*Communicator_Command)(nil),                  // 128: hashicorp.vagrant.sdk.Communicator.Command
	(*Platform_DetectResp)(nil),                   // 129: hashicorp.vagrant.sdk.Platform.DetectResp
	(*Platform_ParentResp)(nil),                   // 130: hashicorp.vagrant.sdk.Platform.ParentResp
	(*Platform_Capability)(nil),                   // 131: hashicorp.vagrant.sdk.Platform.Capability
	(*Platform_Capability_NamedRequest)(nil),      // 132: hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	(*Platform_Capability_CheckResp)(nil),         // 133: hashicorp.vagrant.sdk.Platform.Capability.CheckResp
	(*Platform_Capability_Resp)(nil),              // 134: hashicorp.vagrant.sdk.Platform.Capability.Resp
	(*SyncedFolder_UsableResp)(nil),               // 135: hashicorp.vagrant.sdk.SyncedFolder.UsableResp
	(*Ref_Box)(nil),                               // 136: hashicorp.vagrant.sdk.Ref.Box
	(*Ref_Basis)(nil),                             // 137: hashicorp.vagrant.sdk.Ref.Basis
	(*Ref_Project)(nil),                           // 138: hashicorp.vagrant.sdk.Ref.Project
	(*Ref_Target)(nil),                            // 139: hashicorp.vagrant.sdk.Ref.Target
	(*Target_ResourceIdResponse)(nil),             // 140: hashicorp.vagrant.sdk.Target.ResourceIdResponse
	(*Target_RecordResponse)(nil),                 // 141: hashicorp.vagrant.sdk.Target.RecordResponse
	(*Target_NameResponse)(nil),                   // 142: hashicorp.vagrant.sdk.Target.NameResponse
	(*Target_ProjectResponse)(nil),                // 143: hashicorp.vagrant.sdk.Target.ProjectResponse
	(*Target_SetNameRequest)(nil),                 // 144: hashicorp.vagrant.sdk.Target.SetNameRequest
	(*Target_VagrantfileNameResponse)(nil),        // 145: hashicorp.vagrant.sdk.Target.VagrantfileNameResponse
	(*Target_VagrantfilePathResponse)(nil),        // 146: hashicorp.vagrant.sdk.Target.VagrantfilePathResponse
	(*Target_UpdatedAtResponse)(nil),              // 147: hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	(*Target_GetUUIDResponse)(nil),                // 148: hashicorp.vagrant.sdk.Target.GetUUIDResponse
	(*Target_SetUUIDRequest)(nil),                 // 149: hashicorp.vagrant.sdk.Target.SetUUIDRequest
	(*Target_Machine)(nil),                        // 150: hashicorp.vagrant.sdk.Target.Machine
	(*Target_Machine_SetIDRequest)(nil),           // 151: hashicorp.vagrant.sdk.Target.Machine.SetIDRequest
	(*Target_Machine_GetIDResponse)(nil),          // 152: hashicorp.vagrant.sdk.Target.Machine.GetIDResponse
	(*Target_Machine_SetStateRequest)(nil),        // 153: hashicorp.vagrant.sdk.Target.Machine.SetStateRequest
	(*Target_Machine_GetStateResponse)(nil),       // 154: hashicorp.vagrant.sdk.Target.Machine.GetStateResponse
	(*Target_Machine_ConnectionInfoResponse)(nil), // 155: hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse
	(*Target_Machine_UIDResponse)(nil),            // 156: hashicorp.vagrant.sdk.Target.Machine.UIDResponse
	(*Target_Machine_SyncedFoldersResponse)(nil),  // 157: hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse
	nil, // 158: hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse.ConnectionInfoEntry
	(*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder)(nil), // 159: hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse.MachineSyncedFolder
	(*Project_ResourceIdResponse)(nil),                               // 160: hashicorp.vagrant.sdk.Project.ResourceIdResponse
	(*Project_TargetRequest)(nil),                                    // 161: hashicorp.vagrant.sdk.Project.TargetRequest
	(*Project_TargetNamesResponse)(nil),                              // 162: hashicorp.vagrant.sdk.Project.TargetNamesResponse
	(*Project_TargetIdsResponse)(nil),                                // 163: hashicorp.vagrant.sdk.Project.TargetIdsResponse
	(*Project_MachineAndProvider)(nil),                               // 164: hashicorp.vagrant.sdk.Project.MachineAndProvider
	(*Project_MachineNamesResponse)(nil),                             // 165: hashicorp.vagrant.sdk.Project.MachineNamesResponse
	(*Project_ActiveMachinesResponse)(nil),                           // 166: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse
	(*Project_CwdResponse)(nil),                                      // 167: hashicorp.vagrant.sdk.Project.CwdResponse
	(*Project_ConfigResponse)(nil),                                   // 168: hashicorp.vagrant.sdk.Project.ConfigResponse
	(*Project_VagrantfileNameResponse)(nil),                          // 169: hashicorp.vagrant.sdk.Project.VagrantfileNameResponse
	(*Project_VagrantfilePathResponse)(nil),                          // 170: hashicorp.vagrant.sdk.Project.VagrantfilePathResponse
	(*Project_HomeResponse)(nil),                                     // 171: hashicorp.vagrant.sdk.Project.HomeResponse
	(*Project_LocalDataResponse)(nil),                                // 172: hashicorp.vagrant.sdk.Project.LocalDataResponse
	(*Project_TmpResponse)(nil),                                      // 173: hashicorp.vagrant.sdk.Project.TmpResponse
	(*Project_DefaultPrivateKeyResponse)(nil),                        // 174: hashicorp.vagrant.sdk.Project.DefaultPrivateKeyResponse
	(*Vagrantfile_BoxCollection)(nil),                                // 175: hashicorp.vagrant.sdk.Vagrantfile.BoxCollection
	(*Vagrantfile_GetVagrantfileRequest)(nil),                        // 176: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest
	(*Vagrantfile_GetVagrantfileResponse)(nil),                       // 177: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse
	(*Vagrantfile_TargetRequest)(nil),                                // 178: hashicorp.vagrant.sdk.Vagrantfile.TargetRequest
	(*Vagrantfile_TargetResponse)(nil),                               // 179: hashicorp.vagrant.sdk.Vagrantfile.TargetResponse
	(*Vagrantfile_TargetConfigRequest)(nil),                          // 180: hashicorp.vagrant.sdk.Vagrantfile.TargetConfigRequest
	(*Vagrantfile_TargetConfigResponse)(nil),                         // 181: hashicorp.vagrant.sdk.Vagrantfile.TargetConfigResponse
	(*Vagrantfile_TargetNamesResponse)(nil),                          // 182: hashicorp.vagrant.sdk.Vagrantfile.TargetNamesResponse
	(*Vagrantfile_PrimaryTargetNameResponse)(nil),                    // 183: hashicorp.vagrant.sdk.Vagrantfile.PrimaryTargetNameResponse
	(*Vagrantfile_ConfigVM)(nil),                                     // 184: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM
	(*Vagrantfile_ConfigVagrant)(nil),                                // 185: hashicorp.vagrant.sdk.Vagrantfile.ConfigVagrant
	(*Vagrantfile_GeneralConfig)(nil),                                // 186: hashicorp.vagrant.sdk.Vagrantfile.GeneralConfig
	(*Vagrantfile_MachineConfig)(nil),                                // 187: hashicorp.vagrant.sdk.Vagrantfile.MachineConfig
	(*Vagrantfile_Provisioner)(nil),                                  // 188: hashicorp.vagrant.sdk.Vagrantfile.Provisioner
	(*Vagrantfile_Provider)(nil),                                     // 189: hashicorp.vagrant.sdk.Vagrantfile.Provider
	(*Vagrantfile_Network)(nil),                                      // 190: hashicorp.vagrant.sdk.Vagrantfile.Network
	(*Vagrantfile_SyncedFolder)(nil),                                 // 191: hashicorp.vagrant.sdk.Vagrantfile.SyncedFolder
	(*Vagrantfile_PushConfig)(nil),                                   // 192: hashicorp.vagrant.sdk.Vagrantfile.PushConfig
	(*Vagrantfile_Vagrantfile)(nil),                                  // 193: hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile
	nil,                                                              // 194: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.BoxDownloadOptionsEntry
	(*TargetIndex_TargetIdentifier)(nil),                             // 195: hashicorp.vagrant.sdk.TargetIndex.TargetIdentifier
	(*TargetIndex_AllResponse)(nil),                                  // 196: hashicorp.vagrant.sdk.TargetIndex.AllResponse
	(*TargetIndex_IncludesResponse)(nil),                             // 197: hashicorp.vagrant.sdk.TargetIndex.IncludesResponse
	(*Box_AutomaticUpdateCheckAllowedResponse)(nil),                  // 198: hashicorp.vagrant.sdk.Box.AutomaticUpdateCheckAllowedResponse
	(*Box_HasUpdateRequest)(nil),                                     // 199: hashicorp.vagrant.sdk.Box.HasUpdateRequest
	(*Box_HasUpdateResponse)(nil),                                    // 200: hashicorp.vagrant.sdk.Box.HasUpdateResponse
	(*Box_InUseResponse)(nil),                                        // 201: hashicorp.vagrant.sdk.Box.InUseResponse
	(*Box_MetadataUrlResponse)(nil),                                  // 202: hashicorp.vagrant.sdk.Box.MetadataUrlResponse
	(*Box_NameResponse)(nil),                                         // 203: hashicorp.vagrant.sdk.Box.NameResponse
	(*Box_ProviderResponse)(nil),                                     // 204: hashicorp.vagrant.sdk.Box.ProviderResponse
	(*Box_VersionResponse)(nil),                                      // 205: hashicorp.vagrant.sdk.Box.VersionResponse
	(*Box_EqualityResponse)(nil),                                     // 206: hashicorp.vagrant.sdk.Box.EqualityResponse
	(*BoxCollection_AddRequest)(nil),                                 // 207: hashicorp.vagrant.sdk.BoxCollection.AddRequest
	(*BoxCollection_AllResponse)(nil),                                // 208: hashicorp.vagrant.sdk.BoxCollection.AllResponse
	(*BoxCollection_CleanRequest)(nil),                               // 209: hashicorp.vagrant.sdk.BoxCollection.CleanRequest
	(*BoxCollection_FindRequest)(nil),                                // 210: hashicorp.vagrant.sdk.BoxCollection.FindRequest
	(*anypb.Any)(nil),                                                // 211: google.protobuf.Any
	(*protostructure.Struct)(nil),                                    // 212: protostructure.Struct
	(*status.Status)(nil),                                            // 213: google.rpc.Status
	(*timestamppb.Timestamp)(nil),                                    // 214: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                            // 215: google.protobuf.Empty
}
var file_vagrant_plugin_sdk_plugin_proto_depIdxs = []int32{
	73,  // 0: hashicorp.vagrant.sdk.FuncSpec.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	73,  // 1: hashicorp.vagrant.sdk.FuncSpec.result:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	211, // 2: hashicorp.vagrant.sdk.Args.Seeds.typed:type_name -> google.protobuf.Any
	60,  // 3: hashicorp.vagrant.sdk.Args.Seeds.named:type_name -> hashicorp.vagrant.sdk.Args.Seeds.NamedEntry
	65,  // 4: hashicorp.vagrant.sdk.Args.MetadataSet.metadata:type_name -> hashicorp.vagrant.sdk.Args.MetadataSet.MetadataEntry
	66,  // 5: hashicorp.vagrant.sdk.Args.Folder.folders:type_name -> hashicorp.vagrant.sdk.Args.Folder.FoldersEntry
	0,   // 6: hashicorp.vagrant.sdk.Args.JobInfo.resource_type:type_name -> hashicorp.vagrant.sdk.Args.JobInfo.ResourceType
	211, // 7: hashicorp.vagrant.sdk.Args.Direct.arguments:type_name -> google.protobuf.Any
	211, // 8: hashicorp.vagrant.sdk.Args.Array.list:type_name -> google.protobuf.Any
	72,  // 9: hashicorp.vagrant.sdk.Args.Hash.fields:type_name -> hashicorp.vagrant.sdk.Args.Hash.FieldsEntry
	57,  // 10: hashicorp.vagrant.sdk.Args.Options.options:type_name -> hashicorp.vagrant.sdk.Args.Hash
	211, // 11: hashicorp.vagrant.sdk.Args.Seeds.NamedEntry.value:type_name -> google.protobuf.Any
	211, // 12: hashicorp.vagrant.sdk.Args.Folder.FoldersEntry.value:type_name -> google.protobuf.Any
	1,   // 13: hashicorp.vagrant.sdk.Args.Target.State.state:type_name -> hashicorp.vagrant.sdk.Args.Target.State.State
	2,   // 14: hashicorp.vagrant.sdk.Args.Connection.WinrmInfo.transport:type_name -> hashicorp.vagrant.sdk.Args.Connection.WinrmInfo.Transport
	211, // 15: hashicorp.vagrant.sdk.Args.Hash.FieldsEntry.value:type_name -> google.protobuf.Any
	211, // 16: hashicorp.vagrant.sdk.FuncSpec.Value.value:type_name -> google.protobuf.Any
	73,  // 17: hashicorp.vagrant.sdk.FuncSpec.Args.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	212, // 18: hashicorp.vagrant.sdk.Config.StructResp.struct:type_name -> protostructure.Struct
	80,  // 19: hashicorp.vagrant.sdk.Config.Documentation.fields:type_name -> hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	78,  // 20: hashicorp.vagrant.sdk.Config.Documentation.mappers:type_name -> hashicorp.vagrant.sdk.Config.MapperDocumentation
	77,  // 21: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry.value:type_name -> hashicorp.vagrant.sdk.Config.FieldDocumentation
	3,   // 22: hashicorp.vagrant.sdk.TerminalUI.OutputRequest.style:type_name -> hashicorp.vagrant.sdk.TerminalUI.OutputRequest.Style
	87,  // 23: hashicorp.vagrant.sdk.TerminalUI.Response.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	89,  // 24: hashicorp.vagrant.sdk.TerminalUI.Event.line:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Line
	88,  // 25: hashicorp.vagrant.sdk.TerminalUI.Event.status:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Status
	92,  // 26: hashicorp.vagrant.sdk.TerminalUI.Event.named_values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	90,  // 27: hashicorp.vagrant.sdk.TerminalUI.Event.raw:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	95,  // 28: hashicorp.vagrant.sdk.TerminalUI.Event.table:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Table
	96,  // 29: hashicorp.vagrant.sdk.TerminalUI.Event.step_group:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	97,  // 30: hashicorp.vagrant.sdk.TerminalUI.Event.step:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Step
	86,  // 31: hashicorp.vagrant.sdk.TerminalUI.Event.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Input
	213, // 32: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp.error:type_name -> google.rpc.Status
	91,  // 33: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues.values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	93,  // 34: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow.entries:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	94,  // 35: hashicorp.vagrant.sdk.TerminalUI.Event.Table.rows:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	74,  // 36: hashicorp.vagrant.sdk.Map.Request.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	211, // 37: hashicorp.vagrant.sdk.Map.Response.result:type_name -> google.protobuf.Any
	7,   // 38: hashicorp.vagrant.sdk.Map.ListResponse.funcs:type_name -> hashicorp.vagrant.sdk.FuncSpec
	112, // 39: hashicorp.vagrant.sdk.PluginManager.PluginsResponse.plugins:type_name -> hashicorp.vagrant.sdk.PluginManager.Plugin
	211, // 40: hashicorp.vagrant.sdk.PluginManager.Plugin.plugin:type_name -> google.protobuf.Any
	74,  // 41: hashicorp.vagrant.sdk.Provider.ActionRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	4,   // 42: hashicorp.vagrant.sdk.Command.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Flag.Type
	116, // 43: hashicorp.vagrant.sdk.Command.CommandInfo.flags:type_name -> hashicorp.vagrant.sdk.Command.Flag
	117, // 44: hashicorp.vagrant.sdk.Command.CommandInfo.subcommands:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	117, // 45: hashicorp.vagrant.sdk.Command.CommandInfoResp.command_info:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	74,  // 46: hashicorp.vagrant.sdk.Command.ExecuteReq.spec:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	123, // 47: hashicorp.vagrant.sdk.Command.Arguments.flags:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag
	5,   // 48: hashicorp.vagrant.sdk.Command.Arguments.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	74,  // 49: hashicorp.vagrant.sdk.Platform.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	211, // 50: hashicorp.vagrant.sdk.Platform.Capability.Resp.result:type_name -> google.protobuf.Any
	137, // 51: hashicorp.vagrant.sdk.Ref.Project.basis:type_name -> hashicorp.vagrant.sdk.Ref.Basis
	138, // 52: hashicorp.vagrant.sdk.Ref.Target.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	211, // 53: hashicorp.vagrant.sdk.Target.RecordResponse.record:type_name -> google.protobuf.Any
	138, // 54: hashicorp.vagrant.sdk.Target.ProjectResponse.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	214, // 55: hashicorp.vagrant.sdk.Target.UpdatedAtResponse.updated_at:type_name -> google.protobuf.Timestamp
	69,  // 56: hashicorp.vagrant.sdk.Target.Machine.SetStateRequest.state:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	69,  // 57: hashicorp.vagrant.sdk.Target.Machine.GetStateResponse.state:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	158, // 58: hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse.connection_info:type_name -> hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse.ConnectionInfoEntry
	159, // 59: hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse.synced_folders:type_name -> hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse.MachineSyncedFolder
	211, // 60: hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse.ConnectionInfoEntry.value:type_name -> google.protobuf.Any
	52,  // 61: hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse.MachineSyncedFolder.plugin:type_name -> hashicorp.vagrant.sdk.Args.SyncedFolder
	191, // 62: hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse.MachineSyncedFolder.folder:type_name -> hashicorp.vagrant.sdk.Vagrantfile.SyncedFolder
	164, // 63: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse.machines:type_name -> hashicorp.vagrant.sdk.Project.MachineAndProvider
	193, // 64: hashicorp.vagrant.sdk.Project.ConfigResponse.vagrantfile:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile
	138, // 65: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	136, // 66: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest.box:type_name -> hashicorp.vagrant.sdk.Ref.Box
	137, // 67: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest.basis:type_name -> hashicorp.vagrant.sdk.Ref.Basis
	193, // 68: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse.vagrantfile:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile
	175, // 69: hashicorp.vagrant.sdk.Vagrantfile.TargetRequest.boxes:type_name -> hashicorp.vagrant.sdk.Vagrantfile.BoxCollection
	40,  // 70: hashicorp.vagrant.sdk.Vagrantfile.TargetRequest.project:type_name -> hashicorp.vagrant.sdk.Args.Project
	139, // 71: hashicorp.vagrant.sdk.Vagrantfile.TargetResponse.target:type_name -> hashicorp.vagrant.sdk.Ref.Target
	175, // 72: hashicorp.vagrant.sdk.Vagrantfile.TargetConfigRequest.boxes:type_name -> hashicorp.vagrant.sdk.Vagrantfile.BoxCollection
	187, // 73: hashicorp.vagrant.sdk.Vagrantfile.TargetConfigResponse.target_config:type_name -> hashicorp.vagrant.sdk.Vagrantfile.MachineConfig
	194, // 74: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.box_download_options:type_name -> hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.BoxDownloadOptionsEntry
	189, // 75: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.providers:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Provider
	190, // 76: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.networks:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Network
	188, // 77: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.provisioners:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Provisioner
	191, // 78: hashicorp.vagrant.sdk.Vagrantfile.ConfigVM.synced_folders:type_name -> hashicorp.vagrant.sdk.Vagrantfile.SyncedFolder
	211, // 79: hashicorp.vagrant.sdk.Vagrantfile.GeneralConfig.config:type_name -> google.protobuf.Any
	184, // 80: hashicorp.vagrant.sdk.Vagrantfile.MachineConfig.config_vm:type_name -> hashicorp.vagrant.sdk.Vagrantfile.ConfigVM
	185, // 81: hashicorp.vagrant.sdk.Vagrantfile.MachineConfig.config_vagrant:type_name -> hashicorp.vagrant.sdk.Vagrantfile.ConfigVagrant
	186, // 82: hashicorp.vagrant.sdk.Vagrantfile.MachineConfig.plugin_configs:type_name -> hashicorp.vagrant.sdk.Vagrantfile.GeneralConfig
	211, // 83: hashicorp.vagrant.sdk.Vagrantfile.Provisioner.config:type_name -> google.protobuf.Any
	211, // 84: hashicorp.vagrant.sdk.Vagrantfile.Provider.config:type_name -> google.protobuf.Any
	211, // 85: hashicorp.vagrant.sdk.Vagrantfile.Network.config:type_name -> google.protobuf.Any
	211, // 86: hashicorp.vagrant.sdk.Vagrantfile.SyncedFolder.config:type_name -> google.protobuf.Any
	186, // 87: hashicorp.vagrant.sdk.Vagrantfile.PushConfig.config:type_name -> hashicorp.vagrant.sdk.Vagrantfile.GeneralConfig
	187, // 88: hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile.machine_configs:type_name -> hashicorp.vagrant.sdk.Vagrantfile.MachineConfig
	192, // 89: hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile.push_configs:type_name -> hashicorp.vagrant.sdk.Vagrantfile.PushConfig
	188, // 90: hashicorp.vagrant.sdk.Vagrantfile.Vagrantfile.provisioners:type_name -> hashicorp.vagrant.sdk.Vagrantfile.Provisioner
	43,  // 91: hashicorp.vagrant.sdk.TargetIndex.AllResponse.targets:type_name -> hashicorp.vagrant.sdk.Args.Target
	44,  // 92: hashicorp.vagrant.sdk.BoxCollection.AllResponse.boxes:type_name -> hashicorp.vagrant.sdk.Args.Box
	83,  // 93: hashicorp.vagrant.sdk.TerminalUIService.Output:input_type -> hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	85,  // 94: hashicorp.vagrant.sdk.TerminalUIService.Events:input_type -> hashicorp.vagrant.sdk.TerminalUI.Event
	215, // 95: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:input_type -> google.protobuf.Empty
	215, // 96: hashicorp.vagrant.sdk.Mapper.ListMappers:input_type -> google.protobuf.Empty
	98,  // 97: hashicorp.vagrant.sdk.Mapper.Map:input_type -> hashicorp.vagrant.sdk.Map.Request
	101, // 98: hashicorp.vagrant.sdk.StateBagService.Get:input_type -> hashicorp.vagrant.sdk.StateBag.GetRequest
	101, // 99: hashicorp.vagrant.sdk.StateBagService.GetOk:input_type -> hashicorp.vagrant.sdk.StateBag.GetRequest
	104, // 100: hashicorp.vagrant.sdk.StateBagService.Put:input_type -> hashicorp.vagrant.sdk.StateBag.PutRequest
	106, // 101: hashicorp.vagrant.sdk.StateBagService.Remove:input_type -> hashicorp.vagrant.sdk.StateBag.RemoveRequest
	215, // 102: hashicorp.vagrant.sdk.PluginInfoService.ComponentTypes:input_type -> google.protobuf.Empty
	215, // 103: hashicorp.vagrant.sdk.PluginInfoService.Name:input_type -> google.protobuf.Empty
	110, // 104: hashicorp.vagrant.sdk.PluginManagerService.ListPlugins:input_type -> hashicorp.vagrant.sdk.PluginManager.PluginsRequest
	112, // 105: hashicorp.vagrant.sdk.PluginManagerService.GetPlugin:input_type -> hashicorp.vagrant.sdk.PluginManager.Plugin
	74,  // 106: hashicorp.vagrant.sdk.ProviderService.Usable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 107: hashicorp.vagrant.sdk.ProviderService.UsableSpec:input_type -> google.protobuf.Empty
	74,  // 108: hashicorp.vagrant.sdk.ProviderService.Installed:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 109: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:input_type -> google.protobuf.Empty
	115, // 110: hashicorp.vagrant.sdk.ProviderService.Action:input_type -> hashicorp.vagrant.sdk.Provider.ActionRequest
	115, // 111: hashicorp.vagrant.sdk.ProviderService.ActionSpec:input_type -> hashicorp.vagrant.sdk.Provider.ActionRequest
	74,  // 112: hashicorp.vagrant.sdk.ProviderService.MachineIdChanged:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 113: hashicorp.vagrant.sdk.ProviderService.MachineIdChangedSpec:input_type -> google.protobuf.Empty
	74,  // 114: hashicorp.vagrant.sdk.ProviderService.SshInfo:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 115: hashicorp.vagrant.sdk.ProviderService.SshInfoSpec:input_type -> google.protobuf.Empty
	74,  // 116: hashicorp.vagrant.sdk.ProviderService.State:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 117: hashicorp.vagrant.sdk.ProviderService.StateSpec:input_type -> google.protobuf.Empty
	215, // 118: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 119: hashicorp.vagrant.sdk.ProviderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 120: hashicorp.vagrant.sdk.ProviderService.Documentation:input_type -> google.protobuf.Empty
	132, // 121: hashicorp.vagrant.sdk.ProviderService.Capability:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	132, // 122: hashicorp.vagrant.sdk.ProviderService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	74,  // 123: hashicorp.vagrant.sdk.ProviderService.HasCapability:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 124: hashicorp.vagrant.sdk.ProviderService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	28,  // 125: hashicorp.vagrant.sdk.ProviderService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 126: hashicorp.vagrant.sdk.ProviderService.Seeds:input_type -> google.protobuf.Empty
	215, // 127: hashicorp.vagrant.sdk.ProvisionerService.ConfigureSpec:input_type -> google.protobuf.Empty
	74,  // 128: hashicorp.vagrant.sdk.ProvisionerService.Configure:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 129: hashicorp.vagrant.sdk.ProvisionerService.ProvisionSpec:input_type -> google.protobuf.Empty
	74,  // 130: hashicorp.vagrant.sdk.ProvisionerService.Provision:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 131: hashicorp.vagrant.sdk.ProvisionerService.CleanupSpec:input_type -> google.protobuf.Empty
	74,  // 132: hashicorp.vagrant.sdk.ProvisionerService.Cleanup:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	28,  // 133: hashicorp.vagrant.sdk.ProvisionerService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 134: hashicorp.vagrant.sdk.ProvisionerService.Seeds:input_type -> google.protobuf.Empty
	215, // 135: hashicorp.vagrant.sdk.CommandService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 136: hashicorp.vagrant.sdk.CommandService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 137: hashicorp.vagrant.sdk.CommandService.Documentation:input_type -> google.protobuf.Empty
	121, // 138: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:input_type -> hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	120, // 139: hashicorp.vagrant.sdk.CommandService.Execute:input_type -> hashicorp.vagrant.sdk.Command.ExecuteReq
	215, // 140: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:input_type -> google.protobuf.Empty
	74,  // 141: hashicorp.vagrant.sdk.CommandService.CommandInfo:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	28,  // 142: hashicorp.vagrant.sdk.CommandService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 143: hashicorp.vagrant.sdk.CommandService.Seeds:input_type -> google.protobuf.Empty
	215, // 144: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 145: hashicorp.vagrant.sdk.CommunicatorService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 146: hashicorp.vagrant.sdk.CommunicatorService.Documentation:input_type -> google.protobuf.Empty
	215, // 147: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:input_type -> google.protobuf.Empty
	74,  // 148: hashicorp.vagrant.sdk.CommunicatorService.Match:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 149: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:input_type -> google.protobuf.Empty
	74,  // 150: hashicorp.vagrant.sdk.CommunicatorService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 151: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:input_type -> google.protobuf.Empty
	74,  // 152: hashicorp.vagrant.sdk.CommunicatorService.Ready:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 153: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:input_type -> google.protobuf.Empty
	74,  // 154: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 155: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:input_type -> google.protobuf.Empty
	74,  // 156: hashicorp.vagrant.sdk.CommunicatorService.Download:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 157: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:input_type -> google.protobuf.Empty
	74,  // 158: hashicorp.vagrant.sdk.CommunicatorService.Upload:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 159: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:input_type -> google.protobuf.Empty
	74,  // 160: hashicorp.vagrant.sdk.CommunicatorService.Execute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 161: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:input_type -> google.protobuf.Empty
	74,  // 162: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 163: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:input_type -> google.protobuf.Empty
	74,  // 164: hashicorp.vagrant.sdk.CommunicatorService.Test:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 165: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:input_type -> google.protobuf.Empty
	74,  // 166: hashicorp.vagrant.sdk.CommunicatorService.Reset:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	28,  // 167: hashicorp.vagrant.sdk.CommunicatorService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 168: hashicorp.vagrant.sdk.CommunicatorService.Seeds:input_type -> google.protobuf.Empty
	215, // 169: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 170: hashicorp.vagrant.sdk.ConfigService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 171: hashicorp.vagrant.sdk.ConfigService.Documentation:input_type -> google.protobuf.Empty
	215, // 172: hashicorp.vagrant.sdk.HostService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 173: hashicorp.vagrant.sdk.HostService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 174: hashicorp.vagrant.sdk.HostService.Documentation:input_type -> google.protobuf.Empty
	74,  // 175: hashicorp.vagrant.sdk.HostService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 176: hashicorp.vagrant.sdk.HostService.DetectSpec:input_type -> google.protobuf.Empty
	132, // 177: hashicorp.vagrant.sdk.HostService.Capability:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	132, // 178: hashicorp.vagrant.sdk.HostService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	74,  // 179: hashicorp.vagrant.sdk.HostService.HasCapability:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 180: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	74,  // 181: hashicorp.vagrant.sdk.HostService.Parent:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 182: hashicorp.vagrant.sdk.HostService.ParentSpec:input_type -> google.protobuf.Empty
	28,  // 183: hashicorp.vagrant.sdk.HostService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 184: hashicorp.vagrant.sdk.HostService.Seeds:input_type -> google.protobuf.Empty
	215, // 185: hashicorp.vagrant.sdk.GuestService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 186: hashicorp.vagrant.sdk.GuestService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 187: hashicorp.vagrant.sdk.GuestService.Documentation:input_type -> google.protobuf.Empty
	74,  // 188: hashicorp.vagrant.sdk.GuestService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 189: hashicorp.vagrant.sdk.GuestService.DetectSpec:input_type -> google.protobuf.Empty
	132, // 190: hashicorp.vagrant.sdk.GuestService.Capability:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	132, // 191: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	74,  // 192: hashicorp.vagrant.sdk.GuestService.HasCapability:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 193: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	74,  // 194: hashicorp.vagrant.sdk.GuestService.Parent:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 195: hashicorp.vagrant.sdk.GuestService.ParentSpec:input_type -> google.protobuf.Empty
	28,  // 196: hashicorp.vagrant.sdk.GuestService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 197: hashicorp.vagrant.sdk.GuestService.Seeds:input_type -> google.protobuf.Empty
	215, // 198: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:input_type -> google.protobuf.Empty
	75,  // 199: hashicorp.vagrant.sdk.SyncedFolderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	215, // 200: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:input_type -> google.protobuf.Empty
	74,  // 201: hashicorp.vagrant.sdk.SyncedFolderService.Usable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 202: hashicorp.vagrant.sdk.SyncedFolderService.UsableSpec:input_type -> google.protobuf.Empty
	74,  // 203: hashicorp.vagrant.sdk.SyncedFolderService.Enable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 204: hashicorp.vagrant.sdk.SyncedFolderService.EnableSpec:input_type -> google.protobuf.Empty
	74,  // 205: hashicorp.vagrant.sdk.SyncedFolderService.Disable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 206: hashicorp.vagrant.sdk.SyncedFolderService.DisableSpec:input_type -> google.protobuf.Empty
	74,  // 207: hashicorp.vagrant.sdk.SyncedFolderService.Cleanup:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 208: hashicorp.vagrant.sdk.SyncedFolderService.CleanupSpec:input_type -> google.protobuf.Empty
	132, // 209: hashicorp.vagrant.sdk.SyncedFolderService.Capability:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	132, // 210: hashicorp.vagrant.sdk.SyncedFolderService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Platform.Capability.NamedRequest
	74,  // 211: hashicorp.vagrant.sdk.SyncedFolderService.HasCapability:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	215, // 212: hashicorp.vagrant.sdk.SyncedFolderService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	28,  // 213: hashicorp.vagrant.sdk.SyncedFolderService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 214: hashicorp.vagrant.sdk.SyncedFolderService.Seeds:input_type -> google.protobuf.Empty
	215, // 215: hashicorp.vagrant.sdk.BasisService.DataDir:input_type -> google.protobuf.Empty
	215, // 216: hashicorp.vagrant.sdk.BasisService.UI:input_type -> google.protobuf.Empty
	215, // 217: hashicorp.vagrant.sdk.BasisService.Host:input_type -> google.protobuf.Empty
	215, // 218: hashicorp.vagrant.sdk.TargetService.ResourceId:input_type -> google.protobuf.Empty
	215, // 219: hashicorp.vagrant.sdk.TargetService.Record:input_type -> google.protobuf.Empty
	215, // 220: hashicorp.vagrant.sdk.TargetService.Name:input_type -> google.protobuf.Empty
	144, // 221: hashicorp.vagrant.sdk.TargetService.SetName:input_type -> hashicorp.vagrant.sdk.Target.SetNameRequest
	215, // 222: hashicorp.vagrant.sdk.TargetService.Project:input_type -> google.protobuf.Empty
	215, // 223: hashicorp.vagrant.sdk.TargetService.Metadata:input_type -> google.protobuf.Empty
	215, // 224: hashicorp.vagrant.sdk.TargetService.DataDir:input_type -> google.protobuf.Empty
	215, // 225: hashicorp.vagrant.sdk.TargetService.State:input_type -> google.protobuf.Empty
	215, // 226: hashicorp.vagrant.sdk.TargetService.UI:input_type -> google.protobuf.Empty
	211, // 227: hashicorp.vagrant.sdk.TargetService.Specialize:input_type -> google.protobuf.Any
	215, // 228: hashicorp.vagrant.sdk.TargetService.Provider:input_type -> google.protobuf.Empty
	215, // 229: hashicorp.vagrant.sdk.TargetService.ProviderName:input_type -> google.protobuf.Empty
	215, // 230: hashicorp.vagrant.sdk.TargetService.UpdatedAt:input_type -> google.protobuf.Empty
	215, // 231: hashicorp.vagrant.sdk.TargetService.Communicate:input_type -> google.protobuf.Empty
	215, // 232: hashicorp.vagrant.sdk.TargetService.Save:input_type -> google.protobuf.Empty
	149, // 233: hashicorp.vagrant.sdk.TargetService.SetUUID:input_type -> hashicorp.vagrant.sdk.Target.SetUUIDRequest
	215, // 234: hashicorp.vagrant.sdk.TargetService.GetUUID:input_type -> google.protobuf.Empty
	215, // 235: hashicorp.vagrant.sdk.TargetService.Destroy:input_type -> google.protobuf.Empty
	215, // 236: hashicorp.vagrant.sdk.TargetMachineService.ResourceId:input_type -> google.protobuf.Empty
	215, // 237: hashicorp.vagrant.sdk.TargetMachineService.Record:input_type -> google.protobuf.Empty
	215, // 238: hashicorp.vagrant.sdk.TargetMachineService.Name:input_type -> google.protobuf.Empty
	144, // 239: hashicorp.vagrant.sdk.TargetMachineService.SetName:input_type -> hashicorp.vagrant.sdk.Target.SetNameRequest
	215, // 240: hashicorp.vagrant.sdk.TargetMachineService.Project:input_type -> google.protobuf.Empty
	215, // 241: hashicorp.vagrant.sdk.TargetMachineService.Metadata:input_type -> google.protobuf.Empty
	215, // 242: hashicorp.vagrant.sdk.TargetMachineService.DataDir:input_type -> google.protobuf.Empty
	215, // 243: hashicorp.vagrant.sdk.TargetMachineService.State:input_type -> google.protobuf.Empty
	215, // 244: hashicorp.vagrant.sdk.TargetMachineService.UI:input_type -> google.protobuf.Empty
	211, // 245: hashicorp.vagrant.sdk.TargetMachineService.Specialize:input_type -> google.protobuf.Any
	215, // 246: hashicorp.vagrant.sdk.TargetMachineService.Provider:input_type -> google.protobuf.Empty
	215, // 247: hashicorp.vagrant.sdk.TargetMachineService.ProviderName:input_type -> google.protobuf.Empty
	215, // 248: hashicorp.vagrant.sdk.TargetMachineService.UpdatedAt:input_type -> google.protobuf.Empty
	215, // 249: hashicorp.vagrant.sdk.TargetMachineService.Communicate:input_type -> google.protobuf.Empty
	215, // 250: hashicorp.vagrant.sdk.TargetMachineService.Save:input_type -> google.protobuf.Empty
	149, // 251: hashicorp.vagrant.sdk.TargetMachineService.SetUUID:input_type -> hashicorp.vagrant.sdk.Target.SetUUIDRequest
	215, // 252: hashicorp.vagrant.sdk.TargetMachineService.GetUUID:input_type -> google.protobuf.Empty
	215, // 253: hashicorp.vagrant.sdk.TargetMachineService.Destroy:input_type -> google.protobuf.Empty
	151, // 254: hashicorp.vagrant.sdk.TargetMachineService.SetID:input_type -> hashicorp.vagrant.sdk.Target.Machine.SetIDRequest
	215, // 255: hashicorp.vagrant.sdk.TargetMachineService.GetID:input_type -> google.protobuf.Empty
	153, // 256: hashicorp.vagrant.sdk.TargetMachineService.SetState:input_type -> hashicorp.vagrant.sdk.Target.Machine.SetStateRequest
	215, // 257: hashicorp.vagrant.sdk.TargetMachineService.GetState:input_type -> google.protobuf.Empty
	215, // 258: hashicorp.vagrant.sdk.TargetMachineService.Box:input_type -> google.protobuf.Empty
	215, // 259: hashicorp.vagrant.sdk.TargetMachineService.Guest:input_type -> google.protobuf.Empty
	215, // 260: hashicorp.vagrant.sdk.TargetMachineService.Reload:input_type -> google.protobuf.Empty
	215, // 261: hashicorp.vagrant.sdk.TargetMachineService.ConnectionInfo:input_type -> google.protobuf.Empty
	215, // 262: hashicorp.vagrant.sdk.TargetMachineService.UID:input_type -> google.protobuf.Empty
	215, // 263: hashicorp.vagrant.sdk.TargetMachineService.SyncedFolders:input_type -> google.protobuf.Empty
	215, // 264: hashicorp.vagrant.sdk.ProjectService.MachineNames:input_type -> google.protobuf.Empty
	215, // 265: hashicorp.vagrant.sdk.ProjectService.TargetIndex:input_type -> google.protobuf.Empty
	215, // 266: hashicorp.vagrant.sdk.ProjectService.CWD:input_type -> google.protobuf.Empty
	215, // 267: hashicorp.vagrant.sdk.ProjectService.Config:input_type -> google.protobuf.Empty
	215, // 268: hashicorp.vagrant.sdk.ProjectService.DataDir:input_type -> google.protobuf.Empty
	215, // 269: hashicorp.vagrant.sdk.ProjectService.VagrantfileName:input_type -> google.protobuf.Empty
	215, // 270: hashicorp.vagrant.sdk.ProjectService.VagrantfilePath:input_type -> google.protobuf.Empty
	215, // 271: hashicorp.vagrant.sdk.ProjectService.UI:input_type -> google.protobuf.Empty
	215, // 272: hashicorp.vagrant.sdk.ProjectService.Home:input_type -> google.protobuf.Empty
	215, // 273: hashicorp.vagrant.sdk.ProjectService.LocalData:input_type -> google.protobuf.Empty
	215, // 274: hashicorp.vagrant.sdk.ProjectService.Tmp:input_type -> google.protobuf.Empty
	215, // 275: hashicorp.vagrant.sdk.ProjectService.DefaultPrivateKey:input_type -> google.protobuf.Empty
	215, // 276: hashicorp.vagrant.sdk.ProjectService.Host:input_type -> google.protobuf.Empty
	161, // 277: hashicorp.vagrant.sdk.ProjectService.Target:input_type -> hashicorp.vagrant.sdk.Project.TargetRequest
	215, // 278: hashicorp.vagrant.sdk.ProjectService.TargetNames:input_type -> google.protobuf.Empty
	215, // 279: hashicorp.vagrant.sdk.ProjectService.TargetIds:input_type -> google.protobuf.Empty
	215, // 280: hashicorp.vagrant.sdk.ProjectService.Boxes:input_type -> google.protobuf.Empty
	215, // 281: hashicorp.vagrant.sdk.ProjectService.ResourceId:input_type -> google.protobuf.Empty
	176, // 282: hashicorp.vagrant.sdk.VagrantfileService.GetVagrantfile:input_type -> hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest
	178, // 283: hashicorp.vagrant.sdk.VagrantfileService.Target:input_type -> hashicorp.vagrant.sdk.Vagrantfile.TargetRequest
	180, // 284: hashicorp.vagrant.sdk.VagrantfileService.TargetConfig:input_type -> hashicorp.vagrant.sdk.Vagrantfile.TargetConfigRequest
	215, // 285: hashicorp.vagrant.sdk.VagrantfileService.TargetNames:input_type -> google.protobuf.Empty
	215, // 286: hashicorp.vagrant.sdk.VagrantfileService.PrimaryTargetName:input_type -> google.protobuf.Empty
	195, // 287: hashicorp.vagrant.sdk.TargetIndexService.Delete:input_type -> hashicorp.vagrant.sdk.TargetIndex.TargetIdentifier
	195, // 288: hashicorp.vagrant.sdk.TargetIndexService.Get:input_type -> hashicorp.vagrant.sdk.TargetIndex.TargetIdentifier
	195, // 289: hashicorp.vagrant.sdk.TargetIndexService.Includes:input_type -> hashicorp.vagrant.sdk.TargetIndex.TargetIdentifier
	43,  // 290: hashicorp.vagrant.sdk.TargetIndexService.Set:input_type -> hashicorp.vagrant.sdk.Args.Target
	215, // 291: hashicorp.vagrant.sdk.TargetIndexService.All:input_type -> google.protobuf.Empty
	215, // 292: hashicorp.vagrant.sdk.BoxService.AutomaticUpdateCheckAllowed:input_type -> google.protobuf.Empty
	215, // 293: hashicorp.vagrant.sdk.BoxService.Destroy:input_type -> google.protobuf.Empty
	199, // 294: hashicorp.vagrant.sdk.BoxService.HasUpdate:input_type -> hashicorp.vagrant.sdk.Box.HasUpdateRequest
	53,  // 295: hashicorp.vagrant.sdk.BoxService.InUse:input_type -> hashicorp.vagrant.sdk.Args.TargetIndex
	31,  // 296: hashicorp.vagrant.sdk.BoxService.Repackage:input_type -> hashicorp.vagrant.sdk.Args.Path
	215, // 297: hashicorp.vagrant.sdk.BoxService.Directory:input_type -> google.protobuf.Empty
	215, // 298: hashicorp.vagrant.sdk.BoxService.Metadata:input_type -> google.protobuf.Empty
	215, // 299: hashicorp.vagrant.sdk.BoxService.MetadataURL:input_type -> google.protobuf.Empty
	215, // 300: hashicorp.vagrant.sdk.BoxService.Name:input_type -> google.protobuf.Empty
	215, // 301: hashicorp.vagrant.sdk.BoxService.Provider:input_type -> google.protobuf.Empty
	215, // 302: hashicorp.vagrant.sdk.BoxService.Version:input_type -> google.protobuf.Empty
	44,  // 303: hashicorp.vagrant.sdk.BoxService.Compare:input_type -> hashicorp.vagrant.sdk.Args.Box
	207, // 304: hashicorp.vagrant.sdk.BoxCollectionService.Add:input_type -> hashicorp.vagrant.sdk.BoxCollection.AddRequest
	215, // 305: hashicorp.vagrant.sdk.BoxCollectionService.All:input_type -> google.protobuf.Empty
	209, // 306: hashicorp.vagrant.sdk.BoxCollectionService.Clean:input_type -> hashicorp.vagrant.sdk.BoxCollection.CleanRequest
	210, // 307: hashicorp.vagrant.sdk.BoxCollectionService.Find:input_type -> hashicorp.vagrant.sdk.BoxCollection.FindRequest
	215, // 308: hashicorp.vagrant.sdk.PushService.PushSpec:input_type -> google.protobuf.Empty
	74,  // 309: hashicorp.vagrant.sdk.PushService.Push:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	28,  // 310: hashicorp.vagrant.sdk.PushService.Seed:input_type -> hashicorp.vagrant.sdk.Args.Seeds
	215, // 311: hashicorp.vagrant.sdk.PushService.Seeds:input_type -> google.protobuf.Empty
	215, // 312: hashicorp.vagrant.sdk.TerminalUIService.Output:output_type -> google.protobuf.Empty
	84,  // 313: hashicorp.vagrant.sdk.TerminalUIService.Events:output_type -> hashicorp.vagrant.sdk.TerminalUI.Response
	82,  // 314: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:output_type -> hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	100, // 315: hashicorp.vagrant.sdk.Mapper.ListMappers:output_type -> hashicorp.vagrant.sdk.Map.ListResponse
	99,  // 316: hashicorp.vagrant.sdk.Mapper.Map:output_type -> hashicorp.vagrant.sdk.Map.Response
	102, // 317: hashicorp.vagrant.sdk.StateBagService.Get:output_type -> hashicorp.vagrant.sdk.StateBag.GetResponse
	103, // 318: hashicorp.vagrant.sdk.StateBagService.GetOk:output_type -> hashicorp.vagrant.sdk.StateBag.GetOkResponse
	105, // 319: hashicorp.vagrant.sdk.StateBagService.Put:output_type -> hashicorp.vagrant.sdk.StateBag.PutResponse
	107, // 320: hashicorp.vagrant.sdk.StateBagService.Remove:output_type -> hashicorp.vagrant.sdk.StateBag.RemoveResponse
	108, // 321: hashicorp.vagrant.sdk.PluginInfoService.ComponentTypes:output_type -> hashicorp.vagrant.sdk.PluginInfo.ComponentList
	109, // 322: hashicorp.vagrant.sdk.PluginInfoService.Name:output_type -> hashicorp.vagrant.sdk.PluginInfo.Name
	111, // 323: hashicorp.vagrant.sdk.PluginManagerService.ListPlugins:output_type -> hashicorp.vagrant.sdk.PluginManager.PluginsResponse
	112, // 324: hashicorp.vagrant.sdk.PluginManagerService.GetPlugin:output_type -> hashicorp.vagrant.sdk.PluginManager.Plugin
	113, // 325: hashicorp.vagrant.sdk.ProviderService.Usable:output_type -> hashicorp.vagrant.sdk.Provider.UsableResp
	7,   // 326: hashicorp.vagrant.sdk.ProviderService.UsableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	114, // 327: hashicorp.vagrant.sdk.ProviderService.Installed:output_type -> hashicorp.vagrant.sdk.Provider.InstalledResp
	7,   // 328: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 329: hashicorp.vagrant.sdk.ProviderService.Action:output_type -> google.protobuf.Empty
	7,   // 330: hashicorp.vagrant.sdk.ProviderService.ActionSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 331: hashicorp.vagrant.sdk.ProviderService.MachineIdChanged:output_type -> google.protobuf.Empty
	7,   // 332: hashicorp.vagrant.sdk.ProviderService.MachineIdChangedSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	70,  // 333: hashicorp.vagrant.sdk.ProviderService.SshInfo:output_type -> hashicorp.vagrant.sdk.Args.Connection.SSHInfo
	7,   // 334: hashicorp.vagrant.sdk.ProviderService.SshInfoSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	69,  // 335: hashicorp.vagrant.sdk.ProviderService.State:output_type -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	7,   // 336: hashicorp.vagrant.sdk.ProviderService.StateSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	76,  // 337: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 338: hashicorp.vagrant.sdk.ProviderService.Configure:output_type -> google.protobuf.Empty
	79,  // 339: hashicorp.vagrant.sdk.ProviderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	134, // 340: hashicorp.vagrant.sdk.ProviderService.Capability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.Resp
	7,   // 341: hashicorp.vagrant.sdk.ProviderService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	133, // 342: hashicorp.vagrant.sdk.ProviderService.HasCapability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.CheckResp
	7,   // 343: hashicorp.vagrant.sdk.ProviderService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 344: hashicorp.vagrant.sdk.ProviderService.Seed:output_type -> google.protobuf.Empty
	28,  // 345: hashicorp.vagrant.sdk.ProviderService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	7,   // 346: hashicorp.vagrant.sdk.ProvisionerService.ConfigureSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 347: hashicorp.vagrant.sdk.ProvisionerService.Configure:output_type -> google.protobuf.Empty
	7,   // 348: hashicorp.vagrant.sdk.ProvisionerService.ProvisionSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 349: hashicorp.vagrant.sdk.ProvisionerService.Provision:output_type -> google.protobuf.Empty
	7,   // 350: hashicorp.vagrant.sdk.ProvisionerService.CleanupSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 351: hashicorp.vagrant.sdk.ProvisionerService.Cleanup:output_type -> google.protobuf.Empty
	215, // 352: hashicorp.vagrant.sdk.ProvisionerService.Seed:output_type -> google.protobuf.Empty
	28,  // 353: hashicorp.vagrant.sdk.ProvisionerService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	76,  // 354: hashicorp.vagrant.sdk.CommandService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 355: hashicorp.vagrant.sdk.CommandService.Configure:output_type -> google.protobuf.Empty
	79,  // 356: hashicorp.vagrant.sdk.CommandService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	7,   // 357: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	119, // 358: hashicorp.vagrant.sdk.CommandService.Execute:output_type -> hashicorp.vagrant.sdk.Command.ExecuteResp
	7,   // 359: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	118, // 360: hashicorp.vagrant.sdk.CommandService.CommandInfo:output_type -> hashicorp.vagrant.sdk.Command.CommandInfoResp
	215, // 361: hashicorp.vagrant.sdk.CommandService.Seed:output_type -> google.protobuf.Empty
	28,  // 362: hashicorp.vagrant.sdk.CommandService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	76,  // 363: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 364: hashicorp.vagrant.sdk.CommunicatorService.Configure:output_type -> google.protobuf.Empty
	79,  // 365: hashicorp.vagrant.sdk.CommunicatorService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	7,   // 366: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	124, // 367: hashicorp.vagrant.sdk.CommunicatorService.Match:output_type -> hashicorp.vagrant.sdk.Communicator.MatchResp
	7,   // 368: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 369: hashicorp.vagrant.sdk.CommunicatorService.Init:output_type -> google.protobuf.Empty
	7,   // 370: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	125, // 371: hashicorp.vagrant.sdk.CommunicatorService.Ready:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	7,   // 372: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	125, // 373: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	7,   // 374: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 375: hashicorp.vagrant.sdk.CommunicatorService.Download:output_type -> google.protobuf.Empty
	7,   // 376: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 377: hashicorp.vagrant.sdk.CommunicatorService.Upload:output_type -> google.protobuf.Empty
	7,   // 378: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	126, // 379: hashicorp.vagrant.sdk.CommunicatorService.Execute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	7,   // 380: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	126, // 381: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	7,   // 382: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	127, // 383: hashicorp.vagrant.sdk.CommunicatorService.Test:output_type -> hashicorp.vagrant.sdk.Communicator.TestResp
	7,   // 384: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 385: hashicorp.vagrant.sdk.CommunicatorService.Reset:output_type -> google.protobuf.Empty
	215, // 386: hashicorp.vagrant.sdk.CommunicatorService.Seed:output_type -> google.protobuf.Empty
	28,  // 387: hashicorp.vagrant.sdk.CommunicatorService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	76,  // 388: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 389: hashicorp.vagrant.sdk.ConfigService.Configure:output_type -> google.protobuf.Empty
	79,  // 390: hashicorp.vagrant.sdk.ConfigService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	76,  // 391: hashicorp.vagrant.sdk.HostService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 392: hashicorp.vagrant.sdk.HostService.Configure:output_type -> google.protobuf.Empty
	79,  // 393: hashicorp.vagrant.sdk.HostService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	129, // 394: hashicorp.vagrant.sdk.HostService.Detect:output_type -> hashicorp.vagrant.sdk.Platform.DetectResp
	7,   // 395: hashicorp.vagrant.sdk.HostService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	134, // 396: hashicorp.vagrant.sdk.HostService.Capability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.Resp
	7,   // 397: hashicorp.vagrant.sdk.HostService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	133, // 398: hashicorp.vagrant.sdk.HostService.HasCapability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.CheckResp
	7,   // 399: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	130, // 400: hashicorp.vagrant.sdk.HostService.Parent:output_type -> hashicorp.vagrant.sdk.Platform.ParentResp
	7,   // 401: hashicorp.vagrant.sdk.HostService.ParentSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 402: hashicorp.vagrant.sdk.HostService.Seed:output_type -> google.protobuf.Empty
	28,  // 403: hashicorp.vagrant.sdk.HostService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	76,  // 404: hashicorp.vagrant.sdk.GuestService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 405: hashicorp.vagrant.sdk.GuestService.Configure:output_type -> google.protobuf.Empty
	79,  // 406: hashicorp.vagrant.sdk.GuestService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	129, // 407: hashicorp.vagrant.sdk.GuestService.Detect:output_type -> hashicorp.vagrant.sdk.Platform.DetectResp
	7,   // 408: hashicorp.vagrant.sdk.GuestService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	134, // 409: hashicorp.vagrant.sdk.GuestService.Capability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.Resp
	7,   // 410: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	133, // 411: hashicorp.vagrant.sdk.GuestService.HasCapability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.CheckResp
	7,   // 412: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	130, // 413: hashicorp.vagrant.sdk.GuestService.Parent:output_type -> hashicorp.vagrant.sdk.Platform.ParentResp
	7,   // 414: hashicorp.vagrant.sdk.GuestService.ParentSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 415: hashicorp.vagrant.sdk.GuestService.Seed:output_type -> google.protobuf.Empty
	28,  // 416: hashicorp.vagrant.sdk.GuestService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	76,  // 417: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	215, // 418: hashicorp.vagrant.sdk.SyncedFolderService.Configure:output_type -> google.protobuf.Empty
	79,  // 419: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	135, // 420: hashicorp.vagrant.sdk.SyncedFolderService.Usable:output_type -> hashicorp.vagrant.sdk.SyncedFolder.UsableResp
	7,   // 421: hashicorp.vagrant.sdk.SyncedFolderService.UsableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 422: hashicorp.vagrant.sdk.SyncedFolderService.Enable:output_type -> google.protobuf.Empty
	7,   // 423: hashicorp.vagrant.sdk.SyncedFolderService.EnableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 424: hashicorp.vagrant.sdk.SyncedFolderService.Disable:output_type -> google.protobuf.Empty
	7,   // 425: hashicorp.vagrant.sdk.SyncedFolderService.DisableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 426: hashicorp.vagrant.sdk.SyncedFolderService.Cleanup:output_type -> google.protobuf.Empty
	7,   // 427: hashicorp.vagrant.sdk.SyncedFolderService.CleanupSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	134, // 428: hashicorp.vagrant.sdk.SyncedFolderService.Capability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.Resp
	7,   // 429: hashicorp.vagrant.sdk.SyncedFolderService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	133, // 430: hashicorp.vagrant.sdk.SyncedFolderService.HasCapability:output_type -> hashicorp.vagrant.sdk.Platform.Capability.CheckResp
	7,   // 431: hashicorp.vagrant.sdk.SyncedFolderService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 432: hashicorp.vagrant.sdk.SyncedFolderService.Seed:output_type -> google.protobuf.Empty
	28,  // 433: hashicorp.vagrant.sdk.SyncedFolderService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	61,  // 434: hashicorp.vagrant.sdk.BasisService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Basis
	34,  // 435: hashicorp.vagrant.sdk.BasisService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	47,  // 436: hashicorp.vagrant.sdk.BasisService.Host:output_type -> hashicorp.vagrant.sdk.Args.Host
	140, // 437: hashicorp.vagrant.sdk.TargetService.ResourceId:output_type -> hashicorp.vagrant.sdk.Target.ResourceIdResponse
	141, // 438: hashicorp.vagrant.sdk.TargetService.Record:output_type -> hashicorp.vagrant.sdk.Target.RecordResponse
	142, // 439: hashicorp.vagrant.sdk.TargetService.Name:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	215, // 440: hashicorp.vagrant.sdk.TargetService.SetName:output_type -> google.protobuf.Empty
	40,  // 441: hashicorp.vagrant.sdk.TargetService.Project:output_type -> hashicorp.vagrant.sdk.Args.Project
	30,  // 442: hashicorp.vagrant.sdk.TargetService.Metadata:output_type -> hashicorp.vagrant.sdk.Args.MetadataSet
	63,  // 443: hashicorp.vagrant.sdk.TargetService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Target
	67,  // 444: hashicorp.vagrant.sdk.TargetService.State:output_type -> hashicorp.vagrant.sdk.Args.Target.State
	34,  // 445: hashicorp.vagrant.sdk.TargetService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	211, // 446: hashicorp.vagrant.sdk.TargetService.Specialize:output_type -> google.protobuf.Any
	41,  // 447: hashicorp.vagrant.sdk.TargetService.Provider:output_type -> hashicorp.vagrant.sdk.Args.Provider
	142, // 448: hashicorp.vagrant.sdk.TargetService.ProviderName:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	147, // 449: hashicorp.vagrant.sdk.TargetService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	49,  // 450: hashicorp.vagrant.sdk.TargetService.Communicate:output_type -> hashicorp.vagrant.sdk.Args.Communicator
	215, // 451: hashicorp.vagrant.sdk.TargetService.Save:output_type -> google.protobuf.Empty
	215, // 452: hashicorp.vagrant.sdk.TargetService.SetUUID:output_type -> google.protobuf.Empty
	148, // 453: hashicorp.vagrant.sdk.TargetService.GetUUID:output_type -> hashicorp.vagrant.sdk.Target.GetUUIDResponse
	215, // 454: hashicorp.vagrant.sdk.TargetService.Destroy:output_type -> google.protobuf.Empty
	140, // 455: hashicorp.vagrant.sdk.TargetMachineService.ResourceId:output_type -> hashicorp.vagrant.sdk.Target.ResourceIdResponse
	141, // 456: hashicorp.vagrant.sdk.TargetMachineService.Record:output_type -> hashicorp.vagrant.sdk.Target.RecordResponse
	142, // 457: hashicorp.vagrant.sdk.TargetMachineService.Name:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	215, // 458: hashicorp.vagrant.sdk.TargetMachineService.SetName:output_type -> google.protobuf.Empty
	40,  // 459: hashicorp.vagrant.sdk.TargetMachineService.Project:output_type -> hashicorp.vagrant.sdk.Args.Project
	30,  // 460: hashicorp.vagrant.sdk.TargetMachineService.Metadata:output_type -> hashicorp.vagrant.sdk.Args.MetadataSet
	63,  // 461: hashicorp.vagrant.sdk.TargetMachineService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Target
	67,  // 462: hashicorp.vagrant.sdk.TargetMachineService.State:output_type -> hashicorp.vagrant.sdk.Args.Target.State
	34,  // 463: hashicorp.vagrant.sdk.TargetMachineService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	211, // 464: hashicorp.vagrant.sdk.TargetMachineService.Specialize:output_type -> google.protobuf.Any
	41,  // 465: hashicorp.vagrant.sdk.TargetMachineService.Provider:output_type -> hashicorp.vagrant.sdk.Args.Provider
	142, // 466: hashicorp.vagrant.sdk.TargetMachineService.ProviderName:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	147, // 467: hashicorp.vagrant.sdk.TargetMachineService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	49,  // 468: hashicorp.vagrant.sdk.TargetMachineService.Communicate:output_type -> hashicorp.vagrant.sdk.Args.Communicator
	215, // 469: hashicorp.vagrant.sdk.TargetMachineService.Save:output_type -> google.protobuf.Empty
	215, // 470: hashicorp.vagrant.sdk.TargetMachineService.SetUUID:output_type -> google.protobuf.Empty
	148, // 471: hashicorp.vagrant.sdk.TargetMachineService.GetUUID:output_type -> hashicorp.vagrant.sdk.Target.GetUUIDResponse
	215, // 472: hashicorp.vagrant.sdk.TargetMachineService.Destroy:output_type -> google.protobuf.Empty
	215, // 473: hashicorp.vagrant.sdk.TargetMachineService.SetID:output_type -> google.protobuf.Empty
	152, // 474: hashicorp.vagrant.sdk.TargetMachineService.GetID:output_type -> hashicorp.vagrant.sdk.Target.Machine.GetIDResponse
	215, // 475: hashicorp.vagrant.sdk.TargetMachineService.SetState:output_type -> google.protobuf.Empty
	69,  // 476: hashicorp.vagrant.sdk.TargetMachineService.GetState:output_type -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	44,  // 477: hashicorp.vagrant.sdk.TargetMachineService.Box:output_type -> hashicorp.vagrant.sdk.Args.Box
	48,  // 478: hashicorp.vagrant.sdk.TargetMachineService.Guest:output_type -> hashicorp.vagrant.sdk.Args.Guest
	215, // 479: hashicorp.vagrant.sdk.TargetMachineService.Reload:output_type -> google.protobuf.Empty
	155, // 480: hashicorp.vagrant.sdk.TargetMachineService.ConnectionInfo:output_type -> hashicorp.vagrant.sdk.Target.Machine.ConnectionInfoResponse
	156, // 481: hashicorp.vagrant.sdk.TargetMachineService.UID:output_type -> hashicorp.vagrant.sdk.Target.Machine.UIDResponse
	157, // 482: hashicorp.vagrant.sdk.TargetMachineService.SyncedFolders:output_type -> hashicorp.vagrant.sdk.Target.Machine.SyncedFoldersResponse
	165, // 483: hashicorp.vagrant.sdk.ProjectService.MachineNames:output_type -> hashicorp.vagrant.sdk.Project.MachineNamesResponse
	53,  // 484: hashicorp.vagrant.sdk.ProjectService.TargetIndex:output_type -> hashicorp.vagrant.sdk.Args.TargetIndex
	167, // 485: hashicorp.vagrant.sdk.ProjectService.CWD:output_type -> hashicorp.vagrant.sdk.Project.CwdResponse
	168, // 486: hashicorp.vagrant.sdk.ProjectService.Config:output_type -> hashicorp.vagrant.sdk.Project.ConfigResponse
	62,  // 487: hashicorp.vagrant.sdk.ProjectService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Project
	169, // 488: hashicorp.vagrant.sdk.ProjectService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Project.VagrantfileNameResponse
	170, // 489: hashicorp.vagrant.sdk.ProjectService.VagrantfilePath:output_type -> hashicorp.vagrant.sdk.Project.VagrantfilePathResponse
	34,  // 490: hashicorp.vagrant.sdk.ProjectService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	171, // 491: hashicorp.vagrant.sdk.ProjectService.Home:output_type -> hashicorp.vagrant.sdk.Project.HomeResponse
	172, // 492: hashicorp.vagrant.sdk.ProjectService.LocalData:output_type -> hashicorp.vagrant.sdk.Project.LocalDataResponse
	173, // 493: hashicorp.vagrant.sdk.ProjectService.Tmp:output_type -> hashicorp.vagrant.sdk.Project.TmpResponse
	174, // 494: hashicorp.vagrant.sdk.ProjectService.DefaultPrivateKey:output_type -> hashicorp.vagrant.sdk.Project.DefaultPrivateKeyResponse
	47,  // 495: hashicorp.vagrant.sdk.ProjectService.Host:output_type -> hashicorp.vagrant.sdk.Args.Host
	43,  // 496: hashicorp.vagrant.sdk.ProjectService.Target:output_type -> hashicorp.vagrant.sdk.Args.Target
	162, // 497: hashicorp.vagrant.sdk.ProjectService.TargetNames:output_type -> hashicorp.vagrant.sdk.Project.TargetNamesResponse
	163, // 498: hashicorp.vagrant.sdk.ProjectService.TargetIds:output_type -> hashicorp.vagrant.sdk.Project.TargetIdsResponse
	45,  // 499: hashicorp.vagrant.sdk.ProjectService.Boxes:output_type -> hashicorp.vagrant.sdk.Args.BoxCollection
	160, // 500: hashicorp.vagrant.sdk.ProjectService.ResourceId:output_type -> hashicorp.vagrant.sdk.Project.ResourceIdResponse
	177, // 501: hashicorp.vagrant.sdk.VagrantfileService.GetVagrantfile:output_type -> hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse
	179, // 502: hashicorp.vagrant.sdk.VagrantfileService.Target:output_type -> hashicorp.vagrant.sdk.Vagrantfile.TargetResponse
	181, // 503: hashicorp.vagrant.sdk.VagrantfileService.TargetConfig:output_type -> hashicorp.vagrant.sdk.Vagrantfile.TargetConfigResponse
	182, // 504: hashicorp.vagrant.sdk.VagrantfileService.TargetNames:output_type -> hashicorp.vagrant.sdk.Vagrantfile.TargetNamesResponse
	183, // 505: hashicorp.vagrant.sdk.VagrantfileService.PrimaryTargetName:output_type -> hashicorp.vagrant.sdk.Vagrantfile.PrimaryTargetNameResponse
	215, // 506: hashicorp.vagrant.sdk.TargetIndexService.Delete:output_type -> google.protobuf.Empty
	43,  // 507: hashicorp.vagrant.sdk.TargetIndexService.Get:output_type -> hashicorp.vagrant.sdk.Args.Target
	197, // 508: hashicorp.vagrant.sdk.TargetIndexService.Includes:output_type -> hashicorp.vagrant.sdk.TargetIndex.IncludesResponse
	43,  // 509: hashicorp.vagrant.sdk.TargetIndexService.Set:output_type -> hashicorp.vagrant.sdk.Args.Target
	196, // 510: hashicorp.vagrant.sdk.TargetIndexService.All:output_type -> hashicorp.vagrant.sdk.TargetIndex.AllResponse
	198, // 511: hashicorp.vagrant.sdk.BoxService.AutomaticUpdateCheckAllowed:output_type -> hashicorp.vagrant.sdk.Box.AutomaticUpdateCheckAllowedResponse
	215, // 512: hashicorp.vagrant.sdk.BoxService.Destroy:output_type -> google.protobuf.Empty
	200, // 513: hashicorp.vagrant.sdk.BoxService.HasUpdate:output_type -> hashicorp.vagrant.sdk.Box.HasUpdateResponse
	201, // 514: hashicorp.vagrant.sdk.BoxService.InUse:output_type -> hashicorp.vagrant.sdk.Box.InUseResponse
	215, // 515: hashicorp.vagrant.sdk.BoxService.Repackage:output_type -> google.protobuf.Empty
	31,  // 516: hashicorp.vagrant.sdk.BoxService.Directory:output_type -> hashicorp.vagrant.sdk.Args.Path
	30,  // 517: hashicorp.vagrant.sdk.BoxService.Metadata:output_type -> hashicorp.vagrant.sdk.Args.MetadataSet
	202, // 518: hashicorp.vagrant.sdk.BoxService.MetadataURL:output_type -> hashicorp.vagrant.sdk.Box.MetadataUrlResponse
	203, // 519: hashicorp.vagrant.sdk.BoxService.Name:output_type -> hashicorp.vagrant.sdk.Box.NameResponse
	204, // 520: hashicorp.vagrant.sdk.BoxService.Provider:output_type -> hashicorp.vagrant.sdk.Box.ProviderResponse
	205, // 521: hashicorp.vagrant.sdk.BoxService.Version:output_type -> hashicorp.vagrant.sdk.Box.VersionResponse
	206, // 522: hashicorp.vagrant.sdk.BoxService.Compare:output_type -> hashicorp.vagrant.sdk.Box.EqualityResponse
	44,  // 523: hashicorp.vagrant.sdk.BoxCollectionService.Add:output_type -> hashicorp.vagrant.sdk.Args.Box
	208, // 524: hashicorp.vagrant.sdk.BoxCollectionService.All:output_type -> hashicorp.vagrant.sdk.BoxCollection.AllResponse
	215, // 525: hashicorp.vagrant.sdk.BoxCollectionService.Clean:output_type -> google.protobuf.Empty
	44,  // 526: hashicorp.vagrant.sdk.BoxCollectionService.Find:output_type -> hashicorp.vagrant.sdk.Args.Box
	7,   // 527: hashicorp.vagrant.sdk.PushService.PushSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	215, // 528: hashicorp.vagrant.sdk.PushService.Push:output_type -> google.protobuf.Empty
	215, // 529: hashicorp.vagrant.sdk.PushService.Seed:output_type -> google.protobuf.Empty
	28,  // 530: hashicorp.vagrant.sdk.PushService.Seeds:output_type -> hashicorp.vagrant.sdk.Args.Seeds
	312, // [312:531] is the sub-list for method output_type
	93,  // [93:312] is the sub-list for method input_type
	93,  // [93:93] is the sub-list for extension type_name
	93,  // [93:93] is the sub-list for extension extendee
	0,   // [0:93] is the sub-list for field type_name
}

func init() { file_vagrant_plugin_sdk_plugin_proto_init() }
func file_vagrant_plugin_sdk_plugin_proto_init() {
	if File_vagrant_plugin_sdk_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImplementsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncedFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Seeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MetadataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Path); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Folder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TimeDuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TerminalUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Logger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_PluginManager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Basis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Provisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_BoxCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Guest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Communicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Push); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_SyncedFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TargetIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_NamedCapability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Direct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Array); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Null); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Basis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target_Machine_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Connection_SSHInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Connection_WinrmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_ConfigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_StructResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_FieldDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MapperDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth_AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_IsInteractiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_OutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_InputResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Raw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_StepGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetOkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_PutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_PutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_RemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfo_ComponentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginInfo_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginManager_PluginsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginManager_PluginsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginManager_Plugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_UsableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_InstalledResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_ActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Flag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteSpecReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments_Flag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_MatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecuteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_TestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_DetectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_ParentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_Capability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_Capability_NamedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_Capability_CheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Platform_Capability_Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncedFolder_UsableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Basis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_ResourceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_RecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_ProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_SetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_VagrantfileNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_VagrantfilePathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_UpdatedAtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_GetUUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_SetUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SetIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_GetIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_GetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_ConnectionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_UIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SyncedFoldersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SyncedFoldersResponse_MachineSyncedFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ResourceIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineAndProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ActiveMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_CwdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_VagrantfileNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_VagrantfilePathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_HomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_LocalDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TmpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_DefaultPrivateKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_BoxCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_GetVagrantfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_GetVagrantfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_TargetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_TargetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_TargetConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_TargetConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_TargetNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_PrimaryTargetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_ConfigVM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_ConfigVagrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_GeneralConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_MachineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_Provisioner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_SyncedFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_PushConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_Vagrantfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetIndex_TargetIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetIndex_AllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetIndex_IncludesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_AutomaticUpdateCheckAllowedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_HasUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_HasUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_InUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_MetadataUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_ProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Box_EqualityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection_AddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection_AllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection_CleanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection_FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*TerminalUI_Response_Input)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[79].OneofWrappers = []interface{}{
		(*TerminalUI_Event_Line_)(nil),
		(*TerminalUI_Event_Status_)(nil),
		(*TerminalUI_Event_NamedValues_)(nil),
		(*TerminalUI_Event_Raw_)(nil),
		(*TerminalUI_Event_Table_)(nil),
		(*TerminalUI_Event_StepGroup_)(nil),
		(*TerminalUI_Event_Step_)(nil),
		(*TerminalUI_Event_Input_)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[117].OneofWrappers = []interface{}{
		(*Command_Arguments_Flag_String_)(nil),
		(*Command_Arguments_Flag_Bool)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[170].OneofWrappers = []interface{}{
		(*Vagrantfile_GetVagrantfileRequest_Project)(nil),
		(*Vagrantfile_GetVagrantfileRequest_Box)(nil),
		(*Vagrantfile_GetVagrantfileRequest_Basis)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vagrant_plugin_sdk_plugin_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   205,
			NumExtensions: 0,
			NumServices:   22,
		},
		GoTypes:           file_vagrant_plugin_sdk_plugin_proto_goTypes,
		DependencyIndexes: file_vagrant_plugin_sdk_plugin_proto_depIdxs,
		EnumInfos:         file_vagrant_plugin_sdk_plugin_proto_enumTypes,
		MessageInfos:      file_vagrant_plugin_sdk_plugin_proto_msgTypes,
	}.Build()
	File_vagrant_plugin_sdk_plugin_proto = out.File
	file_vagrant_plugin_sdk_plugin_proto_rawDesc = nil
	file_vagrant_plugin_sdk_plugin_proto_goTypes = nil
	file_vagrant_plugin_sdk_plugin_proto_depIdxs = nil
}
