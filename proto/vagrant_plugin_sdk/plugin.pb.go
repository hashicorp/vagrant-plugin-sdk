// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: vagrant_plugin_sdk/plugin.proto

package vagrant_plugin_sdk

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protostructure "github.com/mitchellh/protostructure"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Args_WinrmInfo_Transport int32

const (
	Args_WinrmInfo_NEGOTIATE Args_WinrmInfo_Transport = 0 // default
	Args_WinrmInfo_SSL       Args_WinrmInfo_Transport = 1
	Args_WinrmInfo_PLAINTEXT Args_WinrmInfo_Transport = 2
)

// Enum value maps for Args_WinrmInfo_Transport.
var (
	Args_WinrmInfo_Transport_name = map[int32]string{
		0: "NEGOTIATE",
		1: "SSL",
		2: "PLAINTEXT",
	}
	Args_WinrmInfo_Transport_value = map[string]int32{
		"NEGOTIATE": 0,
		"SSL":       1,
		"PLAINTEXT": 2,
	}
)

func (x Args_WinrmInfo_Transport) Enum() *Args_WinrmInfo_Transport {
	p := new(Args_WinrmInfo_Transport)
	*p = x
	return p
}

func (x Args_WinrmInfo_Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_WinrmInfo_Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[0].Descriptor()
}

func (Args_WinrmInfo_Transport) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[0]
}

func (x Args_WinrmInfo_Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_WinrmInfo_Transport.Descriptor instead.
func (Args_WinrmInfo_Transport) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 16, 0}
}

type Command_Flag_Type int32

const (
	Command_Flag_STRING Command_Flag_Type = 0
	Command_Flag_BOOL   Command_Flag_Type = 2
)

// Enum value maps for Command_Flag_Type.
var (
	Command_Flag_Type_name = map[int32]string{
		0: "STRING",
		2: "BOOL",
	}
	Command_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   2,
	}
)

func (x Command_Flag_Type) Enum() *Command_Flag_Type {
	p := new(Command_Flag_Type)
	*p = x
	return p
}

func (x Command_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[1].Descriptor()
}

func (Command_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[1]
}

func (x Command_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Flag_Type.Descriptor instead.
func (Command_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 0, 0}
}

type Command_Arguments_Flag_Type int32

const (
	Command_Arguments_Flag_STRING Command_Arguments_Flag_Type = 0
	Command_Arguments_Flag_BOOL   Command_Arguments_Flag_Type = 1
)

// Enum value maps for Command_Arguments_Flag_Type.
var (
	Command_Arguments_Flag_Type_name = map[int32]string{
		0: "STRING",
		1: "BOOL",
	}
	Command_Arguments_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   1,
	}
)

func (x Command_Arguments_Flag_Type) Enum() *Command_Arguments_Flag_Type {
	p := new(Command_Arguments_Flag_Type)
	*p = x
	return p
}

func (x Command_Arguments_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Arguments_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[2].Descriptor()
}

func (Command_Arguments_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[2]
}

func (x Command_Arguments_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Arguments_Flag_Type.Descriptor instead.
func (Command_Arguments_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 5, 0, 0}
}

// Args are the common argument types that are available to many of the
// dynamic functions. The exact list of available argument types is available
// on the Go interface docs.
type Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args) Reset() {
	*x = Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args) ProtoMessage() {}

func (x *Args) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args.ProtoReflect.Descriptor instead.
func (*Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0}
}

// FuncSpec describes a function and is used by the dependency-injection
// framework to provide the function with the proper values.
//
// Value types are specified using strings. Built-in framework types
// are defined via constants in the `sdk` package. For custom types, you
// can use whatever string as long as it is unique. We recommend using a
// unique prefix plus the Go type name.
type FuncSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the function. This is used for improved logging.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// args is the list of arguments by protobuf Any types.
	Args []*FuncSpec_Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// result are the resulting types that are made available. This is only
	// critically important to be set for functions that may chain to other
	// functions. It can be set to blank in which case it will not be used.
	Result []*FuncSpec_Value `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *FuncSpec) Reset() {
	*x = FuncSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec) ProtoMessage() {}

func (x *FuncSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec.ProtoReflect.Descriptor instead.
func (*FuncSpec) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *FuncSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FuncSpec) GetResult() []*FuncSpec_Value {
	if x != nil {
		return x.Result
	}
	return nil
}

// Config is the namespace of messages related to configuration.
//
// All components that take configuration are expected to have two RPC calls:
//
//   * ConfigStruct - Returns the configuration structure.
//   * Configure - Sends the configuration data back to the plugin and the
//       plugin is also expected to perform any validation at this stage.
//   * Documentation - Returns a Documentation struct that details what configuration
//       is accepted, with documentation.
//
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2}
}

// Auth is the namespace of messages related to auth.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{3}
}

// ImplementsResp returns true if the component implements an additional interface.
type ImplementsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Implements bool `protobuf:"varint,1,opt,name=implements,proto3" json:"implements,omitempty"`
}

func (x *ImplementsResp) Reset() {
	*x = ImplementsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImplementsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImplementsResp) ProtoMessage() {}

func (x *ImplementsResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImplementsResp.ProtoReflect.Descriptor instead.
func (*ImplementsResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *ImplementsResp) GetImplements() bool {
	if x != nil {
		return x.Implements
	}
	return false
}

type TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerminalUI) Reset() {
	*x = TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI) ProtoMessage() {}

func (x *TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI.ProtoReflect.Descriptor instead.
func (*TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5}
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6}
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8}
}

type Communicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator) Reset() {
	*x = Communicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator) ProtoMessage() {}

func (x *Communicator) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator.ProtoReflect.Descriptor instead.
func (*Communicator) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9}
}

type Guest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Guest) Reset() {
	*x = Guest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest) ProtoMessage() {}

func (x *Guest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest.ProtoReflect.Descriptor instead.
func (*Guest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10}
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11}
}

// Ref contains shared messages used for references to other resources.
//
// Refs should be used when the full type shouldn't be embedded in the message.
type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12}
}

//*********************************************
// Machine message used with machine service
//********************************************
type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13}
}

//******************************************************
// Environment message used with environment service
//*****************************************************
type Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Environment) Reset() {
	*x = Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment) ProtoMessage() {}

func (x *Environment) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment.ProtoReflect.Descriptor instead.
func (*Environment) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14}
}

type Args_DataDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_DataDir) Reset() {
	*x = Args_DataDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir) ProtoMessage() {}

func (x *Args_DataDir) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir.ProtoReflect.Descriptor instead.
func (*Args_DataDir) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0}
}

type Args_MachineIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_MachineIndex) Reset() {
	*x = Args_MachineIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_MachineIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_MachineIndex) ProtoMessage() {}

func (x *Args_MachineIndex) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_MachineIndex.ProtoReflect.Descriptor instead.
func (*Args_MachineIndex) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1}
}

type Args_BoxCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *Args_BoxCollection) Reset() {
	*x = Args_BoxCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_BoxCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_BoxCollection) ProtoMessage() {}

func (x *Args_BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_BoxCollection.ProtoReflect.Descriptor instead.
func (*Args_BoxCollection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Args_BoxCollection) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type Args_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider    string            `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Version     string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Directory   string            `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MetadataUrl string            `protobuf:"bytes,6,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
}

func (x *Args_Box) Reset() {
	*x = Args_Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Box) ProtoMessage() {}

func (x *Args_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Box.ProtoReflect.Descriptor instead.
func (*Args_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Args_Box) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Args_Box) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Args_Box) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Args_Box) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *Args_Box) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Args_Box) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

type Args_Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cwd                   string           `protobuf:"bytes,1,opt,name=cwd,proto3" json:"cwd,omitempty"`
	DataDir               string           `protobuf:"bytes,2,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	VagrantfileName       string           `protobuf:"bytes,3,opt,name=vagrantfile_name,json=vagrantfileName,proto3" json:"vagrantfile_name,omitempty"`
	Ui                    *Args_TerminalUI `protobuf:"bytes,4,opt,name=ui,proto3" json:"ui,omitempty"`
	HomePath              string           `protobuf:"bytes,5,opt,name=home_path,json=homePath,proto3" json:"home_path,omitempty"`
	LocalDataPath         string           `protobuf:"bytes,6,opt,name=local_data_path,json=localDataPath,proto3" json:"local_data_path,omitempty"`
	TmpPath               string           `protobuf:"bytes,7,opt,name=tmp_path,json=tmpPath,proto3" json:"tmp_path,omitempty"`
	AliasesPath           string           `protobuf:"bytes,8,opt,name=aliases_path,json=aliasesPath,proto3" json:"aliases_path,omitempty"`
	BoxesPath             string           `protobuf:"bytes,9,opt,name=boxes_path,json=boxesPath,proto3" json:"boxes_path,omitempty"`
	GemsPath              string           `protobuf:"bytes,10,opt,name=gems_path,json=gemsPath,proto3" json:"gems_path,omitempty"`
	DefaultPrivateKeyPath string           `protobuf:"bytes,11,opt,name=default_private_key_path,json=defaultPrivateKeyPath,proto3" json:"default_private_key_path,omitempty"`
	ServerAddr            string           `protobuf:"bytes,12,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
}

func (x *Args_Environment) Reset() {
	*x = Args_Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Environment) ProtoMessage() {}

func (x *Args_Environment) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Environment.ProtoReflect.Descriptor instead.
func (*Args_Environment) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Args_Environment) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *Args_Environment) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_Environment) GetVagrantfileName() string {
	if x != nil {
		return x.VagrantfileName
	}
	return ""
}

func (x *Args_Environment) GetUi() *Args_TerminalUI {
	if x != nil {
		return x.Ui
	}
	return nil
}

func (x *Args_Environment) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *Args_Environment) GetLocalDataPath() string {
	if x != nil {
		return x.LocalDataPath
	}
	return ""
}

func (x *Args_Environment) GetTmpPath() string {
	if x != nil {
		return x.TmpPath
	}
	return ""
}

func (x *Args_Environment) GetAliasesPath() string {
	if x != nil {
		return x.AliasesPath
	}
	return ""
}

func (x *Args_Environment) GetBoxesPath() string {
	if x != nil {
		return x.BoxesPath
	}
	return ""
}

func (x *Args_Environment) GetGemsPath() string {
	if x != nil {
		return x.GemsPath
	}
	return ""
}

func (x *Args_Environment) GetDefaultPrivateKeyPath() string {
	if x != nil {
		return x.DefaultPrivateKeyPath
	}
	return ""
}

func (x *Args_Environment) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

type Args_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ServerAddr string `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
}

func (x *Args_Machine) Reset() {
	*x = Args_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Machine) ProtoMessage() {}

func (x *Args_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Machine.ProtoReflect.Descriptor instead.
func (*Args_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Args_Machine) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Args_Machine) GetServerAddr() string {
	if x != nil {
		return x.ServerAddr
	}
	return ""
}

type Args_Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration) Reset() {
	*x = Args_Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration) ProtoMessage() {}

func (x *Args_Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration.ProtoReflect.Descriptor instead.
func (*Args_Configuration) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6}
}

// LabelSet is a set of labels for anything that can be labelled, such
// as a deployment, build, etc.
type Args_LabelSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels map[string]string `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_LabelSet) Reset() {
	*x = Args_LabelSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_LabelSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_LabelSet) ProtoMessage() {}

func (x *Args_LabelSet) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_LabelSet.ProtoReflect.Descriptor instead.
func (*Args_LabelSet) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Args_LabelSet) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Args_Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt *Args_LabelSet `protobuf:"bytes,1,opt,name=opt,proto3" json:"opt,omitempty"`
}

func (x *Args_Options) Reset() {
	*x = Args_Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Options) ProtoMessage() {}

func (x *Args_Options) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Options.ProtoReflect.Descriptor instead.
func (*Args_Options) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Args_Options) GetOpt() *Args_LabelSet {
	if x != nil {
		return x.Opt
	}
	return nil
}

type Args_Vagrantfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Vagrantfile) Reset() {
	*x = Args_Vagrantfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Vagrantfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Vagrantfile) ProtoMessage() {}

func (x *Args_Vagrantfile) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Vagrantfile.ProtoReflect.Descriptor instead.
func (*Args_Vagrantfile) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 9}
}

// See component.JobInfo
type Args_JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local     bool   `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	Workspace string `protobuf:"bytes,2,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Id        string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Args_JobInfo) Reset() {
	*x = Args_JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_JobInfo) ProtoMessage() {}

func (x *Args_JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_JobInfo.ProtoReflect.Descriptor instead.
func (*Args_JobInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Args_JobInfo) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *Args_JobInfo) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *Args_JobInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Logger is used to construct an logger for the plugin.
type Args_Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the logger
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Args_Logger) Reset() {
	*x = Args_Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Logger) ProtoMessage() {}

func (x *Args_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Logger.ProtoReflect.Descriptor instead.
func (*Args_Logger) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Args_Logger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// TerminalUI is used to construct the terminal.UI for the plugin.
type Args_TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Addr     string `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *Args_TerminalUI) Reset() {
	*x = Args_TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_TerminalUI) ProtoMessage() {}

func (x *Args_TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_TerminalUI.ProtoReflect.Descriptor instead.
func (*Args_TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 12}
}

func (x *Args_TerminalUI) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_TerminalUI) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type Args_StateBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]*Args_StateBag_Value `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_StateBag) Reset() {
	*x = Args_StateBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_StateBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_StateBag) ProtoMessage() {}

func (x *Args_StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_StateBag.ProtoReflect.Descriptor instead.
func (*Args_StateBag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 13}
}

func (x *Args_StateBag) GetData() map[string]*Args_StateBag_Value {
	if x != nil {
		return x.Data
	}
	return nil
}

type Args_MachineState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortDescription string `protobuf:"bytes,2,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string `protobuf:"bytes,3,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
}

func (x *Args_MachineState) Reset() {
	*x = Args_MachineState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_MachineState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_MachineState) ProtoMessage() {}

func (x *Args_MachineState) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_MachineState.ProtoReflect.Descriptor instead.
func (*Args_MachineState) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 14}
}

func (x *Args_MachineState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Args_MachineState) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Args_MachineState) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

type Args_SSHInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host              string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port              string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	PrivateKeyPath    string   `protobuf:"bytes,3,opt,name=private_key_path,json=privateKeyPath,proto3" json:"private_key_path,omitempty"`
	KeysOnly          bool     `protobuf:"varint,4,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	VerifyHostKey     bool     `protobuf:"varint,5,opt,name=verify_host_key,json=verifyHostKey,proto3" json:"verify_host_key,omitempty"`
	Username          string   `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	RemoteUser        string   `protobuf:"bytes,7,opt,name=remote_user,json=remoteUser,proto3" json:"remote_user,omitempty"`
	Compression       bool     `protobuf:"varint,8,opt,name=compression,proto3" json:"compression,omitempty"`
	DsaAuthentication bool     `protobuf:"varint,9,opt,name=dsa_authentication,json=dsaAuthentication,proto3" json:"dsa_authentication,omitempty"`
	Config            string   `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
	ExtraArgs         []string `protobuf:"bytes,11,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	ForwardAgent      bool     `protobuf:"varint,12,opt,name=forward_agent,json=forwardAgent,proto3" json:"forward_agent,omitempty"`
	ForwardX11        bool     `protobuf:"varint,13,opt,name=forward_x11,json=forwardX11,proto3" json:"forward_x11,omitempty"`
	ForwardEnv        []string `protobuf:"bytes,14,rep,name=forward_env,json=forwardEnv,proto3" json:"forward_env,omitempty"`
	ConnectTimeout    int64    `protobuf:"varint,15,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	SshCommand        string   `protobuf:"bytes,16,opt,name=ssh_command,json=sshCommand,proto3" json:"ssh_command,omitempty"`
	ProxyCommand      string   `protobuf:"bytes,17,opt,name=proxy_command,json=proxyCommand,proto3" json:"proxy_command,omitempty"`
}

func (x *Args_SSHInfo) Reset() {
	*x = Args_SSHInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_SSHInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_SSHInfo) ProtoMessage() {}

func (x *Args_SSHInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_SSHInfo.ProtoReflect.Descriptor instead.
func (*Args_SSHInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 15}
}

func (x *Args_SSHInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Args_SSHInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Args_SSHInfo) GetPrivateKeyPath() string {
	if x != nil {
		return x.PrivateKeyPath
	}
	return ""
}

func (x *Args_SSHInfo) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

func (x *Args_SSHInfo) GetVerifyHostKey() bool {
	if x != nil {
		return x.VerifyHostKey
	}
	return false
}

func (x *Args_SSHInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Args_SSHInfo) GetRemoteUser() string {
	if x != nil {
		return x.RemoteUser
	}
	return ""
}

func (x *Args_SSHInfo) GetCompression() bool {
	if x != nil {
		return x.Compression
	}
	return false
}

func (x *Args_SSHInfo) GetDsaAuthentication() bool {
	if x != nil {
		return x.DsaAuthentication
	}
	return false
}

func (x *Args_SSHInfo) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Args_SSHInfo) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

func (x *Args_SSHInfo) GetForwardAgent() bool {
	if x != nil {
		return x.ForwardAgent
	}
	return false
}

func (x *Args_SSHInfo) GetForwardX11() bool {
	if x != nil {
		return x.ForwardX11
	}
	return false
}

func (x *Args_SSHInfo) GetForwardEnv() []string {
	if x != nil {
		return x.ForwardEnv
	}
	return nil
}

func (x *Args_SSHInfo) GetConnectTimeout() int64 {
	if x != nil {
		return x.ConnectTimeout
	}
	return 0
}

func (x *Args_SSHInfo) GetSshCommand() string {
	if x != nil {
		return x.SshCommand
	}
	return ""
}

func (x *Args_SSHInfo) GetProxyCommand() string {
	if x != nil {
		return x.ProxyCommand
	}
	return ""
}

type Args_WinrmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username            string                   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password            string                   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Host                string                   `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                int64                    `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	GuestPort           int64                    `protobuf:"varint,5,opt,name=guest_port,json=guestPort,proto3" json:"guest_port,omitempty"`
	MaxTries            int64                    `protobuf:"varint,6,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	RetryDelay          int64                    `protobuf:"varint,7,opt,name=retry_delay,json=retryDelay,proto3" json:"retry_delay,omitempty"`
	Timeout             int64                    `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Transport           Args_WinrmInfo_Transport `protobuf:"varint,9,opt,name=transport,proto3,enum=hashicorp.vagrant.sdk.Args_WinrmInfo_Transport" json:"transport,omitempty"`
	SslPeerVerification bool                     `protobuf:"varint,10,opt,name=ssl_peer_verification,json=sslPeerVerification,proto3" json:"ssl_peer_verification,omitempty"`
	ExecutionTimeLimit  string                   `protobuf:"bytes,11,opt,name=execution_time_limit,json=executionTimeLimit,proto3" json:"execution_time_limit,omitempty"`
	BasicAuthOnly       bool                     `protobuf:"varint,12,opt,name=basic_auth_only,json=basicAuthOnly,proto3" json:"basic_auth_only,omitempty"`
	Codepage            string                   `protobuf:"bytes,13,opt,name=codepage,proto3" json:"codepage,omitempty"`
}

func (x *Args_WinrmInfo) Reset() {
	*x = Args_WinrmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_WinrmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_WinrmInfo) ProtoMessage() {}

func (x *Args_WinrmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_WinrmInfo.ProtoReflect.Descriptor instead.
func (*Args_WinrmInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 16}
}

func (x *Args_WinrmInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Args_WinrmInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Args_WinrmInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Args_WinrmInfo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Args_WinrmInfo) GetGuestPort() int64 {
	if x != nil {
		return x.GuestPort
	}
	return 0
}

func (x *Args_WinrmInfo) GetMaxTries() int64 {
	if x != nil {
		return x.MaxTries
	}
	return 0
}

func (x *Args_WinrmInfo) GetRetryDelay() int64 {
	if x != nil {
		return x.RetryDelay
	}
	return 0
}

func (x *Args_WinrmInfo) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Args_WinrmInfo) GetTransport() Args_WinrmInfo_Transport {
	if x != nil {
		return x.Transport
	}
	return Args_WinrmInfo_NEGOTIATE
}

func (x *Args_WinrmInfo) GetSslPeerVerification() bool {
	if x != nil {
		return x.SslPeerVerification
	}
	return false
}

func (x *Args_WinrmInfo) GetExecutionTimeLimit() string {
	if x != nil {
		return x.ExecutionTimeLimit
	}
	return ""
}

func (x *Args_WinrmInfo) GetBasicAuthOnly() bool {
	if x != nil {
		return x.BasicAuthOnly
	}
	return false
}

func (x *Args_WinrmInfo) GetCodepage() string {
	if x != nil {
		return x.Codepage
	}
	return ""
}

type Args_DataDir_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir string `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,2,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	RootDir  string `protobuf:"bytes,3,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Basis) Reset() {
	*x = Args_DataDir_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Basis) ProtoMessage() {}

func (x *Args_DataDir_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Basis.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Args_DataDir_Basis) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir string `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,2,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	RootDir  string `protobuf:"bytes,3,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Project) Reset() {
	*x = Args_DataDir_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Project) ProtoMessage() {}

func (x *Args_DataDir_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Project.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Args_DataDir_Project) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir string `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,2,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	RootDir  string `protobuf:"bytes,3,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Machine) Reset() {
	*x = Args_DataDir_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Machine) ProtoMessage() {}

func (x *Args_DataDir_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Machine.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *Args_DataDir_Machine) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Machine) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Machine) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Machine) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CacheDir string `protobuf:"bytes,1,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,2,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	RootDir  string `protobuf:"bytes,3,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Component) Reset() {
	*x = Args_DataDir_Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Component) ProtoMessage() {}

func (x *Args_DataDir_Component) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Component.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Component) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *Args_DataDir_Component) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_MachineIndex_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocalDataPath   string        `protobuf:"bytes,2,opt,name=local_data_path,json=localDataPath,proto3" json:"local_data_path,omitempty"`
	Name            string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Provider        string        `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	State           string        `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	VagrantfileName string        `protobuf:"bytes,6,opt,name=vagrantfile_name,json=vagrantfileName,proto3" json:"vagrantfile_name,omitempty"`
	VagrantfilePath string        `protobuf:"bytes,7,opt,name=vagrantfile_path,json=vagrantfilePath,proto3" json:"vagrantfile_path,omitempty"`
	UpdatedAt       string        `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // TODO(spox): should we make this an int?
	ExtraData       *Args_Options `protobuf:"bytes,9,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
}

func (x *Args_MachineIndex_Entry) Reset() {
	*x = Args_MachineIndex_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_MachineIndex_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_MachineIndex_Entry) ProtoMessage() {}

func (x *Args_MachineIndex_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_MachineIndex_Entry.ProtoReflect.Descriptor instead.
func (*Args_MachineIndex_Entry) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Args_MachineIndex_Entry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetLocalDataPath() string {
	if x != nil {
		return x.LocalDataPath
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetVagrantfileName() string {
	if x != nil {
		return x.VagrantfileName
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetVagrantfilePath() string {
	if x != nil {
		return x.VagrantfilePath
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Args_MachineIndex_Entry) GetExtraData() *Args_Options {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

type Args_Configuration_Vagrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_Vagrant) Reset() {
	*x = Args_Configuration_Vagrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_Vagrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_Vagrant) ProtoMessage() {}

func (x *Args_Configuration_Vagrant) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_Vagrant.ProtoReflect.Descriptor instead.
func (*Args_Configuration_Vagrant) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 0}
}

type Args_Configuration_VM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_VM) Reset() {
	*x = Args_Configuration_VM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_VM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_VM) ProtoMessage() {}

func (x *Args_Configuration_VM) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_VM.ProtoReflect.Descriptor instead.
func (*Args_Configuration_VM) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 1}
}

type Args_Configuration_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_Provider) Reset() {
	*x = Args_Configuration_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_Provider) ProtoMessage() {}

func (x *Args_Configuration_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_Provider.ProtoReflect.Descriptor instead.
func (*Args_Configuration_Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 2}
}

type Args_StateBag_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Args_StateBag_Value_Text
	//	*Args_StateBag_Value_Map
	Value isArgs_StateBag_Value_Value `protobuf_oneof:"value"`
}

func (x *Args_StateBag_Value) Reset() {
	*x = Args_StateBag_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_StateBag_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_StateBag_Value) ProtoMessage() {}

func (x *Args_StateBag_Value) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_StateBag_Value.ProtoReflect.Descriptor instead.
func (*Args_StateBag_Value) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 13, 1}
}

func (m *Args_StateBag_Value) GetValue() isArgs_StateBag_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Args_StateBag_Value) GetText() string {
	if x, ok := x.GetValue().(*Args_StateBag_Value_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Args_StateBag_Value) GetMap() *any.Any {
	if x, ok := x.GetValue().(*Args_StateBag_Value_Map); ok {
		return x.Map
	}
	return nil
}

type isArgs_StateBag_Value_Value interface {
	isArgs_StateBag_Value_Value()
}

type Args_StateBag_Value_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Args_StateBag_Value_Map struct {
	Map *any.Any `protobuf:"bytes,2,opt,name=map,proto3,oneof"`
}

func (*Args_StateBag_Value_Text) isArgs_StateBag_Value_Value() {}

func (*Args_StateBag_Value_Map) isArgs_StateBag_Value_Value() {}

type FuncSpec_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the argument. This may be empty for typed arguments.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type is the type of the argument. All arguments must be encoded using
	// *any.Any so this type specifies the proto Any message type and not
	// a language-specific type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// value is the value for this Value. This is only expected to be set
	// for Args and has no impact on specs.
	Value *any.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FuncSpec_Value) Reset() {
	*x = FuncSpec_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Value) ProtoMessage() {}

func (x *FuncSpec_Value) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Value.ProtoReflect.Descriptor instead.
func (*FuncSpec_Value) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FuncSpec_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec_Value) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FuncSpec_Value) GetValue() *any.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

// Args is the standard argument type for an RPC that is calling a FuncSpec.
type FuncSpec_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of arguments. This will include some of the
	// standard types in this file (in the Args message namespace) as well
	// as custom types declared by the FuncSpec that the plugin is expected
	// to understand how to decode.
	Args []*FuncSpec_Value `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *FuncSpec_Args) Reset() {
	*x = FuncSpec_Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Args) ProtoMessage() {}

func (x *FuncSpec_Args) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Args.ProtoReflect.Descriptor instead.
func (*FuncSpec_Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FuncSpec_Args) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

// ConfigureRequest is the request sent once the configuration decoding
// is complete to actually assign the values to the structure.
type Config_ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json is the json data for the structure returned in the StructResp.
	// It is guaranteed to decode cleanly into the target structure.
	Json []byte `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *Config_ConfigureRequest) Reset() {
	*x = Config_ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_ConfigureRequest) ProtoMessage() {}

func (x *Config_ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_ConfigureRequest.ProtoReflect.Descriptor instead.
func (*Config_ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Config_ConfigureRequest) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

// StructResp returns the struct for configuration.
type Config_StructResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// struct is the configuration structure (or empty/nil if one doesn't exist).
	// This struct should have all the proper struct tags for HCL decoding
	// You should do validation on the Configure call.
	Struct *protostructure.Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct,omitempty"`
}

func (x *Config_StructResp) Reset() {
	*x = Config_StructResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_StructResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_StructResp) ProtoMessage() {}

func (x *Config_StructResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_StructResp.ProtoReflect.Descriptor instead.
func (*Config_StructResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Config_StructResp) GetStruct() *protostructure.Struct {
	if x != nil {
		return x.Struct
	}
	return nil
}

type Config_FieldDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Synopsis string `protobuf:"bytes,2,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Summary  string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Optional bool   `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	EnvVar   string `protobuf:"bytes,5,opt,name=env_var,json=envVar,proto3" json:"env_var,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Default  string `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *Config_FieldDocumentation) Reset() {
	*x = Config_FieldDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_FieldDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_FieldDocumentation) ProtoMessage() {}

func (x *Config_FieldDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_FieldDocumentation.ProtoReflect.Descriptor instead.
func (*Config_FieldDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Config_FieldDocumentation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Config_FieldDocumentation) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Config_FieldDocumentation) GetEnvVar() string {
	if x != nil {
		return x.EnvVar
	}
	return ""
}

func (x *Config_FieldDocumentation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Config_FieldDocumentation) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type Config_MapperDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input       string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Config_MapperDocumentation) Reset() {
	*x = Config_MapperDocumentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MapperDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MapperDocumentation) ProtoMessage() {}

func (x *Config_MapperDocumentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MapperDocumentation.ProtoReflect.Descriptor instead.
func (*Config_MapperDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Config_MapperDocumentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_MapperDocumentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_MapperDocumentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Config_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Example     string                                `protobuf:"bytes,2,opt,name=example,proto3" json:"example,omitempty"`
	Input       string                                `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string                                `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Fields      map[string]*Config_FieldDocumentation `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mappers     []*Config_MapperDocumentation         `protobuf:"bytes,6,rep,name=mappers,proto3" json:"mappers,omitempty"`
}

func (x *Config_Documentation) Reset() {
	*x = Config_Documentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Documentation) ProtoMessage() {}

func (x *Config_Documentation) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Documentation.ProtoReflect.Descriptor instead.
func (*Config_Documentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Config_Documentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Config_Documentation) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *Config_Documentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_Documentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_Documentation) GetFields() map[string]*Config_FieldDocumentation {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Config_Documentation) GetMappers() []*Config_MapperDocumentation {
	if x != nil {
		return x.Mappers
	}
	return nil
}

// AuthResponse is returned by the Auth functions.
type Auth_AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authenticated bool `protobuf:"varint,1,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
}

func (x *Auth_AuthResponse) Reset() {
	*x = Auth_AuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth_AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_AuthResponse) ProtoMessage() {}

func (x *Auth_AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_AuthResponse.ProtoReflect.Descriptor instead.
func (*Auth_AuthResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Auth_AuthResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type TerminalUI_IsInteractiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interactive bool `protobuf:"varint,1,opt,name=interactive,proto3" json:"interactive,omitempty"`
}

func (x *TerminalUI_IsInteractiveResponse) Reset() {
	*x = TerminalUI_IsInteractiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_IsInteractiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_IsInteractiveResponse) ProtoMessage() {}

func (x *TerminalUI_IsInteractiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_IsInteractiveResponse.ProtoReflect.Descriptor instead.
func (*TerminalUI_IsInteractiveResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TerminalUI_IsInteractiveResponse) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

type TerminalUI_OutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []string `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *TerminalUI_OutputRequest) Reset() {
	*x = TerminalUI_OutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_OutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_OutputRequest) ProtoMessage() {}

func (x *TerminalUI_OutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_OutputRequest.ProtoReflect.Descriptor instead.
func (*TerminalUI_OutputRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 1}
}

func (x *TerminalUI_OutputRequest) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type TerminalUI_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Response_Input
	Event isTerminalUI_Response_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Response) Reset() {
	*x = TerminalUI_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Response) ProtoMessage() {}

func (x *TerminalUI_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Response.ProtoReflect.Descriptor instead.
func (*TerminalUI_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 2}
}

func (m *TerminalUI_Response) GetEvent() isTerminalUI_Response_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Response) GetInput() *TerminalUI_Event_InputResp {
	if x, ok := x.GetEvent().(*TerminalUI_Response_Input); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Response_Event interface {
	isTerminalUI_Response_Event()
}

type TerminalUI_Response_Input struct {
	Input *TerminalUI_Event_InputResp `protobuf:"bytes,1,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Response_Input) isTerminalUI_Response_Event() {}

type TerminalUI_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Event_Line_
	//	*TerminalUI_Event_Status_
	//	*TerminalUI_Event_NamedValues_
	//	*TerminalUI_Event_Raw_
	//	*TerminalUI_Event_Table_
	//	*TerminalUI_Event_StepGroup_
	//	*TerminalUI_Event_Step_
	//	*TerminalUI_Event_Input_
	Event isTerminalUI_Event_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Event) Reset() {
	*x = TerminalUI_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event) ProtoMessage() {}

func (x *TerminalUI_Event) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3}
}

func (m *TerminalUI_Event) GetEvent() isTerminalUI_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Event) GetLine() *TerminalUI_Event_Line {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Line_); ok {
		return x.Line
	}
	return nil
}

func (x *TerminalUI_Event) GetStatus() *TerminalUI_Event_Status {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Status_); ok {
		return x.Status
	}
	return nil
}

func (x *TerminalUI_Event) GetNamedValues() *TerminalUI_Event_NamedValues {
	if x, ok := x.GetEvent().(*TerminalUI_Event_NamedValues_); ok {
		return x.NamedValues
	}
	return nil
}

func (x *TerminalUI_Event) GetRaw() *TerminalUI_Event_Raw {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Raw_); ok {
		return x.Raw
	}
	return nil
}

func (x *TerminalUI_Event) GetTable() *TerminalUI_Event_Table {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Table_); ok {
		return x.Table
	}
	return nil
}

func (x *TerminalUI_Event) GetStepGroup() *TerminalUI_Event_StepGroup {
	if x, ok := x.GetEvent().(*TerminalUI_Event_StepGroup_); ok {
		return x.StepGroup
	}
	return nil
}

func (x *TerminalUI_Event) GetStep() *TerminalUI_Event_Step {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Step_); ok {
		return x.Step
	}
	return nil
}

func (x *TerminalUI_Event) GetInput() *TerminalUI_Event_Input {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Input_); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Event_Event interface {
	isTerminalUI_Event_Event()
}

type TerminalUI_Event_Line_ struct {
	Line *TerminalUI_Event_Line `protobuf:"bytes,1,opt,name=line,proto3,oneof"`
}

type TerminalUI_Event_Status_ struct {
	Status *TerminalUI_Event_Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type TerminalUI_Event_NamedValues_ struct {
	NamedValues *TerminalUI_Event_NamedValues `protobuf:"bytes,3,opt,name=named_values,json=namedValues,proto3,oneof"`
}

type TerminalUI_Event_Raw_ struct {
	Raw *TerminalUI_Event_Raw `protobuf:"bytes,4,opt,name=raw,proto3,oneof"`
}

type TerminalUI_Event_Table_ struct {
	Table *TerminalUI_Event_Table `protobuf:"bytes,5,opt,name=table,proto3,oneof"`
}

type TerminalUI_Event_StepGroup_ struct {
	StepGroup *TerminalUI_Event_StepGroup `protobuf:"bytes,6,opt,name=step_group,json=stepGroup,proto3,oneof"`
}

type TerminalUI_Event_Step_ struct {
	Step *TerminalUI_Event_Step `protobuf:"bytes,7,opt,name=step,proto3,oneof"`
}

type TerminalUI_Event_Input_ struct {
	Input *TerminalUI_Event_Input `protobuf:"bytes,8,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Event_Line_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Status_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_NamedValues_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Raw_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Table_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_StepGroup_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Step_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Input_) isTerminalUI_Event_Event() {}

type TerminalUI_Event_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Style  string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
	Secret bool   `protobuf:"varint,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TerminalUI_Event_Input) Reset() {
	*x = TerminalUI_Event_Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Input) ProtoMessage() {}

func (x *TerminalUI_Event_Input) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Input.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Input) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 0}
}

func (x *TerminalUI_Event_Input) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetSecret() bool {
	if x != nil {
		return x.Secret
	}
	return false
}

type TerminalUI_Event_InputResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string         `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TerminalUI_Event_InputResp) Reset() {
	*x = TerminalUI_Event_InputResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_InputResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_InputResp) ProtoMessage() {}

func (x *TerminalUI_Event_InputResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_InputResp.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_InputResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 1}
}

func (x *TerminalUI_Event_InputResp) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TerminalUI_Event_InputResp) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type TerminalUI_Event_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Step   bool   `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *TerminalUI_Event_Status) Reset() {
	*x = TerminalUI_Event_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Status) ProtoMessage() {}

func (x *TerminalUI_Event_Status) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Status.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Status) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 2}
}

func (x *TerminalUI_Event_Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetStep() bool {
	if x != nil {
		return x.Step
	}
	return false
}

type TerminalUI_Event_Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Style string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *TerminalUI_Event_Line) Reset() {
	*x = TerminalUI_Event_Line{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Line) ProtoMessage() {}

func (x *TerminalUI_Event_Line) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Line.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Line) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 3}
}

func (x *TerminalUI_Event_Line) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Line) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type TerminalUI_Event_Raw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Stderr bool   `protobuf:"varint,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *TerminalUI_Event_Raw) Reset() {
	*x = TerminalUI_Event_Raw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Raw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Raw) ProtoMessage() {}

func (x *TerminalUI_Event_Raw) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Raw.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Raw) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 4}
}

func (x *TerminalUI_Event_Raw) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TerminalUI_Event_Raw) GetStderr() bool {
	if x != nil {
		return x.Stderr
	}
	return false
}

type TerminalUI_Event_NamedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TerminalUI_Event_NamedValue) Reset() {
	*x = TerminalUI_Event_NamedValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValue) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValue) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValue.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValue) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 5}
}

func (x *TerminalUI_Event_NamedValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TerminalUI_Event_NamedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TerminalUI_Event_NamedValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*TerminalUI_Event_NamedValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TerminalUI_Event_NamedValues) Reset() {
	*x = TerminalUI_Event_NamedValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValues) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValues) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValues.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValues) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 6}
}

func (x *TerminalUI_Event_NamedValues) GetValues() []*TerminalUI_Event_NamedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type TerminalUI_Event_TableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *TerminalUI_Event_TableEntry) Reset() {
	*x = TerminalUI_Event_TableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableEntry) ProtoMessage() {}

func (x *TerminalUI_Event_TableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableEntry.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableEntry) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 7}
}

func (x *TerminalUI_Event_TableEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TerminalUI_Event_TableEntry) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type TerminalUI_Event_TableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TerminalUI_Event_TableEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *TerminalUI_Event_TableRow) Reset() {
	*x = TerminalUI_Event_TableRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableRow) ProtoMessage() {}

func (x *TerminalUI_Event_TableRow) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableRow.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableRow) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 8}
}

func (x *TerminalUI_Event_TableRow) GetEntries() []*TerminalUI_Event_TableEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TerminalUI_Event_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []string                     `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Rows    []*TerminalUI_Event_TableRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TerminalUI_Event_Table) Reset() {
	*x = TerminalUI_Event_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Table) ProtoMessage() {}

func (x *TerminalUI_Event_Table) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Table.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Table) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 9}
}

func (x *TerminalUI_Event_Table) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TerminalUI_Event_Table) GetRows() []*TerminalUI_Event_TableRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TerminalUI_Event_StepGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Close bool `protobuf:"varint,1,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *TerminalUI_Event_StepGroup) Reset() {
	*x = TerminalUI_Event_StepGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_StepGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_StepGroup) ProtoMessage() {}

func (x *TerminalUI_Event_StepGroup) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_StepGroup.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_StepGroup) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 10}
}

func (x *TerminalUI_Event_StepGroup) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

type TerminalUI_Event_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Close  bool   `protobuf:"varint,2,opt,name=close,proto3" json:"close,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Output []byte `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *TerminalUI_Event_Step) Reset() {
	*x = TerminalUI_Event_Step{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Step) ProtoMessage() {}

func (x *TerminalUI_Event_Step) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Step.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Step) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 3, 11}
}

func (x *TerminalUI_Event_Step) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TerminalUI_Event_Step) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

func (x *TerminalUI_Event_Step) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type Map_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of argument types.
	Args *FuncSpec_Args `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
	// result is the desired result type.
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Request) Reset() {
	*x = Map_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Request) ProtoMessage() {}

func (x *Map_Request) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Request.ProtoReflect.Descriptor instead.
func (*Map_Request) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Map_Request) GetArgs() *FuncSpec_Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Map_Request) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type Map_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// result is the mapped data type that matches the type expected
	// by the MapRequest.result field.
	Result *any.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Response) Reset() {
	*x = Map_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Response) ProtoMessage() {}

func (x *Map_Response) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Response.ProtoReflect.Descriptor instead.
func (*Map_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Map_Response) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Map_ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FuncSpec
	Funcs []*FuncSpec `protobuf:"bytes,1,rep,name=funcs,proto3" json:"funcs,omitempty"`
}

func (x *Map_ListResponse) Reset() {
	*x = Map_ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_ListResponse) ProtoMessage() {}

func (x *Map_ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_ListResponse.ProtoReflect.Descriptor instead.
func (*Map_ListResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Map_ListResponse) GetFuncs() []*FuncSpec {
	if x != nil {
		return x.Funcs
	}
	return nil
}

type Provider_UsableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUsable bool `protobuf:"varint,1,opt,name=is_usable,json=isUsable,proto3" json:"is_usable,omitempty"`
}

func (x *Provider_UsableResp) Reset() {
	*x = Provider_UsableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_UsableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_UsableResp) ProtoMessage() {}

func (x *Provider_UsableResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_UsableResp.ProtoReflect.Descriptor instead.
func (*Provider_UsableResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Provider_UsableResp) GetIsUsable() bool {
	if x != nil {
		return x.IsUsable
	}
	return false
}

type Provider_InstalledResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInstalled bool `protobuf:"varint,1,opt,name=is_installed,json=isInstalled,proto3" json:"is_installed,omitempty"`
}

func (x *Provider_InstalledResp) Reset() {
	*x = Provider_InstalledResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_InstalledResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_InstalledResp) ProtoMessage() {}

func (x *Provider_InstalledResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_InstalledResp.ProtoReflect.Descriptor instead.
func (*Provider_InstalledResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Provider_InstalledResp) GetIsInstalled() bool {
	if x != nil {
		return x.IsInstalled
	}
	return false
}

type Provider_ActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *any.Any          `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Labels       map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TemplateData []byte            `protobuf:"bytes,3,opt,name=template_data,json=templateData,proto3" json:"template_data,omitempty"`
	Success      bool              `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Provider_ActionResp) Reset() {
	*x = Provider_ActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_ActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_ActionResp) ProtoMessage() {}

func (x *Provider_ActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_ActionResp.ProtoReflect.Descriptor instead.
func (*Provider_ActionResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Provider_ActionResp) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Provider_ActionResp) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Provider_ActionResp) GetTemplateData() []byte {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *Provider_ActionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Command_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongName     string            `protobuf:"bytes,1,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName    string            `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Description  string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue string            `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Type         Command_Flag_Type `protobuf:"varint,5,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Flag) Reset() {
	*x = Command_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Flag) ProtoMessage() {}

func (x *Command_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Flag.ProtoReflect.Descriptor instead.
func (*Command_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Command_Flag) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Command_Flag) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Command_Flag) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Command_Flag) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Command_Flag) GetType() Command_Flag_Type {
	if x != nil {
		return x.Type
	}
	return Command_Flag_STRING
}

type Command_HelpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Help string `protobuf:"bytes,1,opt,name=help,proto3" json:"help,omitempty"`
}

func (x *Command_HelpResp) Reset() {
	*x = Command_HelpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_HelpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_HelpResp) ProtoMessage() {}

func (x *Command_HelpResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_HelpResp.ProtoReflect.Descriptor instead.
func (*Command_HelpResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Command_HelpResp) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

type Command_SynopsisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Synopsis string `protobuf:"bytes,1,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
}

func (x *Command_SynopsisResp) Reset() {
	*x = Command_SynopsisResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_SynopsisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_SynopsisResp) ProtoMessage() {}

func (x *Command_SynopsisResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_SynopsisResp.ProtoReflect.Descriptor instead.
func (*Command_SynopsisResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 2}
}

func (x *Command_SynopsisResp) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

type Command_FlagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []*Command_Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *Command_FlagsResp) Reset() {
	*x = Command_FlagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_FlagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_FlagsResp) ProtoMessage() {}

func (x *Command_FlagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_FlagsResp.ProtoReflect.Descriptor instead.
func (*Command_FlagsResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 3}
}

func (x *Command_FlagsResp) GetFlags() []*Command_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type Command_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int64 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Command_ExecuteResp) Reset() {
	*x = Command_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteResp) ProtoMessage() {}

func (x *Command_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Command_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 4}
}

func (x *Command_ExecuteResp) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Command_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []*Command_Arguments_Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	Args  []string                  `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *Command_Arguments) Reset() {
	*x = Command_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments) ProtoMessage() {}

func (x *Command_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments.ProtoReflect.Descriptor instead.
func (*Command_Arguments) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 5}
}

func (x *Command_Arguments) GetFlags() []*Command_Arguments_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command_Arguments) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type Command_Arguments_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//	*Command_Arguments_Flag_String_
	//	*Command_Arguments_Flag_Bool
	Value isCommand_Arguments_Flag_Value `protobuf_oneof:"value"`
	Type  Command_Arguments_Flag_Type    `protobuf:"varint,4,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Arguments_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Arguments_Flag) Reset() {
	*x = Command_Arguments_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments_Flag) ProtoMessage() {}

func (x *Command_Arguments_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments_Flag.ProtoReflect.Descriptor instead.
func (*Command_Arguments_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8, 5, 0}
}

func (x *Command_Arguments_Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Command_Arguments_Flag) GetValue() isCommand_Arguments_Flag_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Command_Arguments_Flag) GetString_() string {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_String_); ok {
		return x.String_
	}
	return ""
}

func (x *Command_Arguments_Flag) GetBool() bool {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Command_Arguments_Flag) GetType() Command_Arguments_Flag_Type {
	if x != nil {
		return x.Type
	}
	return Command_Arguments_Flag_STRING
}

type isCommand_Arguments_Flag_Value interface {
	isCommand_Arguments_Flag_Value()
}

type Command_Arguments_Flag_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Command_Arguments_Flag_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

func (*Command_Arguments_Flag_String_) isCommand_Arguments_Flag_Value() {}

func (*Command_Arguments_Flag_Bool) isCommand_Arguments_Flag_Value() {}

type Communicator_MatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match bool `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *Communicator_MatchResp) Reset() {
	*x = Communicator_MatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_MatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_MatchResp) ProtoMessage() {}

func (x *Communicator_MatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_MatchResp.ProtoReflect.Descriptor instead.
func (*Communicator_MatchResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 0}
}

func (x *Communicator_MatchResp) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

type Communicator_InitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_InitResp) Reset() {
	*x = Communicator_InitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_InitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_InitResp) ProtoMessage() {}

func (x *Communicator_InitResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_InitResp.ProtoReflect.Descriptor instead.
func (*Communicator_InitResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 1}
}

type Communicator_ReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *Communicator_ReadyResp) Reset() {
	*x = Communicator_ReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ReadyResp) ProtoMessage() {}

func (x *Communicator_ReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ReadyResp.ProtoReflect.Descriptor instead.
func (*Communicator_ReadyResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 2}
}

func (x *Communicator_ReadyResp) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type Communicator_FileTransferResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_FileTransferResp) Reset() {
	*x = Communicator_FileTransferResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_FileTransferResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_FileTransferResp) ProtoMessage() {}

func (x *Communicator_FileTransferResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_FileTransferResp.ProtoReflect.Descriptor instead.
func (*Communicator_FileTransferResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3}
}

type Communicator_ExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Args_Machine  `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Command string         `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Options *Args_LabelSet `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Communicator_ExecutionRequest) Reset() {
	*x = Communicator_ExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ExecutionRequest) ProtoMessage() {}

func (x *Communicator_ExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ExecutionRequest.ProtoReflect.Descriptor instead.
func (*Communicator_ExecutionRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 4}
}

func (x *Communicator_ExecutionRequest) GetMachine() *Args_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Communicator_ExecutionRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Communicator_ExecutionRequest) GetOptions() *Args_LabelSet {
	if x != nil {
		return x.Options
	}
	return nil
}

type Communicator_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Communicator_ExecuteResp) Reset() {
	*x = Communicator_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ExecuteResp) ProtoMessage() {}

func (x *Communicator_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Communicator_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 5}
}

func (x *Communicator_ExecuteResp) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Communicator_TestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *Communicator_TestResp) Reset() {
	*x = Communicator_TestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_TestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_TestResp) ProtoMessage() {}

func (x *Communicator_TestResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_TestResp.ProtoReflect.Descriptor instead.
func (*Communicator_TestResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 6}
}

func (x *Communicator_TestResp) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type Communicator_ResetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_ResetResp) Reset() {
	*x = Communicator_ResetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ResetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ResetResp) ProtoMessage() {}

func (x *Communicator_ResetResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ResetResp.ProtoReflect.Descriptor instead.
func (*Communicator_ResetResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 7}
}

type Guest_DetectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detected bool `protobuf:"varint,1,opt,name=detected,proto3" json:"detected,omitempty"`
}

func (x *Guest_DetectResp) Reset() {
	*x = Guest_DetectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_DetectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_DetectResp) ProtoMessage() {}

func (x *Guest_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_DetectResp.ProtoReflect.Descriptor instead.
func (*Guest_DetectResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Guest_DetectResp) GetDetected() bool {
	if x != nil {
		return x.Detected
	}
	return false
}

type Guest_Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Guest_Capability) Reset() {
	*x = Guest_Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability) ProtoMessage() {}

func (x *Guest_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability.ProtoReflect.Descriptor instead.
func (*Guest_Capability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1}
}

type Guest_Capability_NamedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuncArgs *FuncSpec_Args `protobuf:"bytes,2,opt,name=func_args,json=funcArgs,proto3" json:"func_args,omitempty"`
}

func (x *Guest_Capability_NamedRequest) Reset() {
	*x = Guest_Capability_NamedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_NamedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_NamedRequest) ProtoMessage() {}

func (x *Guest_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_NamedRequest.ProtoReflect.Descriptor instead.
func (*Guest_Capability_NamedRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1, 0}
}

func (x *Guest_Capability_NamedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Guest_Capability_NamedRequest) GetFuncArgs() *FuncSpec_Args {
	if x != nil {
		return x.FuncArgs
	}
	return nil
}

type Guest_Capability_CheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasCapability bool `protobuf:"varint,1,opt,name=has_capability,json=hasCapability,proto3" json:"has_capability,omitempty"`
}

func (x *Guest_Capability_CheckResp) Reset() {
	*x = Guest_Capability_CheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_CheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_CheckResp) ProtoMessage() {}

func (x *Guest_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_CheckResp.ProtoReflect.Descriptor instead.
func (*Guest_Capability_CheckResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1, 1}
}

func (x *Guest_Capability_CheckResp) GetHasCapability() bool {
	if x != nil {
		return x.HasCapability
	}
	return false
}

type Guest_Capability_Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *any.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Guest_Capability_Resp) Reset() {
	*x = Guest_Capability_Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_Resp) ProtoMessage() {}

func (x *Guest_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_Resp.ProtoReflect.Descriptor instead.
func (*Guest_Capability_Resp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1, 2}
}

func (x *Guest_Capability_Resp) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Host_DetectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detected bool `protobuf:"varint,1,opt,name=detected,proto3" json:"detected,omitempty"`
}

func (x *Host_DetectResp) Reset() {
	*x = Host_DetectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_DetectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_DetectResp) ProtoMessage() {}

func (x *Host_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_DetectResp.ProtoReflect.Descriptor instead.
func (*Host_DetectResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 0}
}

func (x *Host_DetectResp) GetDetected() bool {
	if x != nil {
		return x.Detected
	}
	return false
}

type Host_Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Host_Capability) Reset() {
	*x = Host_Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability) ProtoMessage() {}

func (x *Host_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability.ProtoReflect.Descriptor instead.
func (*Host_Capability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 1}
}

type Host_Capability_CheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasCapability bool `protobuf:"varint,1,opt,name=has_capability,json=hasCapability,proto3" json:"has_capability,omitempty"`
}

func (x *Host_Capability_CheckResp) Reset() {
	*x = Host_Capability_CheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability_CheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability_CheckResp) ProtoMessage() {}

func (x *Host_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability_CheckResp.ProtoReflect.Descriptor instead.
func (*Host_Capability_CheckResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 1, 0}
}

func (x *Host_Capability_CheckResp) GetHasCapability() bool {
	if x != nil {
		return x.HasCapability
	}
	return false
}

type Host_Capability_Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *any.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Host_Capability_Resp) Reset() {
	*x = Host_Capability_Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability_Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability_Resp) ProtoMessage() {}

func (x *Host_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability_Resp.ProtoReflect.Descriptor instead.
func (*Host_Capability_Resp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 1, 1}
}

func (x *Host_Capability_Resp) GetResult() *any.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

// Box references a Box.
type Ref_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Ref_Box) Reset() {
	*x = Ref_Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Box) ProtoMessage() {}

func (x *Ref_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Box.ProtoReflect.Descriptor instead.
func (*Ref_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Ref_Box) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// Represents an Environment
type Ref_Environment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *Ref_Environment) Reset() {
	*x = Ref_Environment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Environment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Environment) ProtoMessage() {}

func (x *Ref_Environment) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Environment.ProtoReflect.Descriptor instead.
func (*Ref_Environment) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Ref_Environment) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Machine references a machine.
type Ref_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Ref_Machine) Reset() {
	*x = Ref_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Machine) ProtoMessage() {}

func (x *Ref_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Machine.ProtoReflect.Descriptor instead.
func (*Ref_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 2}
}

func (x *Ref_Machine) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// SetName
type Machine_SetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Name    string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Machine_SetNameRequest) Reset() {
	*x = Machine_SetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetNameRequest) ProtoMessage() {}

func (x *Machine_SetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetNameRequest.ProtoReflect.Descriptor instead.
func (*Machine_SetNameRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Machine_SetNameRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Machine_SetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Machine_SetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine_SetNameResponse) Reset() {
	*x = Machine_SetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetNameResponse) ProtoMessage() {}

func (x *Machine_SetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetNameResponse.ProtoReflect.Descriptor instead.
func (*Machine_SetNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 1}
}

// GetName
type Machine_GetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_GetNameRequest) Reset() {
	*x = Machine_GetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetNameRequest) ProtoMessage() {}

func (x *Machine_GetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetNameRequest.ProtoReflect.Descriptor instead.
func (*Machine_GetNameRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2}
}

func (x *Machine_GetNameRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_GetNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Machine_GetNameResponse) Reset() {
	*x = Machine_GetNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetNameResponse) ProtoMessage() {}

func (x *Machine_GetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetNameResponse.ProtoReflect.Descriptor instead.
func (*Machine_GetNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 3}
}

func (x *Machine_GetNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// SetID
type Machine_SetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Id      string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Machine_SetIDRequest) Reset() {
	*x = Machine_SetIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetIDRequest) ProtoMessage() {}

func (x *Machine_SetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetIDRequest.ProtoReflect.Descriptor instead.
func (*Machine_SetIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 4}
}

func (x *Machine_SetIDRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Machine_SetIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Machine_SetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine_SetIDResponse) Reset() {
	*x = Machine_SetIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetIDResponse) ProtoMessage() {}

func (x *Machine_SetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetIDResponse.ProtoReflect.Descriptor instead.
func (*Machine_SetIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 5}
}

// GetID
type Machine_GetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_GetIDRequest) Reset() {
	*x = Machine_GetIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetIDRequest) ProtoMessage() {}

func (x *Machine_GetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetIDRequest.ProtoReflect.Descriptor instead.
func (*Machine_GetIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 6}
}

func (x *Machine_GetIDRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_GetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Machine_GetIDResponse) Reset() {
	*x = Machine_GetIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetIDResponse) ProtoMessage() {}

func (x *Machine_GetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetIDResponse.ProtoReflect.Descriptor instead.
func (*Machine_GetIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 7}
}

func (x *Machine_GetIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Machine_SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine       `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	State   *Args_MachineState `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Machine_SetStateRequest) Reset() {
	*x = Machine_SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetStateRequest) ProtoMessage() {}

func (x *Machine_SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetStateRequest.ProtoReflect.Descriptor instead.
func (*Machine_SetStateRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 8}
}

func (x *Machine_SetStateRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Machine_SetStateRequest) GetState() *Args_MachineState {
	if x != nil {
		return x.State
	}
	return nil
}

type Machine_SetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine_SetStateResponse) Reset() {
	*x = Machine_SetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetStateResponse) ProtoMessage() {}

func (x *Machine_SetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetStateResponse.ProtoReflect.Descriptor instead.
func (*Machine_SetStateResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 9}
}

type Machine_GetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_GetStateRequest) Reset() {
	*x = Machine_GetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetStateRequest) ProtoMessage() {}

func (x *Machine_GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetStateRequest.ProtoReflect.Descriptor instead.
func (*Machine_GetStateRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 10}
}

func (x *Machine_GetStateRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *Args_MachineState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Machine_GetStateResponse) Reset() {
	*x = Machine_GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetStateResponse) ProtoMessage() {}

func (x *Machine_GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetStateResponse.ProtoReflect.Descriptor instead.
func (*Machine_GetStateResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 11}
}

func (x *Machine_GetStateResponse) GetState() *Args_MachineState {
	if x != nil {
		return x.State
	}
	return nil
}

type Machine_GetUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_GetUUIDRequest) Reset() {
	*x = Machine_GetUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetUUIDRequest) ProtoMessage() {}

func (x *Machine_GetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetUUIDRequest.ProtoReflect.Descriptor instead.
func (*Machine_GetUUIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 12}
}

func (x *Machine_GetUUIDRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_GetUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Machine_GetUUIDResponse) Reset() {
	*x = Machine_GetUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_GetUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_GetUUIDResponse) ProtoMessage() {}

func (x *Machine_GetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_GetUUIDResponse.ProtoReflect.Descriptor instead.
func (*Machine_GetUUIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 13}
}

func (x *Machine_GetUUIDResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Machine_SetUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Uuid    string       `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Machine_SetUUIDRequest) Reset() {
	*x = Machine_SetUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetUUIDRequest) ProtoMessage() {}

func (x *Machine_SetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetUUIDRequest.ProtoReflect.Descriptor instead.
func (*Machine_SetUUIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 14}
}

func (x *Machine_SetUUIDRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Machine_SetUUIDRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Machine_SetUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine_SetUUIDResponse) Reset() {
	*x = Machine_SetUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_SetUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_SetUUIDResponse) ProtoMessage() {}

func (x *Machine_SetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_SetUUIDResponse.ProtoReflect.Descriptor instead.
func (*Machine_SetUUIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 15}
}

// Box
type Machine_BoxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_BoxRequest) Reset() {
	*x = Machine_BoxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_BoxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_BoxRequest) ProtoMessage() {}

func (x *Machine_BoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_BoxRequest.ProtoReflect.Descriptor instead.
func (*Machine_BoxRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 16}
}

func (x *Machine_BoxRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

// TODO: this should return a Ref.Box
type Machine_BoxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Box *Args_Box `protobuf:"bytes,1,opt,name=box,proto3" json:"box,omitempty"`
}

func (x *Machine_BoxResponse) Reset() {
	*x = Machine_BoxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_BoxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_BoxResponse) ProtoMessage() {}

func (x *Machine_BoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_BoxResponse.ProtoReflect.Descriptor instead.
func (*Machine_BoxResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 17}
}

func (x *Machine_BoxResponse) GetBox() *Args_Box {
	if x != nil {
		return x.Box
	}
	return nil
}

// Datadir
type Machine_DatadirRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_DatadirRequest) Reset() {
	*x = Machine_DatadirRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_DatadirRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_DatadirRequest) ProtoMessage() {}

func (x *Machine_DatadirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_DatadirRequest.ProtoReflect.Descriptor instead.
func (*Machine_DatadirRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 18}
}

func (x *Machine_DatadirRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_DatadirResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datadir *Args_DataDir_Machine `protobuf:"bytes,1,opt,name=datadir,proto3" json:"datadir,omitempty"`
}

func (x *Machine_DatadirResponse) Reset() {
	*x = Machine_DatadirResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_DatadirResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_DatadirResponse) ProtoMessage() {}

func (x *Machine_DatadirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_DatadirResponse.ProtoReflect.Descriptor instead.
func (*Machine_DatadirResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 19}
}

func (x *Machine_DatadirResponse) GetDatadir() *Args_DataDir_Machine {
	if x != nil {
		return x.Datadir
	}
	return nil
}

// LocalDataPath
type Machine_LocalDataPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_LocalDataPathRequest) Reset() {
	*x = Machine_LocalDataPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_LocalDataPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_LocalDataPathRequest) ProtoMessage() {}

func (x *Machine_LocalDataPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_LocalDataPathRequest.ProtoReflect.Descriptor instead.
func (*Machine_LocalDataPathRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 20}
}

func (x *Machine_LocalDataPathRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_LocalDataPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Machine_LocalDataPathResponse) Reset() {
	*x = Machine_LocalDataPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_LocalDataPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_LocalDataPathResponse) ProtoMessage() {}

func (x *Machine_LocalDataPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_LocalDataPathResponse.ProtoReflect.Descriptor instead.
func (*Machine_LocalDataPathResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 21}
}

func (x *Machine_LocalDataPathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// Provider
type Machine_ProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_ProviderRequest) Reset() {
	*x = Machine_ProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_ProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_ProviderRequest) ProtoMessage() {}

func (x *Machine_ProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_ProviderRequest.ProtoReflect.Descriptor instead.
func (*Machine_ProviderRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 22}
}

func (x *Machine_ProviderRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_ProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Machine_ProviderResponse) Reset() {
	*x = Machine_ProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_ProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_ProviderResponse) ProtoMessage() {}

func (x *Machine_ProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_ProviderResponse.ProtoReflect.Descriptor instead.
func (*Machine_ProviderResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 23}
}

// VagrantfileName
type Machine_VagrantfileNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_VagrantfileNameRequest) Reset() {
	*x = Machine_VagrantfileNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_VagrantfileNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_VagrantfileNameRequest) ProtoMessage() {}

func (x *Machine_VagrantfileNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_VagrantfileNameRequest.ProtoReflect.Descriptor instead.
func (*Machine_VagrantfileNameRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 24}
}

func (x *Machine_VagrantfileNameRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_VagrantfileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Machine_VagrantfileNameResponse) Reset() {
	*x = Machine_VagrantfileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_VagrantfileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_VagrantfileNameResponse) ProtoMessage() {}

func (x *Machine_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_VagrantfileNameResponse.ProtoReflect.Descriptor instead.
func (*Machine_VagrantfileNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 25}
}

func (x *Machine_VagrantfileNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VagrantfilePath
type Machine_VagrantfilePathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_VagrantfilePathRequest) Reset() {
	*x = Machine_VagrantfilePathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_VagrantfilePathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_VagrantfilePathRequest) ProtoMessage() {}

func (x *Machine_VagrantfilePathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_VagrantfilePathRequest.ProtoReflect.Descriptor instead.
func (*Machine_VagrantfilePathRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 26}
}

func (x *Machine_VagrantfilePathRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_VagrantfilePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Machine_VagrantfilePathResponse) Reset() {
	*x = Machine_VagrantfilePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_VagrantfilePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_VagrantfilePathResponse) ProtoMessage() {}

func (x *Machine_VagrantfilePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_VagrantfilePathResponse.ProtoReflect.Descriptor instead.
func (*Machine_VagrantfilePathResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 27}
}

func (x *Machine_VagrantfilePathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// UpdatedAt
type Machine_UpdatedAtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_UpdatedAtRequest) Reset() {
	*x = Machine_UpdatedAtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_UpdatedAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_UpdatedAtRequest) ProtoMessage() {}

func (x *Machine_UpdatedAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_UpdatedAtRequest.ProtoReflect.Descriptor instead.
func (*Machine_UpdatedAtRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 28}
}

func (x *Machine_UpdatedAtRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_UpdatedAtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Machine_UpdatedAtResponse) Reset() {
	*x = Machine_UpdatedAtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_UpdatedAtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_UpdatedAtResponse) ProtoMessage() {}

func (x *Machine_UpdatedAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_UpdatedAtResponse.ProtoReflect.Descriptor instead.
func (*Machine_UpdatedAtResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 29}
}

func (x *Machine_UpdatedAtResponse) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Machine_UIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Ref_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *Machine_UIRequest) Reset() {
	*x = Machine_UIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_UIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_UIRequest) ProtoMessage() {}

func (x *Machine_UIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_UIRequest.ProtoReflect.Descriptor instead.
func (*Machine_UIRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 30}
}

func (x *Machine_UIRequest) GetMachine() *Ref_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine_UIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ui *Args_TerminalUI `protobuf:"bytes,1,opt,name=ui,proto3" json:"ui,omitempty"`
}

func (x *Machine_UIResponse) Reset() {
	*x = Machine_UIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine_UIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine_UIResponse) ProtoMessage() {}

func (x *Machine_UIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine_UIResponse.ProtoReflect.Descriptor instead.
func (*Machine_UIResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 31}
}

func (x *Machine_UIResponse) GetUi() *Args_TerminalUI {
	if x != nil {
		return x.Ui
	}
	return nil
}

type Environment_MachineAndProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Environment_MachineAndProvider) Reset() {
	*x = Environment_MachineAndProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment_MachineAndProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment_MachineAndProvider) ProtoMessage() {}

func (x *Environment_MachineAndProvider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment_MachineAndProvider.ProtoReflect.Descriptor instead.
func (*Environment_MachineAndProvider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 0}
}

func (x *Environment_MachineAndProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Environment_MachineAndProvider) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type Environment_MachineNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Environment_MachineNamesResponse) Reset() {
	*x = Environment_MachineNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment_MachineNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment_MachineNamesResponse) ProtoMessage() {}

func (x *Environment_MachineNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment_MachineNamesResponse.ProtoReflect.Descriptor instead.
func (*Environment_MachineNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 1}
}

func (x *Environment_MachineNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Environment_ActiveMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env *Ref_Environment `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
}

func (x *Environment_ActiveMachinesRequest) Reset() {
	*x = Environment_ActiveMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment_ActiveMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment_ActiveMachinesRequest) ProtoMessage() {}

func (x *Environment_ActiveMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment_ActiveMachinesRequest.ProtoReflect.Descriptor instead.
func (*Environment_ActiveMachinesRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 2}
}

func (x *Environment_ActiveMachinesRequest) GetEnv() *Ref_Environment {
	if x != nil {
		return x.Env
	}
	return nil
}

type Environment_ActiveMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Environment_MachineAndProvider `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *Environment_ActiveMachinesResponse) Reset() {
	*x = Environment_ActiveMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Environment_ActiveMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Environment_ActiveMachinesResponse) ProtoMessage() {}

func (x *Environment_ActiveMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Environment_ActiveMachinesResponse.ProtoReflect.Descriptor instead.
func (*Environment_ActiveMachinesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 3}
}

func (x *Environment_ActiveMachinesResponse) GetMachines() []*Environment_MachineAndProvider {
	if x != nil {
		return x.Machines
	}
	return nil
}

var File_vagrant_plugin_sdk_plugin_proto protoreflect.FileDescriptor

var file_vagrant_plugin_sdk_plugin_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6,
	0x1c, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x1a, 0xed, 0x03, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x72, 0x1a, 0x75, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x77, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64,
	0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44,
	0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70,
	0x44, 0x69, 0x72, 0x1a, 0x77, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64,
	0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x79, 0x0a, 0x09,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64,
	0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0xcf, 0x02, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0xbe, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x2d, 0x0a, 0x0d, 0x42, 0x6f, 0x78,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x98, 0x02, 0x0a, 0x03, 0x42, 0x6f, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x42, 0x6f, 0x78, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0xb6, 0x03, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x02, 0x75,
	0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x52,
	0x02, 0x75, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6d, 0x70, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6d, 0x70, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x65, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x65,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x6d, 0x73, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x65, 0x6d, 0x73, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x4b, 0x0a, 0x07,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x2c, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x09, 0x0a, 0x07, 0x56, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x1a, 0x04, 0x0a, 0x02, 0x56, 0x4d, 0x1a, 0x0a, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x8f, 0x01, 0x0a, 0x08, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x53, 0x65, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39,
	0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x07, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x1a, 0x0d, 0x0a, 0x0b,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x4d, 0x0a, 0x07, 0x4a,
	0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1c, 0x0a, 0x06, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x3d, 0x0a, 0x0a, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x1a, 0x85, 0x02, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x61, 0x67, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x63, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x03,
	0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48,
	0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x76, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10,
	0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbb, 0x04, 0x0a, 0x07, 0x53, 0x53, 0x48, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x73, 0x61,
	0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x73, 0x61, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x78, 0x31, 0x31, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61,
	0x72, 0x64, 0x58, 0x31, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x65, 0x6e, 0x76, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x45, 0x6e, 0x76, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x73, 0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x8f, 0x04, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x72, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x4d, 0x0a, 0x09, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x57, 0x69, 0x6e, 0x72, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x73, 0x6c,
	0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x73, 0x6c, 0x50, 0x65, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x47, 0x4f, 0x54, 0x49, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x53, 0x53, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x49,
	0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x22, 0xb8, 0x02, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x5b, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a,
	0x41, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x22, 0xa0, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x26, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x1a, 0x3c, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x1a, 0xc1, 0x01, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x65, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x84,
	0x03, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4f, 0x0a, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x1a, 0x6b, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x34, 0x0a,
	0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9a, 0x0d, 0x0a, 0x0a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x49, 0x1a, 0x39, 0x0a, 0x15, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x1a,
	0x25, 0x0a, 0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x1a, 0x5e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xc9, 0x0b, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x42, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x58,
	0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x03, 0x72, 0x61, 0x77, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x61, 0x77, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x45, 0x0a, 0x05, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x52, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x65, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70,
	0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x4b,
	0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x46, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x1a, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x1a, 0x31, 0x0a, 0x03, 0x52, 0x61, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0x36, 0x0a, 0x0a, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x59,
	0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x4a, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x1a, 0x58, 0x0a, 0x08, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12,
	0x4c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x67, 0x0a,
	0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x21, 0x0a, 0x09, 0x53, 0x74, 0x65, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x1a, 0x6e, 0x0a, 0x04, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x1a, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x22, 0xf0, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x29, 0x0a, 0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x1a, 0x32, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x84, 0x02, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x4e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd4, 0x05, 0x0a, 0x07,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0xe5, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52,
	0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x02, 0x1a,
	0x1e, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x65, 0x6c, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70, 0x1a,
	0x2a, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x1a, 0x46, 0x0a, 0x09, 0x46,
	0x6c, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x1a, 0x2a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x1a,
	0xa0, 0x02, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a,
	0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xfd, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x1a, 0x21, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x1a, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x1a, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x1a, 0xab, 0x01, 0x0a, 0x10, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x3e, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x20, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x1a, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x91, 0x02, 0x0a, 0x05, 0x47, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x0a, 0x0a,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0xdd, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x65, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x66, 0x75, 0x6e,
	0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x32, 0x0a, 0x09,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73,
	0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x1a, 0x34, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x1a,
	0x28, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x32, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61,
	0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x34, 0x0a, 0x04, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x87, 0x01, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x1a, 0x26, 0x0a, 0x03, 0x42, 0x6f, 0x78,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x1a, 0x2c, 0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x1a,
	0x2a, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xef, 0x10, 0x0a, 0x07,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x62, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4e,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x25,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x5c, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52,
	0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x1a, 0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4c, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65,
	0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x1a, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x1a, 0x8f, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x52, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x4e,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x25,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0x62, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x4a, 0x0a, 0x0a,
	0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x40, 0x0a, 0x0b, 0x42, 0x6f, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x03, 0x62, 0x6f, 0x78, 0x1a, 0x4e, 0x0a, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x58, 0x0a, 0x0f, 0x44, 0x61,
	0x74, 0x61, 0x64, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x72, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x64, 0x61, 0x74,
	0x61, 0x64, 0x69, 0x72, 0x1a, 0x54, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x2b, 0x0a, 0x15, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x4f, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x12, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x56, 0x0a, 0x16,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x1a, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0x56, 0x0a, 0x16, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x2d, 0x0a, 0x17, 0x56,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x50, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c,
	0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x4e, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x49, 0x0a, 0x09,
	0x55, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x44, 0x0a, 0x0a, 0x55, 0x49, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x02, 0x75, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x52, 0x02, 0x75, 0x69, 0x22, 0xc1, 0x02,
	0x0a, 0x0b, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x44, 0x0a,
	0x12, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x1a, 0x2c, 0x0a, 0x14, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x1a, 0x51, 0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x65, 0x6e,
	0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x52, 0x65, 0x66, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x1a, 0x6b, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x32, 0xab, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x49, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x06, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2a, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x60, 0x0a,
	0x0d, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32,
	0xa8, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x03, 0x4d, 0x61,
	0x70, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61,
	0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8f, 0x07, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5a,
	0x0a, 0x06, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x60, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x44, 0x0a,
	0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0x91, 0x02, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x95, 0x07, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5d, 0x0a, 0x08, 0x53, 0x79, 0x6e,
	0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x53, 0x79, 0x6e, 0x6f,
	0x70, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x48, 0x65, 0x6c, 0x70,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x55, 0x0a,
	0x04, 0x48, 0x65, 0x6c, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x27, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x48, 0x65, 0x6c, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x57, 0x0a, 0x05, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5b, 0x0a, 0x07, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xb8, 0x0f, 0x0a, 0x13, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f,
	0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x63, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x66, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x64, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60,
	0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x50, 0x0a, 0x15, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x6a, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x44, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x32, 0x8c, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xec, 0x06, 0x0a, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x57, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x78, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x11, 0x48, 0x61,
	0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x70, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x32, 0xa9, 0x03, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x26,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x32, 0x92, 0x02,
	0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xdc, 0x0d, 0x0a, 0x0e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x53, 0x65, 0x74,
	0x49, 0x44, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x05, 0x47, 0x65, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44,
	0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5c, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a,
	0x07, 0x44, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x80, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x02, 0x55, 0x49, 0x12, 0x28, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x49, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xfd, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x38, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce sync.Once
	file_vagrant_plugin_sdk_plugin_proto_rawDescData = file_vagrant_plugin_sdk_plugin_proto_rawDesc
)

func file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP() []byte {
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce.Do(func() {
		file_vagrant_plugin_sdk_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_vagrant_plugin_sdk_plugin_proto_rawDescData)
	})
	return file_vagrant_plugin_sdk_plugin_proto_rawDescData
}

var file_vagrant_plugin_sdk_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_vagrant_plugin_sdk_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 139)
var file_vagrant_plugin_sdk_plugin_proto_goTypes = []interface{}{
	(Args_WinrmInfo_Transport)(0),              // 0: hashicorp.vagrant.sdk.Args.WinrmInfo.Transport
	(Command_Flag_Type)(0),                     // 1: hashicorp.vagrant.sdk.Command.Flag.Type
	(Command_Arguments_Flag_Type)(0),           // 2: hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	(*Args)(nil),                               // 3: hashicorp.vagrant.sdk.Args
	(*FuncSpec)(nil),                           // 4: hashicorp.vagrant.sdk.FuncSpec
	(*Config)(nil),                             // 5: hashicorp.vagrant.sdk.Config
	(*Auth)(nil),                               // 6: hashicorp.vagrant.sdk.Auth
	(*ImplementsResp)(nil),                     // 7: hashicorp.vagrant.sdk.ImplementsResp
	(*TerminalUI)(nil),                         // 8: hashicorp.vagrant.sdk.TerminalUI
	(*Map)(nil),                                // 9: hashicorp.vagrant.sdk.Map
	(*Provider)(nil),                           // 10: hashicorp.vagrant.sdk.Provider
	(*Command)(nil),                            // 11: hashicorp.vagrant.sdk.Command
	(*Communicator)(nil),                       // 12: hashicorp.vagrant.sdk.Communicator
	(*Guest)(nil),                              // 13: hashicorp.vagrant.sdk.Guest
	(*Host)(nil),                               // 14: hashicorp.vagrant.sdk.Host
	(*Ref)(nil),                                // 15: hashicorp.vagrant.sdk.Ref
	(*Machine)(nil),                            // 16: hashicorp.vagrant.sdk.Machine
	(*Environment)(nil),                        // 17: hashicorp.vagrant.sdk.Environment
	(*Args_DataDir)(nil),                       // 18: hashicorp.vagrant.sdk.Args.DataDir
	(*Args_MachineIndex)(nil),                  // 19: hashicorp.vagrant.sdk.Args.MachineIndex
	(*Args_BoxCollection)(nil),                 // 20: hashicorp.vagrant.sdk.Args.BoxCollection
	(*Args_Box)(nil),                           // 21: hashicorp.vagrant.sdk.Args.Box
	(*Args_Environment)(nil),                   // 22: hashicorp.vagrant.sdk.Args.Environment
	(*Args_Machine)(nil),                       // 23: hashicorp.vagrant.sdk.Args.Machine
	(*Args_Configuration)(nil),                 // 24: hashicorp.vagrant.sdk.Args.Configuration
	(*Args_LabelSet)(nil),                      // 25: hashicorp.vagrant.sdk.Args.LabelSet
	(*Args_Options)(nil),                       // 26: hashicorp.vagrant.sdk.Args.Options
	(*Args_Vagrantfile)(nil),                   // 27: hashicorp.vagrant.sdk.Args.Vagrantfile
	(*Args_JobInfo)(nil),                       // 28: hashicorp.vagrant.sdk.Args.JobInfo
	(*Args_Logger)(nil),                        // 29: hashicorp.vagrant.sdk.Args.Logger
	(*Args_TerminalUI)(nil),                    // 30: hashicorp.vagrant.sdk.Args.TerminalUI
	(*Args_StateBag)(nil),                      // 31: hashicorp.vagrant.sdk.Args.StateBag
	(*Args_MachineState)(nil),                  // 32: hashicorp.vagrant.sdk.Args.MachineState
	(*Args_SSHInfo)(nil),                       // 33: hashicorp.vagrant.sdk.Args.SSHInfo
	(*Args_WinrmInfo)(nil),                     // 34: hashicorp.vagrant.sdk.Args.WinrmInfo
	(*Args_DataDir_Basis)(nil),                 // 35: hashicorp.vagrant.sdk.Args.DataDir.Basis
	(*Args_DataDir_Project)(nil),               // 36: hashicorp.vagrant.sdk.Args.DataDir.Project
	(*Args_DataDir_Machine)(nil),               // 37: hashicorp.vagrant.sdk.Args.DataDir.Machine
	(*Args_DataDir_Component)(nil),             // 38: hashicorp.vagrant.sdk.Args.DataDir.Component
	(*Args_MachineIndex_Entry)(nil),            // 39: hashicorp.vagrant.sdk.Args.MachineIndex.Entry
	nil,                                        // 40: hashicorp.vagrant.sdk.Args.Box.MetadataEntry
	(*Args_Configuration_Vagrant)(nil),         // 41: hashicorp.vagrant.sdk.Args.Configuration.Vagrant
	(*Args_Configuration_VM)(nil),              // 42: hashicorp.vagrant.sdk.Args.Configuration.VM
	(*Args_Configuration_Provider)(nil),        // 43: hashicorp.vagrant.sdk.Args.Configuration.Provider
	nil,                                        // 44: hashicorp.vagrant.sdk.Args.LabelSet.LabelsEntry
	nil,                                        // 45: hashicorp.vagrant.sdk.Args.StateBag.DataEntry
	(*Args_StateBag_Value)(nil),                // 46: hashicorp.vagrant.sdk.Args.StateBag.Value
	(*FuncSpec_Value)(nil),                     // 47: hashicorp.vagrant.sdk.FuncSpec.Value
	(*FuncSpec_Args)(nil),                      // 48: hashicorp.vagrant.sdk.FuncSpec.Args
	(*Config_ConfigureRequest)(nil),            // 49: hashicorp.vagrant.sdk.Config.ConfigureRequest
	(*Config_StructResp)(nil),                  // 50: hashicorp.vagrant.sdk.Config.StructResp
	(*Config_FieldDocumentation)(nil),          // 51: hashicorp.vagrant.sdk.Config.FieldDocumentation
	(*Config_MapperDocumentation)(nil),         // 52: hashicorp.vagrant.sdk.Config.MapperDocumentation
	(*Config_Documentation)(nil),               // 53: hashicorp.vagrant.sdk.Config.Documentation
	nil,                                        // 54: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	(*Auth_AuthResponse)(nil),                  // 55: hashicorp.vagrant.sdk.Auth.AuthResponse
	(*TerminalUI_IsInteractiveResponse)(nil),   // 56: hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	(*TerminalUI_OutputRequest)(nil),           // 57: hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	(*TerminalUI_Response)(nil),                // 58: hashicorp.vagrant.sdk.TerminalUI.Response
	(*TerminalUI_Event)(nil),                   // 59: hashicorp.vagrant.sdk.TerminalUI.Event
	(*TerminalUI_Event_Input)(nil),             // 60: hashicorp.vagrant.sdk.TerminalUI.Event.Input
	(*TerminalUI_Event_InputResp)(nil),         // 61: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	(*TerminalUI_Event_Status)(nil),            // 62: hashicorp.vagrant.sdk.TerminalUI.Event.Status
	(*TerminalUI_Event_Line)(nil),              // 63: hashicorp.vagrant.sdk.TerminalUI.Event.Line
	(*TerminalUI_Event_Raw)(nil),               // 64: hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	(*TerminalUI_Event_NamedValue)(nil),        // 65: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	(*TerminalUI_Event_NamedValues)(nil),       // 66: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	(*TerminalUI_Event_TableEntry)(nil),        // 67: hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	(*TerminalUI_Event_TableRow)(nil),          // 68: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	(*TerminalUI_Event_Table)(nil),             // 69: hashicorp.vagrant.sdk.TerminalUI.Event.Table
	(*TerminalUI_Event_StepGroup)(nil),         // 70: hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	(*TerminalUI_Event_Step)(nil),              // 71: hashicorp.vagrant.sdk.TerminalUI.Event.Step
	(*Map_Request)(nil),                        // 72: hashicorp.vagrant.sdk.Map.Request
	(*Map_Response)(nil),                       // 73: hashicorp.vagrant.sdk.Map.Response
	(*Map_ListResponse)(nil),                   // 74: hashicorp.vagrant.sdk.Map.ListResponse
	(*Provider_UsableResp)(nil),                // 75: hashicorp.vagrant.sdk.Provider.UsableResp
	(*Provider_InstalledResp)(nil),             // 76: hashicorp.vagrant.sdk.Provider.InstalledResp
	(*Provider_ActionResp)(nil),                // 77: hashicorp.vagrant.sdk.Provider.ActionResp
	nil,                                        // 78: hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	(*Command_Flag)(nil),                       // 79: hashicorp.vagrant.sdk.Command.Flag
	(*Command_HelpResp)(nil),                   // 80: hashicorp.vagrant.sdk.Command.HelpResp
	(*Command_SynopsisResp)(nil),               // 81: hashicorp.vagrant.sdk.Command.SynopsisResp
	(*Command_FlagsResp)(nil),                  // 82: hashicorp.vagrant.sdk.Command.FlagsResp
	(*Command_ExecuteResp)(nil),                // 83: hashicorp.vagrant.sdk.Command.ExecuteResp
	(*Command_Arguments)(nil),                  // 84: hashicorp.vagrant.sdk.Command.Arguments
	(*Command_Arguments_Flag)(nil),             // 85: hashicorp.vagrant.sdk.Command.Arguments.Flag
	(*Communicator_MatchResp)(nil),             // 86: hashicorp.vagrant.sdk.Communicator.MatchResp
	(*Communicator_InitResp)(nil),              // 87: hashicorp.vagrant.sdk.Communicator.InitResp
	(*Communicator_ReadyResp)(nil),             // 88: hashicorp.vagrant.sdk.Communicator.ReadyResp
	(*Communicator_FileTransferResp)(nil),      // 89: hashicorp.vagrant.sdk.Communicator.FileTransferResp
	(*Communicator_ExecutionRequest)(nil),      // 90: hashicorp.vagrant.sdk.Communicator.ExecutionRequest
	(*Communicator_ExecuteResp)(nil),           // 91: hashicorp.vagrant.sdk.Communicator.ExecuteResp
	(*Communicator_TestResp)(nil),              // 92: hashicorp.vagrant.sdk.Communicator.TestResp
	(*Communicator_ResetResp)(nil),             // 93: hashicorp.vagrant.sdk.Communicator.ResetResp
	(*Guest_DetectResp)(nil),                   // 94: hashicorp.vagrant.sdk.Guest.DetectResp
	(*Guest_Capability)(nil),                   // 95: hashicorp.vagrant.sdk.Guest.Capability
	(*Guest_Capability_NamedRequest)(nil),      // 96: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	(*Guest_Capability_CheckResp)(nil),         // 97: hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	(*Guest_Capability_Resp)(nil),              // 98: hashicorp.vagrant.sdk.Guest.Capability.Resp
	(*Host_DetectResp)(nil),                    // 99: hashicorp.vagrant.sdk.Host.DetectResp
	(*Host_Capability)(nil),                    // 100: hashicorp.vagrant.sdk.Host.Capability
	(*Host_Capability_CheckResp)(nil),          // 101: hashicorp.vagrant.sdk.Host.Capability.CheckResp
	(*Host_Capability_Resp)(nil),               // 102: hashicorp.vagrant.sdk.Host.Capability.Resp
	(*Ref_Box)(nil),                            // 103: hashicorp.vagrant.sdk.Ref.Box
	(*Ref_Environment)(nil),                    // 104: hashicorp.vagrant.sdk.Ref.Environment
	(*Ref_Machine)(nil),                        // 105: hashicorp.vagrant.sdk.Ref.Machine
	(*Machine_SetNameRequest)(nil),             // 106: hashicorp.vagrant.sdk.Machine.SetNameRequest
	(*Machine_SetNameResponse)(nil),            // 107: hashicorp.vagrant.sdk.Machine.SetNameResponse
	(*Machine_GetNameRequest)(nil),             // 108: hashicorp.vagrant.sdk.Machine.GetNameRequest
	(*Machine_GetNameResponse)(nil),            // 109: hashicorp.vagrant.sdk.Machine.GetNameResponse
	(*Machine_SetIDRequest)(nil),               // 110: hashicorp.vagrant.sdk.Machine.SetIDRequest
	(*Machine_SetIDResponse)(nil),              // 111: hashicorp.vagrant.sdk.Machine.SetIDResponse
	(*Machine_GetIDRequest)(nil),               // 112: hashicorp.vagrant.sdk.Machine.GetIDRequest
	(*Machine_GetIDResponse)(nil),              // 113: hashicorp.vagrant.sdk.Machine.GetIDResponse
	(*Machine_SetStateRequest)(nil),            // 114: hashicorp.vagrant.sdk.Machine.SetStateRequest
	(*Machine_SetStateResponse)(nil),           // 115: hashicorp.vagrant.sdk.Machine.SetStateResponse
	(*Machine_GetStateRequest)(nil),            // 116: hashicorp.vagrant.sdk.Machine.GetStateRequest
	(*Machine_GetStateResponse)(nil),           // 117: hashicorp.vagrant.sdk.Machine.GetStateResponse
	(*Machine_GetUUIDRequest)(nil),             // 118: hashicorp.vagrant.sdk.Machine.GetUUIDRequest
	(*Machine_GetUUIDResponse)(nil),            // 119: hashicorp.vagrant.sdk.Machine.GetUUIDResponse
	(*Machine_SetUUIDRequest)(nil),             // 120: hashicorp.vagrant.sdk.Machine.SetUUIDRequest
	(*Machine_SetUUIDResponse)(nil),            // 121: hashicorp.vagrant.sdk.Machine.SetUUIDResponse
	(*Machine_BoxRequest)(nil),                 // 122: hashicorp.vagrant.sdk.Machine.BoxRequest
	(*Machine_BoxResponse)(nil),                // 123: hashicorp.vagrant.sdk.Machine.BoxResponse
	(*Machine_DatadirRequest)(nil),             // 124: hashicorp.vagrant.sdk.Machine.DatadirRequest
	(*Machine_DatadirResponse)(nil),            // 125: hashicorp.vagrant.sdk.Machine.DatadirResponse
	(*Machine_LocalDataPathRequest)(nil),       // 126: hashicorp.vagrant.sdk.Machine.LocalDataPathRequest
	(*Machine_LocalDataPathResponse)(nil),      // 127: hashicorp.vagrant.sdk.Machine.LocalDataPathResponse
	(*Machine_ProviderRequest)(nil),            // 128: hashicorp.vagrant.sdk.Machine.ProviderRequest
	(*Machine_ProviderResponse)(nil),           // 129: hashicorp.vagrant.sdk.Machine.ProviderResponse
	(*Machine_VagrantfileNameRequest)(nil),     // 130: hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest
	(*Machine_VagrantfileNameResponse)(nil),    // 131: hashicorp.vagrant.sdk.Machine.VagrantfileNameResponse
	(*Machine_VagrantfilePathRequest)(nil),     // 132: hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest
	(*Machine_VagrantfilePathResponse)(nil),    // 133: hashicorp.vagrant.sdk.Machine.VagrantfilePathResponse
	(*Machine_UpdatedAtRequest)(nil),           // 134: hashicorp.vagrant.sdk.Machine.UpdatedAtRequest
	(*Machine_UpdatedAtResponse)(nil),          // 135: hashicorp.vagrant.sdk.Machine.UpdatedAtResponse
	(*Machine_UIRequest)(nil),                  // 136: hashicorp.vagrant.sdk.Machine.UIRequest
	(*Machine_UIResponse)(nil),                 // 137: hashicorp.vagrant.sdk.Machine.UIResponse
	(*Environment_MachineAndProvider)(nil),     // 138: hashicorp.vagrant.sdk.Environment.MachineAndProvider
	(*Environment_MachineNamesResponse)(nil),   // 139: hashicorp.vagrant.sdk.Environment.MachineNamesResponse
	(*Environment_ActiveMachinesRequest)(nil),  // 140: hashicorp.vagrant.sdk.Environment.ActiveMachinesRequest
	(*Environment_ActiveMachinesResponse)(nil), // 141: hashicorp.vagrant.sdk.Environment.ActiveMachinesResponse
	(*any.Any)(nil),                            // 142: google.protobuf.Any
	(*protostructure.Struct)(nil),              // 143: protostructure.Struct
	(*status.Status)(nil),                      // 144: google.rpc.Status
	(*timestamp.Timestamp)(nil),                // 145: google.protobuf.Timestamp
	(*empty.Empty)(nil),                        // 146: google.protobuf.Empty
}
var file_vagrant_plugin_sdk_plugin_proto_depIdxs = []int32{
	47,  // 0: hashicorp.vagrant.sdk.FuncSpec.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	47,  // 1: hashicorp.vagrant.sdk.FuncSpec.result:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	40,  // 2: hashicorp.vagrant.sdk.Args.Box.metadata:type_name -> hashicorp.vagrant.sdk.Args.Box.MetadataEntry
	30,  // 3: hashicorp.vagrant.sdk.Args.Environment.ui:type_name -> hashicorp.vagrant.sdk.Args.TerminalUI
	44,  // 4: hashicorp.vagrant.sdk.Args.LabelSet.labels:type_name -> hashicorp.vagrant.sdk.Args.LabelSet.LabelsEntry
	25,  // 5: hashicorp.vagrant.sdk.Args.Options.opt:type_name -> hashicorp.vagrant.sdk.Args.LabelSet
	45,  // 6: hashicorp.vagrant.sdk.Args.StateBag.data:type_name -> hashicorp.vagrant.sdk.Args.StateBag.DataEntry
	0,   // 7: hashicorp.vagrant.sdk.Args.WinrmInfo.transport:type_name -> hashicorp.vagrant.sdk.Args.WinrmInfo.Transport
	26,  // 8: hashicorp.vagrant.sdk.Args.MachineIndex.Entry.extra_data:type_name -> hashicorp.vagrant.sdk.Args.Options
	46,  // 9: hashicorp.vagrant.sdk.Args.StateBag.DataEntry.value:type_name -> hashicorp.vagrant.sdk.Args.StateBag.Value
	142, // 10: hashicorp.vagrant.sdk.Args.StateBag.Value.map:type_name -> google.protobuf.Any
	142, // 11: hashicorp.vagrant.sdk.FuncSpec.Value.value:type_name -> google.protobuf.Any
	47,  // 12: hashicorp.vagrant.sdk.FuncSpec.Args.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	143, // 13: hashicorp.vagrant.sdk.Config.StructResp.struct:type_name -> protostructure.Struct
	54,  // 14: hashicorp.vagrant.sdk.Config.Documentation.fields:type_name -> hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	52,  // 15: hashicorp.vagrant.sdk.Config.Documentation.mappers:type_name -> hashicorp.vagrant.sdk.Config.MapperDocumentation
	51,  // 16: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry.value:type_name -> hashicorp.vagrant.sdk.Config.FieldDocumentation
	61,  // 17: hashicorp.vagrant.sdk.TerminalUI.Response.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	63,  // 18: hashicorp.vagrant.sdk.TerminalUI.Event.line:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Line
	62,  // 19: hashicorp.vagrant.sdk.TerminalUI.Event.status:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Status
	66,  // 20: hashicorp.vagrant.sdk.TerminalUI.Event.named_values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	64,  // 21: hashicorp.vagrant.sdk.TerminalUI.Event.raw:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	69,  // 22: hashicorp.vagrant.sdk.TerminalUI.Event.table:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Table
	70,  // 23: hashicorp.vagrant.sdk.TerminalUI.Event.step_group:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	71,  // 24: hashicorp.vagrant.sdk.TerminalUI.Event.step:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Step
	60,  // 25: hashicorp.vagrant.sdk.TerminalUI.Event.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Input
	144, // 26: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp.error:type_name -> google.rpc.Status
	65,  // 27: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues.values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	67,  // 28: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow.entries:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	68,  // 29: hashicorp.vagrant.sdk.TerminalUI.Event.Table.rows:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	48,  // 30: hashicorp.vagrant.sdk.Map.Request.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	142, // 31: hashicorp.vagrant.sdk.Map.Response.result:type_name -> google.protobuf.Any
	4,   // 32: hashicorp.vagrant.sdk.Map.ListResponse.funcs:type_name -> hashicorp.vagrant.sdk.FuncSpec
	142, // 33: hashicorp.vagrant.sdk.Provider.ActionResp.result:type_name -> google.protobuf.Any
	78,  // 34: hashicorp.vagrant.sdk.Provider.ActionResp.labels:type_name -> hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	1,   // 35: hashicorp.vagrant.sdk.Command.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Flag.Type
	79,  // 36: hashicorp.vagrant.sdk.Command.FlagsResp.flags:type_name -> hashicorp.vagrant.sdk.Command.Flag
	85,  // 37: hashicorp.vagrant.sdk.Command.Arguments.flags:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag
	2,   // 38: hashicorp.vagrant.sdk.Command.Arguments.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	23,  // 39: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.machine:type_name -> hashicorp.vagrant.sdk.Args.Machine
	25,  // 40: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.options:type_name -> hashicorp.vagrant.sdk.Args.LabelSet
	48,  // 41: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	142, // 42: hashicorp.vagrant.sdk.Guest.Capability.Resp.result:type_name -> google.protobuf.Any
	142, // 43: hashicorp.vagrant.sdk.Host.Capability.Resp.result:type_name -> google.protobuf.Any
	105, // 44: hashicorp.vagrant.sdk.Machine.SetNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 45: hashicorp.vagrant.sdk.Machine.GetNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 46: hashicorp.vagrant.sdk.Machine.SetIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 47: hashicorp.vagrant.sdk.Machine.GetIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 48: hashicorp.vagrant.sdk.Machine.SetStateRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	32,  // 49: hashicorp.vagrant.sdk.Machine.SetStateRequest.state:type_name -> hashicorp.vagrant.sdk.Args.MachineState
	105, // 50: hashicorp.vagrant.sdk.Machine.GetStateRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	32,  // 51: hashicorp.vagrant.sdk.Machine.GetStateResponse.state:type_name -> hashicorp.vagrant.sdk.Args.MachineState
	105, // 52: hashicorp.vagrant.sdk.Machine.GetUUIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 53: hashicorp.vagrant.sdk.Machine.SetUUIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 54: hashicorp.vagrant.sdk.Machine.BoxRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	21,  // 55: hashicorp.vagrant.sdk.Machine.BoxResponse.box:type_name -> hashicorp.vagrant.sdk.Args.Box
	105, // 56: hashicorp.vagrant.sdk.Machine.DatadirRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	37,  // 57: hashicorp.vagrant.sdk.Machine.DatadirResponse.datadir:type_name -> hashicorp.vagrant.sdk.Args.DataDir.Machine
	105, // 58: hashicorp.vagrant.sdk.Machine.LocalDataPathRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 59: hashicorp.vagrant.sdk.Machine.ProviderRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 60: hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 61: hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	105, // 62: hashicorp.vagrant.sdk.Machine.UpdatedAtRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	145, // 63: hashicorp.vagrant.sdk.Machine.UpdatedAtResponse.updated_at:type_name -> google.protobuf.Timestamp
	105, // 64: hashicorp.vagrant.sdk.Machine.UIRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	30,  // 65: hashicorp.vagrant.sdk.Machine.UIResponse.ui:type_name -> hashicorp.vagrant.sdk.Args.TerminalUI
	104, // 66: hashicorp.vagrant.sdk.Environment.ActiveMachinesRequest.env:type_name -> hashicorp.vagrant.sdk.Ref.Environment
	138, // 67: hashicorp.vagrant.sdk.Environment.ActiveMachinesResponse.machines:type_name -> hashicorp.vagrant.sdk.Environment.MachineAndProvider
	57,  // 68: hashicorp.vagrant.sdk.TerminalUIService.Output:input_type -> hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	59,  // 69: hashicorp.vagrant.sdk.TerminalUIService.Events:input_type -> hashicorp.vagrant.sdk.TerminalUI.Event
	146, // 70: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:input_type -> google.protobuf.Empty
	146, // 71: hashicorp.vagrant.sdk.Mapper.ListMappers:input_type -> google.protobuf.Empty
	72,  // 72: hashicorp.vagrant.sdk.Mapper.Map:input_type -> hashicorp.vagrant.sdk.Map.Request
	48,  // 73: hashicorp.vagrant.sdk.ProviderService.Usable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 74: hashicorp.vagrant.sdk.ProviderService.UsableSpec:input_type -> google.protobuf.Empty
	48,  // 75: hashicorp.vagrant.sdk.ProviderService.Installed:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 76: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:input_type -> google.protobuf.Empty
	48,  // 77: hashicorp.vagrant.sdk.ProviderService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 78: hashicorp.vagrant.sdk.ProviderService.InitSpec:input_type -> google.protobuf.Empty
	48,  // 79: hashicorp.vagrant.sdk.ProviderService.ActionUp:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 80: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:input_type -> google.protobuf.Empty
	146, // 81: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 82: hashicorp.vagrant.sdk.ProviderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 83: hashicorp.vagrant.sdk.ProviderService.Documentation:input_type -> google.protobuf.Empty
	146, // 84: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 85: hashicorp.vagrant.sdk.ProvisionerService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 86: hashicorp.vagrant.sdk.ProvisionerService.Documentation:input_type -> google.protobuf.Empty
	146, // 87: hashicorp.vagrant.sdk.CommandService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 88: hashicorp.vagrant.sdk.CommandService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 89: hashicorp.vagrant.sdk.CommandService.Documentation:input_type -> google.protobuf.Empty
	146, // 90: hashicorp.vagrant.sdk.CommandService.SynopsisSpec:input_type -> google.protobuf.Empty
	48,  // 91: hashicorp.vagrant.sdk.CommandService.Synopsis:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 92: hashicorp.vagrant.sdk.CommandService.HelpSpec:input_type -> google.protobuf.Empty
	48,  // 93: hashicorp.vagrant.sdk.CommandService.Help:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 94: hashicorp.vagrant.sdk.CommandService.FlagsSpec:input_type -> google.protobuf.Empty
	48,  // 95: hashicorp.vagrant.sdk.CommandService.Flags:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 96: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:input_type -> google.protobuf.Empty
	48,  // 97: hashicorp.vagrant.sdk.CommandService.Execute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 98: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 99: hashicorp.vagrant.sdk.CommunicatorService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 100: hashicorp.vagrant.sdk.CommunicatorService.Documentation:input_type -> google.protobuf.Empty
	146, // 101: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:input_type -> google.protobuf.Empty
	48,  // 102: hashicorp.vagrant.sdk.CommunicatorService.Match:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 103: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:input_type -> google.protobuf.Empty
	48,  // 104: hashicorp.vagrant.sdk.CommunicatorService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 105: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:input_type -> google.protobuf.Empty
	48,  // 106: hashicorp.vagrant.sdk.CommunicatorService.Ready:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 107: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:input_type -> google.protobuf.Empty
	48,  // 108: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 109: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:input_type -> google.protobuf.Empty
	48,  // 110: hashicorp.vagrant.sdk.CommunicatorService.Download:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 111: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:input_type -> google.protobuf.Empty
	48,  // 112: hashicorp.vagrant.sdk.CommunicatorService.Upload:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 113: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:input_type -> google.protobuf.Empty
	48,  // 114: hashicorp.vagrant.sdk.CommunicatorService.Execute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 115: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:input_type -> google.protobuf.Empty
	48,  // 116: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 117: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:input_type -> google.protobuf.Empty
	48,  // 118: hashicorp.vagrant.sdk.CommunicatorService.Test:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 119: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:input_type -> google.protobuf.Empty
	48,  // 120: hashicorp.vagrant.sdk.CommunicatorService.Reset:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 121: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 122: hashicorp.vagrant.sdk.ConfigService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 123: hashicorp.vagrant.sdk.ConfigService.Documentation:input_type -> google.protobuf.Empty
	146, // 124: hashicorp.vagrant.sdk.GuestService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 125: hashicorp.vagrant.sdk.GuestService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 126: hashicorp.vagrant.sdk.GuestService.Documentation:input_type -> google.protobuf.Empty
	48,  // 127: hashicorp.vagrant.sdk.GuestService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 128: hashicorp.vagrant.sdk.GuestService.DetectSpec:input_type -> google.protobuf.Empty
	96,  // 129: hashicorp.vagrant.sdk.GuestService.HasCapability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	96,  // 130: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	96,  // 131: hashicorp.vagrant.sdk.GuestService.Capability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	96,  // 132: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	146, // 133: hashicorp.vagrant.sdk.HostService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 134: hashicorp.vagrant.sdk.HostService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 135: hashicorp.vagrant.sdk.HostService.Documentation:input_type -> google.protobuf.Empty
	48,  // 136: hashicorp.vagrant.sdk.HostService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	146, // 137: hashicorp.vagrant.sdk.HostService.DetectSpec:input_type -> google.protobuf.Empty
	146, // 138: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:input_type -> google.protobuf.Empty
	49,  // 139: hashicorp.vagrant.sdk.SyncedFolderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	146, // 140: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:input_type -> google.protobuf.Empty
	106, // 141: hashicorp.vagrant.sdk.MachineService.SetName:input_type -> hashicorp.vagrant.sdk.Machine.SetNameRequest
	108, // 142: hashicorp.vagrant.sdk.MachineService.GetName:input_type -> hashicorp.vagrant.sdk.Machine.GetNameRequest
	110, // 143: hashicorp.vagrant.sdk.MachineService.SetID:input_type -> hashicorp.vagrant.sdk.Machine.SetIDRequest
	112, // 144: hashicorp.vagrant.sdk.MachineService.GetID:input_type -> hashicorp.vagrant.sdk.Machine.GetIDRequest
	114, // 145: hashicorp.vagrant.sdk.MachineService.SetState:input_type -> hashicorp.vagrant.sdk.Machine.SetStateRequest
	116, // 146: hashicorp.vagrant.sdk.MachineService.GetState:input_type -> hashicorp.vagrant.sdk.Machine.GetStateRequest
	120, // 147: hashicorp.vagrant.sdk.MachineService.SetUUID:input_type -> hashicorp.vagrant.sdk.Machine.SetUUIDRequest
	118, // 148: hashicorp.vagrant.sdk.MachineService.GetUUID:input_type -> hashicorp.vagrant.sdk.Machine.GetUUIDRequest
	122, // 149: hashicorp.vagrant.sdk.MachineService.Box:input_type -> hashicorp.vagrant.sdk.Machine.BoxRequest
	124, // 150: hashicorp.vagrant.sdk.MachineService.Datadir:input_type -> hashicorp.vagrant.sdk.Machine.DatadirRequest
	126, // 151: hashicorp.vagrant.sdk.MachineService.LocalDataPath:input_type -> hashicorp.vagrant.sdk.Machine.LocalDataPathRequest
	128, // 152: hashicorp.vagrant.sdk.MachineService.Provider:input_type -> hashicorp.vagrant.sdk.Machine.ProviderRequest
	130, // 153: hashicorp.vagrant.sdk.MachineService.VagrantfileName:input_type -> hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest
	132, // 154: hashicorp.vagrant.sdk.MachineService.VagrantfilePath:input_type -> hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest
	134, // 155: hashicorp.vagrant.sdk.MachineService.UpdatedAt:input_type -> hashicorp.vagrant.sdk.Machine.UpdatedAtRequest
	136, // 156: hashicorp.vagrant.sdk.MachineService.UI:input_type -> hashicorp.vagrant.sdk.Machine.UIRequest
	146, // 157: hashicorp.vagrant.sdk.EnvironmentService.MachineNames:input_type -> google.protobuf.Empty
	140, // 158: hashicorp.vagrant.sdk.EnvironmentService.ActiveMachines:input_type -> hashicorp.vagrant.sdk.Environment.ActiveMachinesRequest
	146, // 159: hashicorp.vagrant.sdk.TerminalUIService.Output:output_type -> google.protobuf.Empty
	58,  // 160: hashicorp.vagrant.sdk.TerminalUIService.Events:output_type -> hashicorp.vagrant.sdk.TerminalUI.Response
	56,  // 161: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:output_type -> hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	74,  // 162: hashicorp.vagrant.sdk.Mapper.ListMappers:output_type -> hashicorp.vagrant.sdk.Map.ListResponse
	73,  // 163: hashicorp.vagrant.sdk.Mapper.Map:output_type -> hashicorp.vagrant.sdk.Map.Response
	75,  // 164: hashicorp.vagrant.sdk.ProviderService.Usable:output_type -> hashicorp.vagrant.sdk.Provider.UsableResp
	4,   // 165: hashicorp.vagrant.sdk.ProviderService.UsableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	76,  // 166: hashicorp.vagrant.sdk.ProviderService.Installed:output_type -> hashicorp.vagrant.sdk.Provider.InstalledResp
	4,   // 167: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	146, // 168: hashicorp.vagrant.sdk.ProviderService.Init:output_type -> google.protobuf.Empty
	4,   // 169: hashicorp.vagrant.sdk.ProviderService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	77,  // 170: hashicorp.vagrant.sdk.ProviderService.ActionUp:output_type -> hashicorp.vagrant.sdk.Provider.ActionResp
	4,   // 171: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	50,  // 172: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 173: hashicorp.vagrant.sdk.ProviderService.Configure:output_type -> google.protobuf.Empty
	53,  // 174: hashicorp.vagrant.sdk.ProviderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	50,  // 175: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 176: hashicorp.vagrant.sdk.ProvisionerService.Configure:output_type -> google.protobuf.Empty
	53,  // 177: hashicorp.vagrant.sdk.ProvisionerService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	50,  // 178: hashicorp.vagrant.sdk.CommandService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 179: hashicorp.vagrant.sdk.CommandService.Configure:output_type -> google.protobuf.Empty
	53,  // 180: hashicorp.vagrant.sdk.CommandService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	4,   // 181: hashicorp.vagrant.sdk.CommandService.SynopsisSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	81,  // 182: hashicorp.vagrant.sdk.CommandService.Synopsis:output_type -> hashicorp.vagrant.sdk.Command.SynopsisResp
	4,   // 183: hashicorp.vagrant.sdk.CommandService.HelpSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	80,  // 184: hashicorp.vagrant.sdk.CommandService.Help:output_type -> hashicorp.vagrant.sdk.Command.HelpResp
	4,   // 185: hashicorp.vagrant.sdk.CommandService.FlagsSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	82,  // 186: hashicorp.vagrant.sdk.CommandService.Flags:output_type -> hashicorp.vagrant.sdk.Command.FlagsResp
	4,   // 187: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	83,  // 188: hashicorp.vagrant.sdk.CommandService.Execute:output_type -> hashicorp.vagrant.sdk.Command.ExecuteResp
	50,  // 189: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 190: hashicorp.vagrant.sdk.CommunicatorService.Configure:output_type -> google.protobuf.Empty
	53,  // 191: hashicorp.vagrant.sdk.CommunicatorService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	4,   // 192: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	86,  // 193: hashicorp.vagrant.sdk.CommunicatorService.Match:output_type -> hashicorp.vagrant.sdk.Communicator.MatchResp
	4,   // 194: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	87,  // 195: hashicorp.vagrant.sdk.CommunicatorService.Init:output_type -> hashicorp.vagrant.sdk.Communicator.InitResp
	4,   // 196: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	88,  // 197: hashicorp.vagrant.sdk.CommunicatorService.Ready:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	4,   // 198: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	88,  // 199: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	4,   // 200: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	89,  // 201: hashicorp.vagrant.sdk.CommunicatorService.Download:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	4,   // 202: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	89,  // 203: hashicorp.vagrant.sdk.CommunicatorService.Upload:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	4,   // 204: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	91,  // 205: hashicorp.vagrant.sdk.CommunicatorService.Execute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	4,   // 206: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	91,  // 207: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	4,   // 208: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	92,  // 209: hashicorp.vagrant.sdk.CommunicatorService.Test:output_type -> hashicorp.vagrant.sdk.Communicator.TestResp
	4,   // 210: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	93,  // 211: hashicorp.vagrant.sdk.CommunicatorService.Reset:output_type -> hashicorp.vagrant.sdk.Communicator.ResetResp
	50,  // 212: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 213: hashicorp.vagrant.sdk.ConfigService.Configure:output_type -> google.protobuf.Empty
	53,  // 214: hashicorp.vagrant.sdk.ConfigService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	50,  // 215: hashicorp.vagrant.sdk.GuestService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 216: hashicorp.vagrant.sdk.GuestService.Configure:output_type -> google.protobuf.Empty
	53,  // 217: hashicorp.vagrant.sdk.GuestService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	94,  // 218: hashicorp.vagrant.sdk.GuestService.Detect:output_type -> hashicorp.vagrant.sdk.Guest.DetectResp
	4,   // 219: hashicorp.vagrant.sdk.GuestService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	97,  // 220: hashicorp.vagrant.sdk.GuestService.HasCapability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	4,   // 221: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	98,  // 222: hashicorp.vagrant.sdk.GuestService.Capability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.Resp
	4,   // 223: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	50,  // 224: hashicorp.vagrant.sdk.HostService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 225: hashicorp.vagrant.sdk.HostService.Configure:output_type -> google.protobuf.Empty
	53,  // 226: hashicorp.vagrant.sdk.HostService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	99,  // 227: hashicorp.vagrant.sdk.HostService.Detect:output_type -> hashicorp.vagrant.sdk.Host.DetectResp
	4,   // 228: hashicorp.vagrant.sdk.HostService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	50,  // 229: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	146, // 230: hashicorp.vagrant.sdk.SyncedFolderService.Configure:output_type -> google.protobuf.Empty
	53,  // 231: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	107, // 232: hashicorp.vagrant.sdk.MachineService.SetName:output_type -> hashicorp.vagrant.sdk.Machine.SetNameResponse
	109, // 233: hashicorp.vagrant.sdk.MachineService.GetName:output_type -> hashicorp.vagrant.sdk.Machine.GetNameResponse
	111, // 234: hashicorp.vagrant.sdk.MachineService.SetID:output_type -> hashicorp.vagrant.sdk.Machine.SetIDResponse
	113, // 235: hashicorp.vagrant.sdk.MachineService.GetID:output_type -> hashicorp.vagrant.sdk.Machine.GetIDResponse
	115, // 236: hashicorp.vagrant.sdk.MachineService.SetState:output_type -> hashicorp.vagrant.sdk.Machine.SetStateResponse
	117, // 237: hashicorp.vagrant.sdk.MachineService.GetState:output_type -> hashicorp.vagrant.sdk.Machine.GetStateResponse
	121, // 238: hashicorp.vagrant.sdk.MachineService.SetUUID:output_type -> hashicorp.vagrant.sdk.Machine.SetUUIDResponse
	119, // 239: hashicorp.vagrant.sdk.MachineService.GetUUID:output_type -> hashicorp.vagrant.sdk.Machine.GetUUIDResponse
	123, // 240: hashicorp.vagrant.sdk.MachineService.Box:output_type -> hashicorp.vagrant.sdk.Machine.BoxResponse
	125, // 241: hashicorp.vagrant.sdk.MachineService.Datadir:output_type -> hashicorp.vagrant.sdk.Machine.DatadirResponse
	127, // 242: hashicorp.vagrant.sdk.MachineService.LocalDataPath:output_type -> hashicorp.vagrant.sdk.Machine.LocalDataPathResponse
	129, // 243: hashicorp.vagrant.sdk.MachineService.Provider:output_type -> hashicorp.vagrant.sdk.Machine.ProviderResponse
	131, // 244: hashicorp.vagrant.sdk.MachineService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Machine.VagrantfileNameResponse
	133, // 245: hashicorp.vagrant.sdk.MachineService.VagrantfilePath:output_type -> hashicorp.vagrant.sdk.Machine.VagrantfilePathResponse
	135, // 246: hashicorp.vagrant.sdk.MachineService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Machine.UpdatedAtResponse
	137, // 247: hashicorp.vagrant.sdk.MachineService.UI:output_type -> hashicorp.vagrant.sdk.Machine.UIResponse
	139, // 248: hashicorp.vagrant.sdk.EnvironmentService.MachineNames:output_type -> hashicorp.vagrant.sdk.Environment.MachineNamesResponse
	141, // 249: hashicorp.vagrant.sdk.EnvironmentService.ActiveMachines:output_type -> hashicorp.vagrant.sdk.Environment.ActiveMachinesResponse
	159, // [159:250] is the sub-list for method output_type
	68,  // [68:159] is the sub-list for method input_type
	68,  // [68:68] is the sub-list for extension type_name
	68,  // [68:68] is the sub-list for extension extendee
	0,   // [0:68] is the sub-list for field type_name
}

func init() { file_vagrant_plugin_sdk_plugin_proto_init() }
func file_vagrant_plugin_sdk_plugin_proto_init() {
	if File_vagrant_plugin_sdk_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImplementsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MachineIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_BoxCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_LabelSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Vagrantfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_JobInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Logger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TerminalUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MachineState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_SSHInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_WinrmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Basis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MachineIndex_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration_Vagrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration_VM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration_Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_ConfigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_StructResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_FieldDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MapperDocumentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Documentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth_AuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_IsInteractiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_OutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_InputResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Line); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Raw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_StepGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Step); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_UsableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_InstalledResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_ActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Flag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_HelpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_SynopsisResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_FlagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments_Flag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_MatchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_InitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ReadyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_FileTransferResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecuteResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_TestResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ResetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_DetectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_NamedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_CheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_DetectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_CheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Box); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Environment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetUUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetUUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetUUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_BoxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_BoxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_DatadirRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_DatadirResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_LocalDataPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_LocalDataPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_ProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_ProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfileNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfileNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfilePathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfilePathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UpdatedAtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UpdatedAtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment_MachineAndProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment_MachineNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment_ActiveMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Environment_ActiveMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*Args_StateBag_Value_Text)(nil),
		(*Args_StateBag_Value_Map)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].OneofWrappers = []interface{}{
		(*TerminalUI_Response_Input)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*TerminalUI_Event_Line_)(nil),
		(*TerminalUI_Event_Status_)(nil),
		(*TerminalUI_Event_NamedValues_)(nil),
		(*TerminalUI_Event_Raw_)(nil),
		(*TerminalUI_Event_Table_)(nil),
		(*TerminalUI_Event_StepGroup_)(nil),
		(*TerminalUI_Event_Step_)(nil),
		(*TerminalUI_Event_Input_)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[82].OneofWrappers = []interface{}{
		(*Command_Arguments_Flag_String_)(nil),
		(*Command_Arguments_Flag_Bool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vagrant_plugin_sdk_plugin_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   139,
			NumExtensions: 0,
			NumServices:   12,
		},
		GoTypes:           file_vagrant_plugin_sdk_plugin_proto_goTypes,
		DependencyIndexes: file_vagrant_plugin_sdk_plugin_proto_depIdxs,
		EnumInfos:         file_vagrant_plugin_sdk_plugin_proto_enumTypes,
		MessageInfos:      file_vagrant_plugin_sdk_plugin_proto_msgTypes,
	}.Build()
	File_vagrant_plugin_sdk_plugin_proto = out.File
	file_vagrant_plugin_sdk_plugin_proto_rawDesc = nil
	file_vagrant_plugin_sdk_plugin_proto_goTypes = nil
	file_vagrant_plugin_sdk_plugin_proto_depIdxs = nil
}
