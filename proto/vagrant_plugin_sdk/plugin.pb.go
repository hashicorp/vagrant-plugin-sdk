// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: vagrant_plugin_sdk/plugin.proto

package vagrant_plugin_sdk

import (
	proto "github.com/golang/protobuf/proto"
	protostructure "github.com/mitchellh/protostructure"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Args_JobInfo_ResourceType int32

const (
	Args_JobInfo_BASIS   Args_JobInfo_ResourceType = 0
	Args_JobInfo_PROJECT Args_JobInfo_ResourceType = 1
	Args_JobInfo_TARGET  Args_JobInfo_ResourceType = 2
)

// Enum value maps for Args_JobInfo_ResourceType.
var (
	Args_JobInfo_ResourceType_name = map[int32]string{
		0: "BASIS",
		1: "PROJECT",
		2: "TARGET",
	}
	Args_JobInfo_ResourceType_value = map[string]int32{
		"BASIS":   0,
		"PROJECT": 1,
		"TARGET":  2,
	}
)

func (x Args_JobInfo_ResourceType) Enum() *Args_JobInfo_ResourceType {
	p := new(Args_JobInfo_ResourceType)
	*p = x
	return p
}

func (x Args_JobInfo_ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_JobInfo_ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[0].Descriptor()
}

func (Args_JobInfo_ResourceType) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[0]
}

func (x Args_JobInfo_ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_JobInfo_ResourceType.Descriptor instead.
func (Args_JobInfo_ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 4, 0}
}

type Args_Target_State_State int32

const (
	Args_Target_State_UNKNOWN   Args_Target_State_State = 0
	Args_Target_State_PENDING   Args_Target_State_State = 1
	Args_Target_State_CREATED   Args_Target_State_State = 2
	Args_Target_State_DESTROYED Args_Target_State_State = 3
)

// Enum value maps for Args_Target_State_State.
var (
	Args_Target_State_State_name = map[int32]string{
		0: "UNKNOWN",
		1: "PENDING",
		2: "CREATED",
		3: "DESTROYED",
	}
	Args_Target_State_State_value = map[string]int32{
		"UNKNOWN":   0,
		"PENDING":   1,
		"CREATED":   2,
		"DESTROYED": 3,
	}
)

func (x Args_Target_State_State) Enum() *Args_Target_State_State {
	p := new(Args_Target_State_State)
	*p = x
	return p
}

func (x Args_Target_State_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Args_Target_State_State) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[1].Descriptor()
}

func (Args_Target_State_State) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[1]
}

func (x Args_Target_State_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Args_Target_State_State.Descriptor instead.
func (Args_Target_State_State) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 0, 0}
}

type WinrmInfo_Transport int32

const (
	WinrmInfo_NEGOTIATE WinrmInfo_Transport = 0 // default
	WinrmInfo_SSL       WinrmInfo_Transport = 1
	WinrmInfo_PLAINTEXT WinrmInfo_Transport = 2
)

// Enum value maps for WinrmInfo_Transport.
var (
	WinrmInfo_Transport_name = map[int32]string{
		0: "NEGOTIATE",
		1: "SSL",
		2: "PLAINTEXT",
	}
	WinrmInfo_Transport_value = map[string]int32{
		"NEGOTIATE": 0,
		"SSL":       1,
		"PLAINTEXT": 2,
	}
)

func (x WinrmInfo_Transport) Enum() *WinrmInfo_Transport {
	p := new(WinrmInfo_Transport)
	*p = x
	return p
}

func (x WinrmInfo_Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WinrmInfo_Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[2].Descriptor()
}

func (WinrmInfo_Transport) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[2]
}

func (x WinrmInfo_Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WinrmInfo_Transport.Descriptor instead.
func (WinrmInfo_Transport) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{4, 0}
}

type Command_Flag_Type int32

const (
	Command_Flag_STRING Command_Flag_Type = 0
	Command_Flag_BOOL   Command_Flag_Type = 2
)

// Enum value maps for Command_Flag_Type.
var (
	Command_Flag_Type_name = map[int32]string{
		0: "STRING",
		2: "BOOL",
	}
	Command_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   2,
	}
)

func (x Command_Flag_Type) Enum() *Command_Flag_Type {
	p := new(Command_Flag_Type)
	*p = x
	return p
}

func (x Command_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[3].Descriptor()
}

func (Command_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[3]
}

func (x Command_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Flag_Type.Descriptor instead.
func (Command_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 0, 0}
}

type Command_Arguments_Flag_Type int32

const (
	Command_Arguments_Flag_STRING Command_Arguments_Flag_Type = 0
	Command_Arguments_Flag_BOOL   Command_Arguments_Flag_Type = 1
)

// Enum value maps for Command_Arguments_Flag_Type.
var (
	Command_Arguments_Flag_Type_name = map[int32]string{
		0: "STRING",
		1: "BOOL",
	}
	Command_Arguments_Flag_Type_value = map[string]int32{
		"STRING": 0,
		"BOOL":   1,
	}
)

func (x Command_Arguments_Flag_Type) Enum() *Command_Arguments_Flag_Type {
	p := new(Command_Arguments_Flag_Type)
	*p = x
	return p
}

func (x Command_Arguments_Flag_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Arguments_Flag_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_vagrant_plugin_sdk_plugin_proto_enumTypes[4].Descriptor()
}

func (Command_Arguments_Flag_Type) Type() protoreflect.EnumType {
	return &file_vagrant_plugin_sdk_plugin_proto_enumTypes[4]
}

func (x Command_Arguments_Flag_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Arguments_Flag_Type.Descriptor instead.
func (Command_Arguments_Flag_Type) EnumDescriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 6, 0, 0}
}

// Args are the common argument types that are available to many of the
// dynamic functions. The exact list of available argument types is available
// on the Go interface docs.
type Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args) Reset() {
	*x = Args{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args) ProtoMessage() {}

func (x *Args) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args.ProtoReflect.Descriptor instead.
func (*Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0}
}

///////
type TargetIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TargetIndex) Reset() {
	*x = TargetIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex) ProtoMessage() {}

func (x *TargetIndex) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex.ProtoReflect.Descriptor instead.
func (*TargetIndex) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1}
}

type BoxCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
}

func (x *BoxCollection) Reset() {
	*x = BoxCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoxCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoxCollection) ProtoMessage() {}

func (x *BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoxCollection.ProtoReflect.Descriptor instead.
func (*BoxCollection) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *BoxCollection) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type SSHInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host              string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port              string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	PrivateKeyPath    string   `protobuf:"bytes,3,opt,name=private_key_path,json=privateKeyPath,proto3" json:"private_key_path,omitempty"`
	KeysOnly          bool     `protobuf:"varint,4,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	VerifyHostKey     bool     `protobuf:"varint,5,opt,name=verify_host_key,json=verifyHostKey,proto3" json:"verify_host_key,omitempty"`
	Username          string   `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	RemoteUser        string   `protobuf:"bytes,7,opt,name=remote_user,json=remoteUser,proto3" json:"remote_user,omitempty"`
	Compression       bool     `protobuf:"varint,8,opt,name=compression,proto3" json:"compression,omitempty"`
	DsaAuthentication bool     `protobuf:"varint,9,opt,name=dsa_authentication,json=dsaAuthentication,proto3" json:"dsa_authentication,omitempty"`
	Config            string   `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
	ExtraArgs         []string `protobuf:"bytes,11,rep,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	ForwardAgent      bool     `protobuf:"varint,12,opt,name=forward_agent,json=forwardAgent,proto3" json:"forward_agent,omitempty"`
	ForwardX11        bool     `protobuf:"varint,13,opt,name=forward_x11,json=forwardX11,proto3" json:"forward_x11,omitempty"`
	ForwardEnv        []string `protobuf:"bytes,14,rep,name=forward_env,json=forwardEnv,proto3" json:"forward_env,omitempty"`
	ConnectTimeout    int64    `protobuf:"varint,15,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	SshCommand        string   `protobuf:"bytes,16,opt,name=ssh_command,json=sshCommand,proto3" json:"ssh_command,omitempty"`
	ProxyCommand      string   `protobuf:"bytes,17,opt,name=proxy_command,json=proxyCommand,proto3" json:"proxy_command,omitempty"`
}

func (x *SSHInfo) Reset() {
	*x = SSHInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHInfo) ProtoMessage() {}

func (x *SSHInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHInfo.ProtoReflect.Descriptor instead.
func (*SSHInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *SSHInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SSHInfo) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SSHInfo) GetPrivateKeyPath() string {
	if x != nil {
		return x.PrivateKeyPath
	}
	return ""
}

func (x *SSHInfo) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

func (x *SSHInfo) GetVerifyHostKey() bool {
	if x != nil {
		return x.VerifyHostKey
	}
	return false
}

func (x *SSHInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SSHInfo) GetRemoteUser() string {
	if x != nil {
		return x.RemoteUser
	}
	return ""
}

func (x *SSHInfo) GetCompression() bool {
	if x != nil {
		return x.Compression
	}
	return false
}

func (x *SSHInfo) GetDsaAuthentication() bool {
	if x != nil {
		return x.DsaAuthentication
	}
	return false
}

func (x *SSHInfo) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *SSHInfo) GetExtraArgs() []string {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

func (x *SSHInfo) GetForwardAgent() bool {
	if x != nil {
		return x.ForwardAgent
	}
	return false
}

func (x *SSHInfo) GetForwardX11() bool {
	if x != nil {
		return x.ForwardX11
	}
	return false
}

func (x *SSHInfo) GetForwardEnv() []string {
	if x != nil {
		return x.ForwardEnv
	}
	return nil
}

func (x *SSHInfo) GetConnectTimeout() int64 {
	if x != nil {
		return x.ConnectTimeout
	}
	return 0
}

func (x *SSHInfo) GetSshCommand() string {
	if x != nil {
		return x.SshCommand
	}
	return ""
}

func (x *SSHInfo) GetProxyCommand() string {
	if x != nil {
		return x.ProxyCommand
	}
	return ""
}

type WinrmInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username            string              `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password            string              `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Host                string              `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                int64               `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	GuestPort           int64               `protobuf:"varint,5,opt,name=guest_port,json=guestPort,proto3" json:"guest_port,omitempty"`
	MaxTries            int64               `protobuf:"varint,6,opt,name=max_tries,json=maxTries,proto3" json:"max_tries,omitempty"`
	RetryDelay          int64               `protobuf:"varint,7,opt,name=retry_delay,json=retryDelay,proto3" json:"retry_delay,omitempty"`
	Timeout             int64               `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Transport           WinrmInfo_Transport `protobuf:"varint,9,opt,name=transport,proto3,enum=hashicorp.vagrant.sdk.WinrmInfo_Transport" json:"transport,omitempty"`
	SslPeerVerification bool                `protobuf:"varint,10,opt,name=ssl_peer_verification,json=sslPeerVerification,proto3" json:"ssl_peer_verification,omitempty"`
	ExecutionTimeLimit  string              `protobuf:"bytes,11,opt,name=execution_time_limit,json=executionTimeLimit,proto3" json:"execution_time_limit,omitempty"`
	BasicAuthOnly       bool                `protobuf:"varint,12,opt,name=basic_auth_only,json=basicAuthOnly,proto3" json:"basic_auth_only,omitempty"`
	Codepage            string              `protobuf:"bytes,13,opt,name=codepage,proto3" json:"codepage,omitempty"`
}

func (x *WinrmInfo) Reset() {
	*x = WinrmInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WinrmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinrmInfo) ProtoMessage() {}

func (x *WinrmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinrmInfo.ProtoReflect.Descriptor instead.
func (*WinrmInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{4}
}

func (x *WinrmInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WinrmInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *WinrmInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *WinrmInfo) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *WinrmInfo) GetGuestPort() int64 {
	if x != nil {
		return x.GuestPort
	}
	return 0
}

func (x *WinrmInfo) GetMaxTries() int64 {
	if x != nil {
		return x.MaxTries
	}
	return 0
}

func (x *WinrmInfo) GetRetryDelay() int64 {
	if x != nil {
		return x.RetryDelay
	}
	return 0
}

func (x *WinrmInfo) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *WinrmInfo) GetTransport() WinrmInfo_Transport {
	if x != nil {
		return x.Transport
	}
	return WinrmInfo_NEGOTIATE
}

func (x *WinrmInfo) GetSslPeerVerification() bool {
	if x != nil {
		return x.SslPeerVerification
	}
	return false
}

func (x *WinrmInfo) GetExecutionTimeLimit() string {
	if x != nil {
		return x.ExecutionTimeLimit
	}
	return ""
}

func (x *WinrmInfo) GetBasicAuthOnly() bool {
	if x != nil {
		return x.BasicAuthOnly
	}
	return false
}

func (x *WinrmInfo) GetCodepage() string {
	if x != nil {
		return x.Codepage
	}
	return ""
}

// FuncSpec describes a function and is used by the dependency-injection
// framework to provide the function with the proper values.
//
// Value types are specified using strings. Built-in framework types
// are defined via constants in the `sdk` package. For custom types, you
// can use whatever string as long as it is unique. We recommend using a
// unique prefix plus the Go type name.
type FuncSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the function. This is used for improved logging.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// args is the list of arguments by protobuf Any types.
	Args []*FuncSpec_Value `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// result are the resulting types that are made available. This is only
	// critically important to be set for functions that may chain to other
	// functions. It can be set to blank in which case it will not be used.
	Result []*FuncSpec_Value `protobuf:"bytes,3,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *FuncSpec) Reset() {
	*x = FuncSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec) ProtoMessage() {}

func (x *FuncSpec) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec.ProtoReflect.Descriptor instead.
func (*FuncSpec) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *FuncSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *FuncSpec) GetResult() []*FuncSpec_Value {
	if x != nil {
		return x.Result
	}
	return nil
}

// Config is the namespace of messages related to configuration.
//
// All components that take configuration are expected to have two RPC calls:
//
//   * ConfigStruct - Returns the configuration structure.
//   * Configure - Sends the configuration data back to the plugin and the
//       plugin is also expected to perform any validation at this stage.
//   * Documentation - Returns a Documentation struct that details what configuration
//       is accepted, with documentation.
//
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6}
}

// Auth is the namespace of messages related to auth.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7}
}

// ImplementsResp returns true if the component implements an additional interface.
type ImplementsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Implements bool `protobuf:"varint,1,opt,name=implements,proto3" json:"implements,omitempty"`
}

func (x *ImplementsResp) Reset() {
	*x = ImplementsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImplementsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImplementsResp) ProtoMessage() {}

func (x *ImplementsResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImplementsResp.ProtoReflect.Descriptor instead.
func (*ImplementsResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *ImplementsResp) GetImplements() bool {
	if x != nil {
		return x.Implements
	}
	return false
}

type TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerminalUI) Reset() {
	*x = TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI) ProtoMessage() {}

func (x *TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI.ProtoReflect.Descriptor instead.
func (*TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9}
}

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10}
}

type StateBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag) Reset() {
	*x = StateBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag) ProtoMessage() {}

func (x *StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag.ProtoReflect.Descriptor instead.
func (*StateBag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11}
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13}
}

type Communicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator) Reset() {
	*x = Communicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator) ProtoMessage() {}

func (x *Communicator) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator.ProtoReflect.Descriptor instead.
func (*Communicator) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14}
}

<<<<<<< HEAD
type Guest struct {
=======
//******************************************************
// Vagrantfile message used with Vagrantfile service
//*****************************************************
type Vagrantfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Vagrantfile) Reset() {
	*x = Vagrantfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile) ProtoMessage() {}

func (x *Vagrantfile) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile.ProtoReflect.Descriptor instead.
func (*Vagrantfile) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15}
}

type Args_DataDir struct {
>>>>>>> Generate protos for Vagrantfile service
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Guest) Reset() {
	*x = Guest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[15]
=======
func (x *Args_DataDir) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest.ProtoReflect.Descriptor instead.
func (*Guest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15}
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[16]
=======
func (x *Args_MachineIndex) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16}
}

// Ref contains shared messages used for references to other resources.
//
// Refs should be used when the full type shouldn't be embedded in the message.
type Ref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ref) Reset() {
	*x = Ref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref) ProtoMessage() {}

<<<<<<< HEAD
func (x *Ref) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[17]
=======
func (x *Args_BoxCollection) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref.ProtoReflect.Descriptor instead.
func (*Ref) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17}
}

type Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Target) Reset() {
	*x = Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[18]
=======
func (x *Args_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18}
}

//******************************************************
// Project message used with Project service
//*****************************************************
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[19]
=======
func (x *Args_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19}
}

type Args_DataDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_DataDir) Reset() {
	*x = Args_DataDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_DataDir) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[20]
=======
func (x *Args_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir.ProtoReflect.Descriptor instead.
func (*Args_DataDir) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0}
}

type Args_MetadataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Args_MetadataSet) Reset() {
	*x = Args_MetadataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_MetadataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_MetadataSet) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_MetadataSet) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[21]
=======
func (x *Args_Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_MetadataSet.ProtoReflect.Descriptor instead.
func (*Args_MetadataSet) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Args_MetadataSet) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Args_TerminalUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_TerminalUI) Reset() {
	*x = Args_TerminalUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_TerminalUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_TerminalUI) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[22]
=======
func (x *Args_LabelSet) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_TerminalUI.ProtoReflect.Descriptor instead.
func (*Args_TerminalUI) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Args_TerminalUI) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_TerminalUI) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_TerminalUI) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Logger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Args_Logger) Reset() {
	*x = Args_Logger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Logger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Logger) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[23]
=======
func (x *Args_Options) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Logger.ProtoReflect.Descriptor instead.
func (*Args_Logger) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Args_Logger) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Args_JobInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Local        bool                      `protobuf:"varint,1,opt,name=local,proto3" json:"local,omitempty"`
	ResourceId   string                    `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	ResourceType Args_JobInfo_ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=hashicorp.vagrant.sdk.Args_JobInfo_ResourceType" json:"resource_type,omitempty"`
	Id           string                    `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Args_JobInfo) Reset() {
	*x = Args_JobInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_JobInfo) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[24]
=======
func (x *Args_Vagrantfile) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_JobInfo.ProtoReflect.Descriptor instead.
func (*Args_JobInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Args_JobInfo) GetLocal() bool {
	if x != nil {
		return x.Local
	}
	return false
}

func (x *Args_JobInfo) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Args_JobInfo) GetResourceType() Args_JobInfo_ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return Args_JobInfo_BASIS
}

func (x *Args_JobInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Args_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Basis) Reset() {
	*x = Args_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Basis) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[25]
=======
func (x *Args_JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Basis.ProtoReflect.Descriptor instead.
func (*Args_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Args_Basis) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Basis) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Basis) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Project) Reset() {
	*x = Args_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Project) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[26]
=======
func (x *Args_Logger) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Project.ProtoReflect.Descriptor instead.
func (*Args_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Args_Project) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Project) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Project) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Provider) Reset() {
	*x = Args_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Provider) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[27]
=======
func (x *Args_TerminalUI) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Provider.ProtoReflect.Descriptor instead.
func (*Args_Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 7}
}

func (x *Args_Provider) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Provider) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Provider) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generic target
	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Target) Reset() {
	*x = Args_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[28]
=======
func (x *Args_StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target.ProtoReflect.Descriptor instead.
func (*Args_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8}
}

func (x *Args_Target) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Target) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Target) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_StateBag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_StateBag) Reset() {
	*x = Args_StateBag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_StateBag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_StateBag) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_StateBag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[29]
=======
func (x *Args_MachineState) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_StateBag.ProtoReflect.Descriptor instead.
func (*Args_StateBag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 9}
}

func (x *Args_StateBag) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_StateBag) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_StateBag) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Host) Reset() {
	*x = Args_Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Host) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Host) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[30]
=======
func (x *Args_SSHInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Host.ProtoReflect.Descriptor instead.
func (*Args_Host) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 10}
}

func (x *Args_Host) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Host) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Host) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_NamedCapability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capability string `protobuf:"bytes,1,opt,name=Capability,proto3" json:"Capability,omitempty"`
}

func (x *Args_NamedCapability) Reset() {
	*x = Args_NamedCapability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_NamedCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_NamedCapability) ProtoMessage() {}

func (x *Args_NamedCapability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_NamedCapability.ProtoReflect.Descriptor instead.
func (*Args_NamedCapability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 11}
}

func (x *Args_NamedCapability) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

type Args_DataDir_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootDir  string `protobuf:"bytes,1,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	CacheDir string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Basis) Reset() {
	*x = Args_DataDir_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Basis) ProtoMessage() {}

func (x *Args_DataDir_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Basis.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Args_DataDir_Basis) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Basis) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootDir  string `protobuf:"bytes,1,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	CacheDir string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Project) Reset() {
	*x = Args_DataDir_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Project) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_DataDir_Project) ProtoReflect() protoreflect.Message {
=======
func (x *Args_WinrmInfo) ProtoReflect() protoreflect.Message {
>>>>>>> Generate protos for Vagrantfile service
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Project.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *Args_DataDir_Project) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Project) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootDir  string `protobuf:"bytes,1,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	CacheDir string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Target) Reset() {
	*x = Args_DataDir_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Target) ProtoMessage() {}

func (x *Args_DataDir_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Target.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *Args_DataDir_Target) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Target) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_DataDir_Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootDir  string `protobuf:"bytes,1,opt,name=root_dir,json=rootDir,proto3" json:"root_dir,omitempty"`
	CacheDir string `protobuf:"bytes,2,opt,name=cache_dir,json=cacheDir,proto3" json:"cache_dir,omitempty"`
	DataDir  string `protobuf:"bytes,3,opt,name=data_dir,json=dataDir,proto3" json:"data_dir,omitempty"`
	TempDir  string `protobuf:"bytes,4,opt,name=temp_dir,json=tempDir,proto3" json:"temp_dir,omitempty"`
}

func (x *Args_DataDir_Component) Reset() {
	*x = Args_DataDir_Component{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_DataDir_Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_DataDir_Component) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_DataDir_Component) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
=======
func (x *Args_DataDir_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[33]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_DataDir_Component.ProtoReflect.Descriptor instead.
func (*Args_DataDir_Component) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 0, 3}
}

func (x *Args_DataDir_Component) GetRootDir() string {
	if x != nil {
		return x.RootDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetCacheDir() string {
	if x != nil {
		return x.CacheDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetDataDir() string {
	if x != nil {
		return x.DataDir
	}
	return ""
}

func (x *Args_DataDir_Component) GetTempDir() string {
	if x != nil {
		return x.TempDir
	}
	return ""
}

type Args_Target_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State Args_Target_State_State `protobuf:"varint,1,opt,name=state,proto3,enum=hashicorp.vagrant.sdk.Args_Target_State_State" json:"state,omitempty"`
}

func (x *Args_Target_State) Reset() {
	*x = Args_Target_State{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_State) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Target_State) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
=======
func (x *Args_DataDir_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[34]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_State.ProtoReflect.Descriptor instead.
func (*Args_Target_State) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 0}
}

func (x *Args_Target_State) GetState() Args_Target_State_State {
	if x != nil {
		return x.State
	}
	return Args_Target_State_UNKNOWN
}

// Specialized targets
type Args_Target_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId uint32 `protobuf:"varint,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Network  string `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Target   string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Args_Target_Machine) Reset() {
	*x = Args_Target_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_Machine) ProtoMessage() {}

func (x *Args_Target_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_Machine.ProtoReflect.Descriptor instead.
func (*Args_Target_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 1}
}

func (x *Args_Target_Machine) GetStreamId() uint32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *Args_Target_Machine) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Args_Target_Machine) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Args_Target_Machine_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider    string            `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	Version     string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Directory   string            `protobuf:"bytes,4,opt,name=directory,proto3" json:"directory,omitempty"`
	Metadata    map[string]string `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MetadataUrl string            `protobuf:"bytes,6,opt,name=metadata_url,json=metadataUrl,proto3" json:"metadata_url,omitempty"`
}

func (x *Args_Target_Machine_Box) Reset() {
	*x = Args_Target_Machine_Box{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_Machine_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_Machine_Box) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Target_Machine_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[38]
=======
func (x *Args_DataDir_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[35]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_Machine_Box.ProtoReflect.Descriptor instead.
func (*Args_Target_Machine_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 1, 0}
}

func (x *Args_Target_Machine_Box) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Args_Target_Machine_Box) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Args_Target_Machine_Box) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Args_Target_Machine_Box) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *Args_Target_Machine_Box) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Args_Target_Machine_Box) GetMetadataUrl() string {
	if x != nil {
		return x.MetadataUrl
	}
	return ""
}

type Args_Target_Machine_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortDescription string `protobuf:"bytes,2,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string `protobuf:"bytes,3,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
}

func (x *Args_Target_Machine_State) Reset() {
	*x = Args_Target_Machine_State{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Target_Machine_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Target_Machine_State) ProtoMessage() {}

<<<<<<< HEAD
func (x *Args_Target_Machine_State) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
=======
func (x *Args_DataDir_Component) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[36]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Target_Machine_State.ProtoReflect.Descriptor instead.
func (*Args_Target_Machine_State) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 8, 1, 1}
}

func (x *Args_Target_Machine_State) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Args_Target_Machine_State) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Args_Target_Machine_State) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

type TargetIndex_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LocalDataPath   string            `protobuf:"bytes,2,opt,name=local_data_path,json=localDataPath,proto3" json:"local_data_path,omitempty"`
	Name            string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Provider        string            `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	State           string            `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	VagrantfileName string            `protobuf:"bytes,6,opt,name=vagrantfile_name,json=vagrantfileName,proto3" json:"vagrantfile_name,omitempty"`
	VagrantfilePath string            `protobuf:"bytes,7,opt,name=vagrantfile_path,json=vagrantfilePath,proto3" json:"vagrantfile_path,omitempty"`
	UpdatedAt       string            `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // TODO(spox): should we make this an int?
	ExtraData       map[string]string `protobuf:"bytes,9,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TargetIndex_Entry) Reset() {
	*x = TargetIndex_Entry{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[37]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetIndex_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetIndex_Entry) ProtoMessage() {}

<<<<<<< HEAD
func (x *TargetIndex_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
=======
func (x *Args_MachineIndex_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[37]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetIndex_Entry.ProtoReflect.Descriptor instead.
func (*TargetIndex_Entry) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TargetIndex_Entry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TargetIndex_Entry) GetLocalDataPath() string {
	if x != nil {
		return x.LocalDataPath
	}
	return ""
}

func (x *TargetIndex_Entry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TargetIndex_Entry) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TargetIndex_Entry) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TargetIndex_Entry) GetVagrantfileName() string {
	if x != nil {
		return x.VagrantfileName
	}
	return ""
}

func (x *TargetIndex_Entry) GetVagrantfilePath() string {
	if x != nil {
		return x.VagrantfilePath
	}
	return ""
}

func (x *TargetIndex_Entry) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TargetIndex_Entry) GetExtraData() map[string]string {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

<<<<<<< HEAD
=======
type Args_Configuration_Vagrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_Vagrant) Reset() {
	*x = Args_Configuration_Vagrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_Vagrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_Vagrant) ProtoMessage() {}

func (x *Args_Configuration_Vagrant) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_Vagrant.ProtoReflect.Descriptor instead.
func (*Args_Configuration_Vagrant) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 0}
}

type Args_Configuration_VM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_VM) Reset() {
	*x = Args_Configuration_VM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_VM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_VM) ProtoMessage() {}

func (x *Args_Configuration_VM) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_VM.ProtoReflect.Descriptor instead.
func (*Args_Configuration_VM) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 1}
}

type Args_Configuration_Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Args_Configuration_Provider) Reset() {
	*x = Args_Configuration_Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_Configuration_Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_Configuration_Provider) ProtoMessage() {}

func (x *Args_Configuration_Provider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_Configuration_Provider.ProtoReflect.Descriptor instead.
func (*Args_Configuration_Provider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 6, 2}
}

type Args_StateBag_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*Args_StateBag_Value_Text
	//	*Args_StateBag_Value_Map
	Value isArgs_StateBag_Value_Value `protobuf_oneof:"value"`
}

func (x *Args_StateBag_Value) Reset() {
	*x = Args_StateBag_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Args_StateBag_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Args_StateBag_Value) ProtoMessage() {}

func (x *Args_StateBag_Value) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Args_StateBag_Value.ProtoReflect.Descriptor instead.
func (*Args_StateBag_Value) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{0, 13, 1}
}

func (m *Args_StateBag_Value) GetValue() isArgs_StateBag_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Args_StateBag_Value) GetText() string {
	if x, ok := x.GetValue().(*Args_StateBag_Value_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Args_StateBag_Value) GetMap() *any.Any {
	if x, ok := x.GetValue().(*Args_StateBag_Value_Map); ok {
		return x.Map
	}
	return nil
}

type isArgs_StateBag_Value_Value interface {
	isArgs_StateBag_Value_Value()
}

type Args_StateBag_Value_Text struct {
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Args_StateBag_Value_Map struct {
	Map *any.Any `protobuf:"bytes,2,opt,name=map,proto3,oneof"`
}

func (*Args_StateBag_Value_Text) isArgs_StateBag_Value_Value() {}

func (*Args_StateBag_Value_Map) isArgs_StateBag_Value_Value() {}

>>>>>>> Generate protos for Vagrantfile service
type FuncSpec_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the argument. This may be empty for typed arguments.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type is the type of the argument. All arguments must be encoded using
	// *any.Any so this type specifies the proto Any message type and not
	// a language-specific type.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// value is the value for this Value. This is only expected to be set
	// for Args and has no impact on specs.
	Value *anypb.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FuncSpec_Value) Reset() {
	*x = FuncSpec_Value{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Value) ProtoMessage() {}

func (x *FuncSpec_Value) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[43]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Value.ProtoReflect.Descriptor instead.
func (*FuncSpec_Value) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FuncSpec_Value) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FuncSpec_Value) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FuncSpec_Value) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

// Args is the standard argument type for an RPC that is calling a FuncSpec.
type FuncSpec_Args struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of arguments. This will include some of the
	// standard types in this file (in the Args message namespace) as well
	// as custom types declared by the FuncSpec that the plugin is expected
	// to understand how to decode.
	Args []*FuncSpec_Value `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *FuncSpec_Args) Reset() {
	*x = FuncSpec_Args{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuncSpec_Args) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuncSpec_Args) ProtoMessage() {}

func (x *FuncSpec_Args) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[44]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuncSpec_Args.ProtoReflect.Descriptor instead.
func (*FuncSpec_Args) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{5, 1}
}

func (x *FuncSpec_Args) GetArgs() []*FuncSpec_Value {
	if x != nil {
		return x.Args
	}
	return nil
}

// ConfigureRequest is the request sent once the configuration decoding
// is complete to actually assign the values to the structure.
type Config_ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// json is the json data for the structure returned in the StructResp.
	// It is guaranteed to decode cleanly into the target structure.
	Json []byte `protobuf:"bytes,1,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *Config_ConfigureRequest) Reset() {
	*x = Config_ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_ConfigureRequest) ProtoMessage() {}

func (x *Config_ConfigureRequest) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[45]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_ConfigureRequest.ProtoReflect.Descriptor instead.
func (*Config_ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Config_ConfigureRequest) GetJson() []byte {
	if x != nil {
		return x.Json
	}
	return nil
}

// StructResp returns the struct for configuration.
type Config_StructResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// struct is the configuration structure (or empty/nil if one doesn't exist).
	// This struct should have all the proper struct tags for HCL decoding
	// You should do validation on the Configure call.
	Struct *protostructure.Struct `protobuf:"bytes,1,opt,name=struct,proto3" json:"struct,omitempty"`
}

func (x *Config_StructResp) Reset() {
	*x = Config_StructResp{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_StructResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_StructResp) ProtoMessage() {}

func (x *Config_StructResp) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[46]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_StructResp.ProtoReflect.Descriptor instead.
func (*Config_StructResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Config_StructResp) GetStruct() *protostructure.Struct {
	if x != nil {
		return x.Struct
	}
	return nil
}

type Config_FieldDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Synopsis string `protobuf:"bytes,2,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Summary  string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	Optional bool   `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	EnvVar   string `protobuf:"bytes,5,opt,name=env_var,json=envVar,proto3" json:"env_var,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Default  string `protobuf:"bytes,7,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *Config_FieldDocumentation) Reset() {
	*x = Config_FieldDocumentation{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_FieldDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_FieldDocumentation) ProtoMessage() {}

func (x *Config_FieldDocumentation) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[47]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_FieldDocumentation.ProtoReflect.Descriptor instead.
func (*Config_FieldDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Config_FieldDocumentation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Config_FieldDocumentation) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *Config_FieldDocumentation) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Config_FieldDocumentation) GetEnvVar() string {
	if x != nil {
		return x.EnvVar
	}
	return ""
}

func (x *Config_FieldDocumentation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Config_FieldDocumentation) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type Config_MapperDocumentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input       string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Config_MapperDocumentation) Reset() {
	*x = Config_MapperDocumentation{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_MapperDocumentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_MapperDocumentation) ProtoMessage() {}

func (x *Config_MapperDocumentation) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[48]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[50]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_MapperDocumentation.ProtoReflect.Descriptor instead.
func (*Config_MapperDocumentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 3}
}

func (x *Config_MapperDocumentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_MapperDocumentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_MapperDocumentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Config_Documentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string                                `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Example     string                                `protobuf:"bytes,2,opt,name=example,proto3" json:"example,omitempty"`
	Input       string                                `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string                                `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Fields      map[string]*Config_FieldDocumentation `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mappers     []*Config_MapperDocumentation         `protobuf:"bytes,6,rep,name=mappers,proto3" json:"mappers,omitempty"`
}

func (x *Config_Documentation) Reset() {
	*x = Config_Documentation{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config_Documentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Documentation) ProtoMessage() {}

func (x *Config_Documentation) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[49]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Documentation.ProtoReflect.Descriptor instead.
func (*Config_Documentation) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{6, 4}
}

func (x *Config_Documentation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Config_Documentation) GetExample() string {
	if x != nil {
		return x.Example
	}
	return ""
}

func (x *Config_Documentation) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *Config_Documentation) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *Config_Documentation) GetFields() map[string]*Config_FieldDocumentation {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Config_Documentation) GetMappers() []*Config_MapperDocumentation {
	if x != nil {
		return x.Mappers
	}
	return nil
}

// AuthResponse is returned by the Auth functions.
type Auth_AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authenticated bool `protobuf:"varint,1,opt,name=authenticated,proto3" json:"authenticated,omitempty"`
}

func (x *Auth_AuthResponse) Reset() {
	*x = Auth_AuthResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth_AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth_AuthResponse) ProtoMessage() {}

func (x *Auth_AuthResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[51]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth_AuthResponse.ProtoReflect.Descriptor instead.
func (*Auth_AuthResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Auth_AuthResponse) GetAuthenticated() bool {
	if x != nil {
		return x.Authenticated
	}
	return false
}

type TerminalUI_IsInteractiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interactive bool `protobuf:"varint,1,opt,name=interactive,proto3" json:"interactive,omitempty"`
}

func (x *TerminalUI_IsInteractiveResponse) Reset() {
	*x = TerminalUI_IsInteractiveResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_IsInteractiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_IsInteractiveResponse) ProtoMessage() {}

func (x *TerminalUI_IsInteractiveResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[52]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_IsInteractiveResponse.ProtoReflect.Descriptor instead.
func (*TerminalUI_IsInteractiveResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 0}
}

func (x *TerminalUI_IsInteractiveResponse) GetInteractive() bool {
	if x != nil {
		return x.Interactive
	}
	return false
}

type TerminalUI_OutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []string `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
}

func (x *TerminalUI_OutputRequest) Reset() {
	*x = TerminalUI_OutputRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_OutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_OutputRequest) ProtoMessage() {}

func (x *TerminalUI_OutputRequest) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[53]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_OutputRequest.ProtoReflect.Descriptor instead.
func (*TerminalUI_OutputRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 1}
}

func (x *TerminalUI_OutputRequest) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

type TerminalUI_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Response_Input
	Event isTerminalUI_Response_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Response) Reset() {
	*x = TerminalUI_Response{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Response) ProtoMessage() {}

func (x *TerminalUI_Response) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[54]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Response.ProtoReflect.Descriptor instead.
func (*TerminalUI_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 2}
}

func (m *TerminalUI_Response) GetEvent() isTerminalUI_Response_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Response) GetInput() *TerminalUI_Event_InputResp {
	if x, ok := x.GetEvent().(*TerminalUI_Response_Input); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Response_Event interface {
	isTerminalUI_Response_Event()
}

type TerminalUI_Response_Input struct {
	Input *TerminalUI_Event_InputResp `protobuf:"bytes,1,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Response_Input) isTerminalUI_Response_Event() {}

type TerminalUI_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*TerminalUI_Event_Line_
	//	*TerminalUI_Event_Status_
	//	*TerminalUI_Event_NamedValues_
	//	*TerminalUI_Event_Raw_
	//	*TerminalUI_Event_Table_
	//	*TerminalUI_Event_StepGroup_
	//	*TerminalUI_Event_Step_
	//	*TerminalUI_Event_Input_
	Event isTerminalUI_Event_Event `protobuf_oneof:"event"`
}

func (x *TerminalUI_Event) Reset() {
	*x = TerminalUI_Event{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event) ProtoMessage() {}

func (x *TerminalUI_Event) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[55]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3}
}

func (m *TerminalUI_Event) GetEvent() isTerminalUI_Event_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *TerminalUI_Event) GetLine() *TerminalUI_Event_Line {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Line_); ok {
		return x.Line
	}
	return nil
}

func (x *TerminalUI_Event) GetStatus() *TerminalUI_Event_Status {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Status_); ok {
		return x.Status
	}
	return nil
}

func (x *TerminalUI_Event) GetNamedValues() *TerminalUI_Event_NamedValues {
	if x, ok := x.GetEvent().(*TerminalUI_Event_NamedValues_); ok {
		return x.NamedValues
	}
	return nil
}

func (x *TerminalUI_Event) GetRaw() *TerminalUI_Event_Raw {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Raw_); ok {
		return x.Raw
	}
	return nil
}

func (x *TerminalUI_Event) GetTable() *TerminalUI_Event_Table {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Table_); ok {
		return x.Table
	}
	return nil
}

func (x *TerminalUI_Event) GetStepGroup() *TerminalUI_Event_StepGroup {
	if x, ok := x.GetEvent().(*TerminalUI_Event_StepGroup_); ok {
		return x.StepGroup
	}
	return nil
}

func (x *TerminalUI_Event) GetStep() *TerminalUI_Event_Step {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Step_); ok {
		return x.Step
	}
	return nil
}

func (x *TerminalUI_Event) GetInput() *TerminalUI_Event_Input {
	if x, ok := x.GetEvent().(*TerminalUI_Event_Input_); ok {
		return x.Input
	}
	return nil
}

type isTerminalUI_Event_Event interface {
	isTerminalUI_Event_Event()
}

type TerminalUI_Event_Line_ struct {
	Line *TerminalUI_Event_Line `protobuf:"bytes,1,opt,name=line,proto3,oneof"`
}

type TerminalUI_Event_Status_ struct {
	Status *TerminalUI_Event_Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type TerminalUI_Event_NamedValues_ struct {
	NamedValues *TerminalUI_Event_NamedValues `protobuf:"bytes,3,opt,name=named_values,json=namedValues,proto3,oneof"`
}

type TerminalUI_Event_Raw_ struct {
	Raw *TerminalUI_Event_Raw `protobuf:"bytes,4,opt,name=raw,proto3,oneof"`
}

type TerminalUI_Event_Table_ struct {
	Table *TerminalUI_Event_Table `protobuf:"bytes,5,opt,name=table,proto3,oneof"`
}

type TerminalUI_Event_StepGroup_ struct {
	StepGroup *TerminalUI_Event_StepGroup `protobuf:"bytes,6,opt,name=step_group,json=stepGroup,proto3,oneof"`
}

type TerminalUI_Event_Step_ struct {
	Step *TerminalUI_Event_Step `protobuf:"bytes,7,opt,name=step,proto3,oneof"`
}

type TerminalUI_Event_Input_ struct {
	Input *TerminalUI_Event_Input `protobuf:"bytes,8,opt,name=input,proto3,oneof"`
}

func (*TerminalUI_Event_Line_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Status_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_NamedValues_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Raw_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Table_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_StepGroup_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Step_) isTerminalUI_Event_Event() {}

func (*TerminalUI_Event_Input_) isTerminalUI_Event_Event() {}

type TerminalUI_Event_Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prompt string `protobuf:"bytes,1,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Style  string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
	Secret bool   `protobuf:"varint,3,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TerminalUI_Event_Input) Reset() {
	*x = TerminalUI_Event_Input{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Input) ProtoMessage() {}

func (x *TerminalUI_Event_Input) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[56]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Input.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Input) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 0}
}

func (x *TerminalUI_Event_Input) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *TerminalUI_Event_Input) GetSecret() bool {
	if x != nil {
		return x.Secret
	}
	return false
}

type TerminalUI_Event_InputResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input string         `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *TerminalUI_Event_InputResp) Reset() {
	*x = TerminalUI_Event_InputResp{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_InputResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_InputResp) ProtoMessage() {}

func (x *TerminalUI_Event_InputResp) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[57]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_InputResp.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_InputResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 1}
}

func (x *TerminalUI_Event_InputResp) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TerminalUI_Event_InputResp) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

type TerminalUI_Event_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Step   bool   `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *TerminalUI_Event_Status) Reset() {
	*x = TerminalUI_Event_Status{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Status) ProtoMessage() {}

func (x *TerminalUI_Event_Status) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[58]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Status.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Status) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 2}
}

func (x *TerminalUI_Event_Status) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Status) GetStep() bool {
	if x != nil {
		return x.Step
	}
	return false
}

type TerminalUI_Event_Line struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Style string `protobuf:"bytes,2,opt,name=style,proto3" json:"style,omitempty"`
}

func (x *TerminalUI_Event_Line) Reset() {
	*x = TerminalUI_Event_Line{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Line) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Line) ProtoMessage() {}

func (x *TerminalUI_Event_Line) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[59]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Line.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Line) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 3}
}

func (x *TerminalUI_Event_Line) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Line) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type TerminalUI_Event_Raw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data   []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Stderr bool   `protobuf:"varint,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *TerminalUI_Event_Raw) Reset() {
	*x = TerminalUI_Event_Raw{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Raw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Raw) ProtoMessage() {}

func (x *TerminalUI_Event_Raw) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[60]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Raw.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Raw) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 4}
}

func (x *TerminalUI_Event_Raw) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TerminalUI_Event_Raw) GetStderr() bool {
	if x != nil {
		return x.Stderr
	}
	return false
}

type TerminalUI_Event_NamedValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TerminalUI_Event_NamedValue) Reset() {
	*x = TerminalUI_Event_NamedValue{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValue) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValue) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[61]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValue.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValue) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 5}
}

func (x *TerminalUI_Event_NamedValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TerminalUI_Event_NamedValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TerminalUI_Event_NamedValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*TerminalUI_Event_NamedValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *TerminalUI_Event_NamedValues) Reset() {
	*x = TerminalUI_Event_NamedValues{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_NamedValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_NamedValues) ProtoMessage() {}

func (x *TerminalUI_Event_NamedValues) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[62]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_NamedValues.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_NamedValues) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 6}
}

func (x *TerminalUI_Event_NamedValues) GetValues() []*TerminalUI_Event_NamedValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type TerminalUI_Event_TableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Color string `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *TerminalUI_Event_TableEntry) Reset() {
	*x = TerminalUI_Event_TableEntry{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableEntry) ProtoMessage() {}

func (x *TerminalUI_Event_TableEntry) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[63]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableEntry.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableEntry) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 7}
}

func (x *TerminalUI_Event_TableEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TerminalUI_Event_TableEntry) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type TerminalUI_Event_TableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*TerminalUI_Event_TableEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *TerminalUI_Event_TableRow) Reset() {
	*x = TerminalUI_Event_TableRow{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_TableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_TableRow) ProtoMessage() {}

func (x *TerminalUI_Event_TableRow) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[64]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_TableRow.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_TableRow) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 8}
}

func (x *TerminalUI_Event_TableRow) GetEntries() []*TerminalUI_Event_TableEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type TerminalUI_Event_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []string                     `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Rows    []*TerminalUI_Event_TableRow `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *TerminalUI_Event_Table) Reset() {
	*x = TerminalUI_Event_Table{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Table) ProtoMessage() {}

func (x *TerminalUI_Event_Table) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[65]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Table.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Table) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 9}
}

func (x *TerminalUI_Event_Table) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *TerminalUI_Event_Table) GetRows() []*TerminalUI_Event_TableRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type TerminalUI_Event_StepGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Close bool `protobuf:"varint,1,opt,name=close,proto3" json:"close,omitempty"`
}

func (x *TerminalUI_Event_StepGroup) Reset() {
	*x = TerminalUI_Event_StepGroup{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_StepGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_StepGroup) ProtoMessage() {}

func (x *TerminalUI_Event_StepGroup) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[66]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_StepGroup.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_StepGroup) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 10}
}

func (x *TerminalUI_Event_StepGroup) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

type TerminalUI_Event_Step struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Close  bool   `protobuf:"varint,2,opt,name=close,proto3" json:"close,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Output []byte `protobuf:"bytes,5,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *TerminalUI_Event_Step) Reset() {
	*x = TerminalUI_Event_Step{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalUI_Event_Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalUI_Event_Step) ProtoMessage() {}

func (x *TerminalUI_Event_Step) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[67]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalUI_Event_Step.ProtoReflect.Descriptor instead.
func (*TerminalUI_Event_Step) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{9, 3, 11}
}

func (x *TerminalUI_Event_Step) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TerminalUI_Event_Step) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

func (x *TerminalUI_Event_Step) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TerminalUI_Event_Step) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type Map_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// args is the list of argument types.
	Args *FuncSpec_Args `protobuf:"bytes,1,opt,name=args,proto3" json:"args,omitempty"`
	// result is the desired result type.
	Result string `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Request) Reset() {
	*x = Map_Request{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Request) ProtoMessage() {}

func (x *Map_Request) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[68]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Request.ProtoReflect.Descriptor instead.
func (*Map_Request) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 0}
}

func (x *Map_Request) GetArgs() *FuncSpec_Args {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Map_Request) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type Map_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// result is the mapped data type that matches the type expected
	// by the MapRequest.result field.
	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Map_Response) Reset() {
	*x = Map_Response{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_Response) ProtoMessage() {}

func (x *Map_Response) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[69]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_Response.ProtoReflect.Descriptor instead.
func (*Map_Response) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 1}
}

func (x *Map_Response) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Map_ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// FuncSpec
	Funcs []*FuncSpec `protobuf:"bytes,1,rep,name=funcs,proto3" json:"funcs,omitempty"`
}

func (x *Map_ListResponse) Reset() {
	*x = Map_ListResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map_ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map_ListResponse) ProtoMessage() {}

func (x *Map_ListResponse) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[70]
=======
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map_ListResponse.ProtoReflect.Descriptor instead.
func (*Map_ListResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{10, 2}
}

func (x *Map_ListResponse) GetFuncs() []*FuncSpec {
	if x != nil {
		return x.Funcs
	}
	return nil
}

type StateBag_GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StateBag_GetRequest) Reset() {
	*x = StateBag_GetRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *StateBag_GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[71]
=======
func (x *Provider_UsableResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetRequest.ProtoReflect.Descriptor instead.
func (*StateBag_GetRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 0}
}

func (x *StateBag_GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StateBag_GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_GetResponse) Reset() {
	*x = StateBag_GetResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *StateBag_GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[72]
=======
func (x *Provider_InstalledResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetResponse.ProtoReflect.Descriptor instead.
func (*StateBag_GetResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 1}
}

func (x *StateBag_GetResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_GetOkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_GetOkResponse) Reset() {
	*x = StateBag_GetOkResponse{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[75]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_GetOkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_GetOkResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *StateBag_GetOkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[73]
=======
func (x *Provider_ActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[75]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_GetOkResponse.ProtoReflect.Descriptor instead.
func (*StateBag_GetOkResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 2}
}

func (x *StateBag_GetOkResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *StateBag_GetOkResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateBag_PutRequest) Reset() {
	*x = StateBag_PutRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_PutRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *StateBag_PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[74]
=======
func (x *Command_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[77]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_PutRequest.ProtoReflect.Descriptor instead.
func (*StateBag_PutRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 3}
}

func (x *StateBag_PutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StateBag_PutRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type StateBag_PutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag_PutResponse) Reset() {
	*x = StateBag_PutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_PutResponse) ProtoMessage() {}

func (x *StateBag_PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_PutResponse.ProtoReflect.Descriptor instead.
func (*StateBag_PutResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 4}
}

type StateBag_RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StateBag_RemoveRequest) Reset() {
	*x = StateBag_RemoveRequest{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
=======
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
>>>>>>> Generate protos for Vagrantfile service
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_RemoveRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *StateBag_RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[76]
=======
func (x *Command_CommandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_RemoveRequest.ProtoReflect.Descriptor instead.
func (*StateBag_RemoveRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 5}
}

func (x *StateBag_RemoveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type StateBag_RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateBag_RemoveResponse) Reset() {
	*x = StateBag_RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateBag_RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateBag_RemoveResponse) ProtoMessage() {}

func (x *StateBag_RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateBag_RemoveResponse.ProtoReflect.Descriptor instead.
func (*StateBag_RemoveResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{11, 6}
}

type Provider_UsableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUsable bool `protobuf:"varint,1,opt,name=is_usable,json=isUsable,proto3" json:"is_usable,omitempty"`
}

func (x *Provider_UsableResp) Reset() {
	*x = Provider_UsableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_UsableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_UsableResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Provider_UsableResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[78]
=======
func (x *Command_CommandInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_UsableResp.ProtoReflect.Descriptor instead.
func (*Provider_UsableResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 0}
}

func (x *Provider_UsableResp) GetIsUsable() bool {
	if x != nil {
		return x.IsUsable
	}
	return false
}

type Provider_InstalledResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInstalled bool `protobuf:"varint,1,opt,name=is_installed,json=isInstalled,proto3" json:"is_installed,omitempty"`
}

func (x *Provider_InstalledResp) Reset() {
	*x = Provider_InstalledResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_InstalledResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_InstalledResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Provider_InstalledResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[79]
=======
func (x *Command_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_InstalledResp.ProtoReflect.Descriptor instead.
func (*Provider_InstalledResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 1}
}

func (x *Provider_InstalledResp) GetIsInstalled() bool {
	if x != nil {
		return x.IsInstalled
	}
	return false
}

type Provider_ActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *anypb.Any        `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Labels       map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TemplateData []byte            `protobuf:"bytes,3,opt,name=template_data,json=templateData,proto3" json:"template_data,omitempty"`
	Success      bool              `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Provider_ActionResp) Reset() {
	*x = Provider_ActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider_ActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider_ActionResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Provider_ActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[80]
=======
func (x *Command_ExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[81]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider_ActionResp.ProtoReflect.Descriptor instead.
func (*Provider_ActionResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{12, 2}
}

func (x *Provider_ActionResp) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Provider_ActionResp) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Provider_ActionResp) GetTemplateData() []byte {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *Provider_ActionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Command_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LongName     string            `protobuf:"bytes,1,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName    string            `protobuf:"bytes,2,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Description  string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue string            `protobuf:"bytes,4,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Type         Command_Flag_Type `protobuf:"varint,5,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Flag) Reset() {
	*x = Command_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Flag) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_Flag) ProtoReflect() protoreflect.Message {
=======
func (x *Command_ExecuteSpecReq) ProtoReflect() protoreflect.Message {
>>>>>>> Generate protos for Vagrantfile service
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Flag.ProtoReflect.Descriptor instead.
func (*Command_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 0}
}

func (x *Command_Flag) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

<<<<<<< HEAD
func (x *Command_Flag) GetShortName() string {
	if x != nil {
		return x.ShortName
=======
func (x *Command_Arguments) Reset() {
	*x = Command_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
>>>>>>> Generate protos for Vagrantfile service
	}
	return ""
}

<<<<<<< HEAD
func (x *Command_Flag) GetDescription() string {
	if x != nil {
		return x.Description
=======
func (x *Command_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments) ProtoMessage() {}

func (x *Command_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
>>>>>>> Generate protos for Vagrantfile service
	}
	return ""
}

func (x *Command_Flag) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *Command_Flag) GetType() Command_Flag_Type {
	if x != nil {
		return x.Type
	}
	return Command_Flag_STRING
}

type Command_CommandInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Help        string                 `protobuf:"bytes,2,opt,name=help,proto3" json:"help,omitempty"`
	Synopsis    string                 `protobuf:"bytes,3,opt,name=synopsis,proto3" json:"synopsis,omitempty"`
	Flags       []*Command_Flag        `protobuf:"bytes,4,rep,name=flags,proto3" json:"flags,omitempty"`
	Subcommands []*Command_CommandInfo `protobuf:"bytes,5,rep,name=subcommands,proto3" json:"subcommands,omitempty"`
}

func (x *Command_CommandInfo) Reset() {
	*x = Command_CommandInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_CommandInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_CommandInfo) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_CommandInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[83]
=======
func (x *Command_Arguments_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_CommandInfo.ProtoReflect.Descriptor instead.
func (*Command_CommandInfo) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 1}
}

func (x *Command_CommandInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Command_CommandInfo) GetHelp() string {
	if x != nil {
		return x.Help
	}
	return ""
}

func (x *Command_CommandInfo) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *Command_CommandInfo) GetFlags() []*Command_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command_CommandInfo) GetSubcommands() []*Command_CommandInfo {
	if x != nil {
		return x.Subcommands
	}
	return nil
}

type Command_CommandInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandInfo *Command_CommandInfo `protobuf:"bytes,1,opt,name=command_info,json=commandInfo,proto3" json:"command_info,omitempty"`
}

func (x *Command_CommandInfoResp) Reset() {
	*x = Command_CommandInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_CommandInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_CommandInfoResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_CommandInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[84]
=======
func (x *Communicator_MatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_CommandInfoResp.ProtoReflect.Descriptor instead.
func (*Command_CommandInfoResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 2}
}

func (x *Command_CommandInfoResp) GetCommandInfo() *Command_CommandInfo {
	if x != nil {
		return x.CommandInfo
	}
	return nil
}

type Command_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int64 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Command_ExecuteResp) Reset() {
	*x = Command_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[85]
=======
func (x *Communicator_InitResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Command_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 3}
}

func (x *Command_ExecuteResp) GetExitCode() int64 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Command_ExecuteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec        *FuncSpec_Args `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	CommandArgs []string       `protobuf:"bytes,2,rep,name=command_args,json=commandArgs,proto3" json:"command_args,omitempty"`
}

func (x *Command_ExecuteReq) Reset() {
	*x = Command_ExecuteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteReq) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_ExecuteReq) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[86]
=======
func (x *Communicator_ReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteReq.ProtoReflect.Descriptor instead.
func (*Command_ExecuteReq) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 4}
}

func (x *Command_ExecuteReq) GetSpec() *FuncSpec_Args {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Command_ExecuteReq) GetCommandArgs() []string {
	if x != nil {
		return x.CommandArgs
	}
	return nil
}

type Command_ExecuteSpecReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandArgs []string `protobuf:"bytes,1,rep,name=command_args,json=commandArgs,proto3" json:"command_args,omitempty"`
}

func (x *Command_ExecuteSpecReq) Reset() {
	*x = Command_ExecuteSpecReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_ExecuteSpecReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ExecuteSpecReq) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_ExecuteSpecReq) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[87]
=======
func (x *Communicator_FileTransferResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ExecuteSpecReq.ProtoReflect.Descriptor instead.
func (*Command_ExecuteSpecReq) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 5}
}

func (x *Command_ExecuteSpecReq) GetCommandArgs() []string {
	if x != nil {
		return x.CommandArgs
	}
	return nil
}

type Command_Arguments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []*Command_Arguments_Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
	Args  []string                  `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *Command_Arguments) Reset() {
	*x = Command_Arguments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_Arguments) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[88]
=======
func (x *Communicator_ExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments.ProtoReflect.Descriptor instead.
func (*Command_Arguments) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 6}
}

func (x *Command_Arguments) GetFlags() []*Command_Arguments_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Command_Arguments) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type Command_Arguments_Flag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Value:
	//	*Command_Arguments_Flag_String_
	//	*Command_Arguments_Flag_Bool
	Value isCommand_Arguments_Flag_Value `protobuf_oneof:"value"`
	Type  Command_Arguments_Flag_Type    `protobuf:"varint,4,opt,name=type,proto3,enum=hashicorp.vagrant.sdk.Command_Arguments_Flag_Type" json:"type,omitempty"`
}

func (x *Command_Arguments_Flag) Reset() {
	*x = Command_Arguments_Flag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command_Arguments_Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Arguments_Flag) ProtoMessage() {}

<<<<<<< HEAD
func (x *Command_Arguments_Flag) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[89]
=======
func (x *Communicator_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[90]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Arguments_Flag.ProtoReflect.Descriptor instead.
func (*Command_Arguments_Flag) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{13, 6, 0}
}

func (x *Command_Arguments_Flag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *Command_Arguments_Flag) GetValue() isCommand_Arguments_Flag_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

<<<<<<< HEAD
func (x *Command_Arguments_Flag) GetString_() string {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_String_); ok {
		return x.String_
=======
func (x *Communicator_TestResp) Reset() {
	*x = Communicator_TestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
>>>>>>> Generate protos for Vagrantfile service
	}
	return ""
}

func (x *Command_Arguments_Flag) GetBool() bool {
	if x, ok := x.GetValue().(*Command_Arguments_Flag_Bool); ok {
		return x.Bool
	}
	return false
}

<<<<<<< HEAD
func (x *Command_Arguments_Flag) GetType() Command_Arguments_Flag_Type {
	if x != nil {
		return x.Type
=======
func (*Communicator_TestResp) ProtoMessage() {}

func (x *Communicator_TestResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
>>>>>>> Generate protos for Vagrantfile service
	}
	return Command_Arguments_Flag_STRING
}

type isCommand_Arguments_Flag_Value interface {
	isCommand_Arguments_Flag_Value()
}

type Command_Arguments_Flag_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type Command_Arguments_Flag_Bool struct {
	Bool bool `protobuf:"varint,3,opt,name=bool,proto3,oneof"`
}

func (*Command_Arguments_Flag_String_) isCommand_Arguments_Flag_Value() {}

func (*Command_Arguments_Flag_Bool) isCommand_Arguments_Flag_Value() {}

type Communicator_MatchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match bool `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *Communicator_MatchResp) Reset() {
	*x = Communicator_MatchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_MatchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_MatchResp) ProtoMessage() {}

func (x *Communicator_MatchResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_MatchResp.ProtoReflect.Descriptor instead.
func (*Communicator_MatchResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 0}
}

func (x *Communicator_MatchResp) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

type Communicator_InitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_InitResp) Reset() {
	*x = Communicator_InitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_InitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_InitResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_InitResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[91]
=======
func (x *Communicator_ResetResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_InitResp.ProtoReflect.Descriptor instead.
func (*Communicator_InitResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 1}
}

type Communicator_ReadyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ready bool `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
}

func (x *Communicator_ReadyResp) Reset() {
	*x = Communicator_ReadyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ReadyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ReadyResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_ReadyResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[92]
=======
func (x *Guest_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ReadyResp.ProtoReflect.Descriptor instead.
func (*Communicator_ReadyResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 2}
}

func (x *Communicator_ReadyResp) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type Communicator_FileTransferResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_FileTransferResp) Reset() {
	*x = Communicator_FileTransferResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_FileTransferResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_FileTransferResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_FileTransferResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[93]
=======
func (x *Guest_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_FileTransferResp.ProtoReflect.Descriptor instead.
func (*Communicator_FileTransferResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 3}
}

type Communicator_ExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Args_Target_Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Command string               `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Options *Args_MetadataSet    `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *Communicator_ExecutionRequest) Reset() {
	*x = Communicator_ExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ExecutionRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_ExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[94]
=======
func (x *Guest_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ExecutionRequest.ProtoReflect.Descriptor instead.
func (*Communicator_ExecutionRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 4}
}

func (x *Communicator_ExecutionRequest) GetMachine() *Args_Target_Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Communicator_ExecutionRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Communicator_ExecutionRequest) GetOptions() *Args_MetadataSet {
	if x != nil {
		return x.Options
	}
	return nil
}

type Communicator_ExecuteResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode int32 `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
}

func (x *Communicator_ExecuteResp) Reset() {
	*x = Communicator_ExecuteResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ExecuteResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ExecuteResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_ExecuteResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[95]
=======
func (x *Guest_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ExecuteResp.ProtoReflect.Descriptor instead.
func (*Communicator_ExecuteResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 5}
}

func (x *Communicator_ExecuteResp) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

type Communicator_TestResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *Communicator_TestResp) Reset() {
	*x = Communicator_TestResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_TestResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_TestResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_TestResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[96]
=======
func (x *Guest_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_TestResp.ProtoReflect.Descriptor instead.
func (*Communicator_TestResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 6}
}

func (x *Communicator_TestResp) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type Communicator_ResetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Communicator_ResetResp) Reset() {
	*x = Communicator_ResetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Communicator_ResetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Communicator_ResetResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Communicator_ResetResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[97]
=======
func (x *Host_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Communicator_ResetResp.ProtoReflect.Descriptor instead.
func (*Communicator_ResetResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 7}
}

type Guest_DetectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detected bool `protobuf:"varint,1,opt,name=detected,proto3" json:"detected,omitempty"`
}

func (x *Guest_DetectResp) Reset() {
	*x = Guest_DetectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_DetectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_DetectResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[98]
=======
func (x *Host_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_DetectResp.ProtoReflect.Descriptor instead.
func (*Guest_DetectResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Guest_DetectResp) GetDetected() bool {
	if x != nil {
		return x.Detected
	}
	return false
}

type Guest_Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Guest_Capability) Reset() {
	*x = Guest_Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[99]
=======
func (x *Host_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability.ProtoReflect.Descriptor instead.
func (*Guest_Capability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1}
}

type Guest_Capability_NamedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuncArgs *FuncSpec_Args `protobuf:"bytes,2,opt,name=func_args,json=funcArgs,proto3" json:"func_args,omitempty"`
}

func (x *Guest_Capability_NamedRequest) Reset() {
	*x = Guest_Capability_NamedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_NamedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_NamedRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[100]
=======
func (x *Host_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_NamedRequest.ProtoReflect.Descriptor instead.
func (*Guest_Capability_NamedRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1, 0}
}

func (x *Guest_Capability_NamedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Guest_Capability_NamedRequest) GetFuncArgs() *FuncSpec_Args {
	if x != nil {
		return x.FuncArgs
	}
	return nil
}

type Guest_Capability_CheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasCapability bool `protobuf:"varint,1,opt,name=has_capability,json=hasCapability,proto3" json:"has_capability,omitempty"`
}

func (x *Guest_Capability_CheckResp) Reset() {
	*x = Guest_Capability_CheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_CheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_CheckResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[101]
=======
func (x *Host_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_CheckResp.ProtoReflect.Descriptor instead.
func (*Guest_Capability_CheckResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1, 1}
}

func (x *Guest_Capability_CheckResp) GetHasCapability() bool {
	if x != nil {
		return x.HasCapability
	}
	return false
}

type Guest_Capability_Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Guest_Capability_Resp) Reset() {
	*x = Guest_Capability_Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Guest_Capability_Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guest_Capability_Resp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Guest_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[102]
=======
func (x *Ref_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guest_Capability_Resp.ProtoReflect.Descriptor instead.
func (*Guest_Capability_Resp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1, 2}
}

func (x *Guest_Capability_Resp) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Host_DetectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detected bool `protobuf:"varint,1,opt,name=detected,proto3" json:"detected,omitempty"`
}

func (x *Host_DetectResp) Reset() {
	*x = Host_DetectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_DetectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_DetectResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host_DetectResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[103]
=======
func (x *Ref_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_DetectResp.ProtoReflect.Descriptor instead.
func (*Host_DetectResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 0}
}

func (x *Host_DetectResp) GetDetected() bool {
	if x != nil {
		return x.Detected
	}
	return false
}

type Host_Capability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Host_Capability) Reset() {
	*x = Host_Capability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host_Capability) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[104]
=======
func (x *Ref_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability.ProtoReflect.Descriptor instead.
func (*Host_Capability) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 1}
}

type Host_Capability_NamedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuncArgs *FuncSpec_Args `protobuf:"bytes,2,opt,name=func_args,json=funcArgs,proto3" json:"func_args,omitempty"`
}

func (x *Host_Capability_NamedRequest) Reset() {
	*x = Host_Capability_NamedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability_NamedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability_NamedRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host_Capability_NamedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[105]
=======
func (x *Machine_SetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability_NamedRequest.ProtoReflect.Descriptor instead.
func (*Host_Capability_NamedRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 1, 0}
}

func (x *Host_Capability_NamedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host_Capability_NamedRequest) GetFuncArgs() *FuncSpec_Args {
	if x != nil {
		return x.FuncArgs
	}
	return nil
}

type Host_Capability_CheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasCapability bool `protobuf:"varint,1,opt,name=has_capability,json=hasCapability,proto3" json:"has_capability,omitempty"`
}

func (x *Host_Capability_CheckResp) Reset() {
	*x = Host_Capability_CheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability_CheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability_CheckResp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host_Capability_CheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[106]
=======
func (x *Machine_SetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability_CheckResp.ProtoReflect.Descriptor instead.
func (*Host_Capability_CheckResp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 1, 1}
}

func (x *Host_Capability_CheckResp) GetHasCapability() bool {
	if x != nil {
		return x.HasCapability
	}
	return false
}

type Host_Capability_Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *anypb.Any `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Host_Capability_Resp) Reset() {
	*x = Host_Capability_Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host_Capability_Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host_Capability_Resp) ProtoMessage() {}

<<<<<<< HEAD
func (x *Host_Capability_Resp) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[107]
=======
func (x *Machine_GetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host_Capability_Resp.ProtoReflect.Descriptor instead.
func (*Host_Capability_Resp) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{16, 1, 2}
}

func (x *Host_Capability_Resp) GetResult() *anypb.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

// Box references a Box.
type Ref_Box struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Ref_Box) Reset() {
	*x = Ref_Box{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Box) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Box) ProtoMessage() {}

<<<<<<< HEAD
func (x *Ref_Box) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[108]
=======
func (x *Machine_GetNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Box.ProtoReflect.Descriptor instead.
func (*Ref_Box) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Ref_Box) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

// References a basis configuration (analogous to VAGRANT_HOME)
type Ref_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Basis) Reset() {
	*x = Ref_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Basis) ProtoMessage() {}

<<<<<<< HEAD
func (x *Ref_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[109]
=======
func (x *Machine_SetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Basis.ProtoReflect.Descriptor instead.
func (*Ref_Basis) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 1}
}

func (x *Ref_Basis) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Basis) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ref_Basis) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Represents a Project (in vagrant-agogo), an Environment (in vagrant-ruby)
type Ref_Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string     `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Path       string     `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Basis      *Ref_Basis `protobuf:"bytes,3,opt,name=basis,proto3" json:"basis,omitempty"`
	Name       string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Project) Reset() {
	*x = Ref_Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Project) ProtoMessage() {}

<<<<<<< HEAD
func (x *Ref_Project) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[110]
=======
func (x *Machine_SetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Project.ProtoReflect.Descriptor instead.
func (*Ref_Project) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 2}
}

func (x *Ref_Project) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Project) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Ref_Project) GetBasis() *Ref_Basis {
	if x != nil {
		return x.Basis
	}
	return nil
}

func (x *Ref_Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// References a Target (in vagrant-ruby this is a Machine)
type Ref_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string       `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	Project    *Ref_Project `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	Name       string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Ref_Target) Reset() {
	*x = Ref_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ref_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ref_Target) ProtoMessage() {}

<<<<<<< HEAD
func (x *Ref_Target) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[111]
=======
func (x *Machine_GetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ref_Target.ProtoReflect.Descriptor instead.
func (*Ref_Target) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{17, 3}
}

func (x *Ref_Target) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *Ref_Target) GetProject() *Ref_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *Ref_Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Target_ResourceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceId string `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
}

func (x *Target_ResourceIdResponse) Reset() {
	*x = Target_ResourceIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_ResourceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_ResourceIdResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_ResourceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[112]
=======
func (x *Machine_GetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_ResourceIdResponse.ProtoReflect.Descriptor instead.
func (*Target_ResourceIdResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 0}
}

func (x *Target_ResourceIdResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

type Target_RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Record *anypb.Any `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
}

func (x *Target_RecordResponse) Reset() {
	*x = Target_RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_RecordResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[113]
=======
func (x *Machine_SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_RecordResponse.ProtoReflect.Descriptor instead.
func (*Target_RecordResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 1}
}

func (x *Target_RecordResponse) GetRecord() *anypb.Any {
	if x != nil {
		return x.Record
	}
	return nil
}

type Target_NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_NameResponse) Reset() {
	*x = Target_NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_NameResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[114]
=======
func (x *Machine_SetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_NameResponse.ProtoReflect.Descriptor instead.
func (*Target_NameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 2}
}

func (x *Target_NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Target_ProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Ref_Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *Target_ProjectResponse) Reset() {
	*x = Target_ProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_ProjectResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[115]
=======
func (x *Machine_GetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_ProjectResponse.ProtoReflect.Descriptor instead.
func (*Target_ProjectResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 3}
}

func (x *Target_ProjectResponse) GetProject() *Ref_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type Target_SetNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_SetNameRequest) Reset() {
	*x = Target_SetNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_SetNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_SetNameRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_SetNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[116]
=======
func (x *Machine_GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_SetNameRequest.ProtoReflect.Descriptor instead.
func (*Target_SetNameRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 4}
}

func (x *Target_SetNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VagrantfileName
type Target_VagrantfileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Target_VagrantfileNameResponse) Reset() {
	*x = Target_VagrantfileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_VagrantfileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_VagrantfileNameResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[117]
=======
func (x *Machine_GetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_VagrantfileNameResponse.ProtoReflect.Descriptor instead.
func (*Target_VagrantfileNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 5}
}

func (x *Target_VagrantfileNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// VagrantfilePath
type Target_VagrantfilePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Target_VagrantfilePathResponse) Reset() {
	*x = Target_VagrantfilePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_VagrantfilePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_VagrantfilePathResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_VagrantfilePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[118]
=======
func (x *Machine_GetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_VagrantfilePathResponse.ProtoReflect.Descriptor instead.
func (*Target_VagrantfilePathResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 6}
}

func (x *Target_VagrantfilePathResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// UpdatedAt
type Target_UpdatedAtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Target_UpdatedAtResponse) Reset() {
	*x = Target_UpdatedAtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_UpdatedAtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_UpdatedAtResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_UpdatedAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[119]
=======
func (x *Machine_SetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_UpdatedAtResponse.ProtoReflect.Descriptor instead.
func (*Target_UpdatedAtResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 7}
}

func (x *Target_UpdatedAtResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

//*********************************************
// Machine message used with machine service
//********************************************
type Target_Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Target_Machine) Reset() {
	*x = Target_Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[120]
=======
func (x *Machine_SetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine.ProtoReflect.Descriptor instead.
func (*Target_Machine) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8}
}

type Target_Machine_SetIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Target_Machine_SetIDRequest) Reset() {
	*x = Target_Machine_SetIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SetIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SetIDRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_SetIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[121]
=======
func (x *Machine_BoxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SetIDRequest.ProtoReflect.Descriptor instead.
func (*Target_Machine_SetIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 0}
}

func (x *Target_Machine_SetIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Target_Machine_GetIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Target_Machine_GetIDResponse) Reset() {
	*x = Target_Machine_GetIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_GetIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_GetIDResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_GetIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[122]
=======
func (x *Machine_BoxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_GetIDResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_GetIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 1}
}

func (x *Target_Machine_GetIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Target_Machine_SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *Args_Target_Machine_State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Target_Machine_SetStateRequest) Reset() {
	*x = Target_Machine_SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SetStateRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[123]
=======
func (x *Machine_DatadirRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SetStateRequest.ProtoReflect.Descriptor instead.
func (*Target_Machine_SetStateRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 2}
}

func (x *Target_Machine_SetStateRequest) GetState() *Args_Target_Machine_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Target_Machine_GetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *Args_Target_Machine_State `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Target_Machine_GetStateResponse) Reset() {
	*x = Target_Machine_GetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_GetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_GetStateResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_GetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[124]
=======
func (x *Machine_DatadirResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_GetStateResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_GetStateResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 3}
}

func (x *Target_Machine_GetStateResponse) GetState() *Args_Target_Machine_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Target_Machine_GetUUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Target_Machine_GetUUIDResponse) Reset() {
	*x = Target_Machine_GetUUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_GetUUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_GetUUIDResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_GetUUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[125]
=======
func (x *Machine_LocalDataPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_GetUUIDResponse.ProtoReflect.Descriptor instead.
func (*Target_Machine_GetUUIDResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 4}
}

func (x *Target_Machine_GetUUIDResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Target_Machine_SetUUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *Target_Machine_SetUUIDRequest) Reset() {
	*x = Target_Machine_SetUUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Target_Machine_SetUUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target_Machine_SetUUIDRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Target_Machine_SetUUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[126]
=======
func (x *Machine_LocalDataPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target_Machine_SetUUIDRequest.ProtoReflect.Descriptor instead.
func (*Target_Machine_SetUUIDRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{18, 8, 5}
}

func (x *Target_Machine_SetUUIDRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type Project_TargetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Project_TargetRequest) Reset() {
	*x = Project_TargetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetRequest) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_TargetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[127]
=======
func (x *Machine_ProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetRequest.ProtoReflect.Descriptor instead.
func (*Project_TargetRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 0}
}

func (x *Project_TargetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Project_TargetNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Project_TargetNamesResponse) Reset() {
	*x = Project_TargetNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetNamesResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_TargetNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[128]
=======
func (x *Machine_ProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetNamesResponse.ProtoReflect.Descriptor instead.
func (*Project_TargetNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 1}
}

func (x *Project_TargetNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Project_TargetIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *Project_TargetIdsResponse) Reset() {
	*x = Project_TargetIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TargetIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TargetIdsResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_TargetIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[129]
=======
func (x *Machine_VagrantfileNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TargetIdsResponse.ProtoReflect.Descriptor instead.
func (*Project_TargetIdsResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 2}
}

func (x *Project_TargetIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Project_MachineAndProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *Project_MachineAndProvider) Reset() {
	*x = Project_MachineAndProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_MachineAndProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_MachineAndProvider) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_MachineAndProvider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[130]
=======
func (x *Machine_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_MachineAndProvider.ProtoReflect.Descriptor instead.
func (*Project_MachineAndProvider) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 3}
}

func (x *Project_MachineAndProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project_MachineAndProvider) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type Project_MachineNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *Project_MachineNamesResponse) Reset() {
	*x = Project_MachineNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_MachineNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_MachineNamesResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_MachineNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[131]
=======
func (x *Machine_VagrantfilePathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_MachineNamesResponse.ProtoReflect.Descriptor instead.
func (*Project_MachineNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 4}
}

func (x *Project_MachineNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Project_ActiveMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Project_MachineAndProvider `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *Project_ActiveMachinesResponse) Reset() {
	*x = Project_ActiveMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_ActiveMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ActiveMachinesResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_ActiveMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[132]
=======
func (x *Machine_VagrantfilePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ActiveMachinesResponse.ProtoReflect.Descriptor instead.
func (*Project_ActiveMachinesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 5}
}

func (x *Project_ActiveMachinesResponse) GetMachines() []*Project_MachineAndProvider {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Project_CwdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_CwdResponse) Reset() {
	*x = Project_CwdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_CwdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_CwdResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_CwdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[133]
=======
func (x *Machine_UpdatedAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_CwdResponse.ProtoReflect.Descriptor instead.
func (*Project_CwdResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 6}
}

func (x *Project_CwdResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_VagrantfileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Project_VagrantfileNameResponse) Reset() {
	*x = Project_VagrantfileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_VagrantfileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_VagrantfileNameResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_VagrantfileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[134]
=======
func (x *Machine_UpdatedAtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_VagrantfileNameResponse.ProtoReflect.Descriptor instead.
func (*Project_VagrantfileNameResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 7}
}

func (x *Project_VagrantfileNameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Project_HomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_HomeResponse) Reset() {
	*x = Project_HomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_HomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_HomeResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_HomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[135]
=======
func (x *Machine_UIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_HomeResponse.ProtoReflect.Descriptor instead.
func (*Project_HomeResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 8}
}

func (x *Project_HomeResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_LocalDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_LocalDataResponse) Reset() {
	*x = Project_LocalDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_LocalDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_LocalDataResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_LocalDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[136]
=======
func (x *Machine_UIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_LocalDataResponse.ProtoReflect.Descriptor instead.
func (*Project_LocalDataResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 9}
}

func (x *Project_LocalDataResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_TmpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Project_TmpResponse) Reset() {
	*x = Project_TmpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_TmpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_TmpResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_TmpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[137]
=======
func (x *Project_MachineAndProvider) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_TmpResponse.ProtoReflect.Descriptor instead.
func (*Project_TmpResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 10}
}

func (x *Project_TmpResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type Project_DefaultPrivateKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Project_DefaultPrivateKeyResponse) Reset() {
	*x = Project_DefaultPrivateKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_DefaultPrivateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_DefaultPrivateKeyResponse) ProtoMessage() {}

<<<<<<< HEAD
func (x *Project_DefaultPrivateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[138]
=======
func (x *Project_MachineNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[139]
>>>>>>> Generate protos for Vagrantfile service
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

<<<<<<< HEAD
// Deprecated: Use Project_DefaultPrivateKeyResponse.ProtoReflect.Descriptor instead.
func (*Project_DefaultPrivateKeyResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{19, 11}
=======
// Deprecated: Use Project_MachineNamesResponse.ProtoReflect.Descriptor instead.
func (*Project_MachineNamesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 1}
}

func (x *Project_MachineNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Project_ActiveMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env *Ref_Project `protobuf:"bytes,1,opt,name=env,proto3" json:"env,omitempty"`
}

func (x *Project_ActiveMachinesRequest) Reset() {
	*x = Project_ActiveMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project_ActiveMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ActiveMachinesRequest) ProtoMessage() {}

func (x *Project_ActiveMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ActiveMachinesRequest.ProtoReflect.Descriptor instead.
func (*Project_ActiveMachinesRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 2}
>>>>>>> Generate protos for Vagrantfile service
}

func (x *Project_DefaultPrivateKeyResponse) GetKey() string {
	if x != nil {
<<<<<<< HEAD
		return x.Key
=======
		return x.Env
	}
	return nil
}

type Project_ActiveMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Project_MachineAndProvider `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *Project_ActiveMachinesResponse) Reset() {
	*x = Project_ActiveMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
>>>>>>> Generate protos for Vagrantfile service
	}
	return ""
}

<<<<<<< HEAD
var File_vagrant_plugin_sdk_plugin_proto protoreflect.FileDescriptor
=======
func (x *Project_ActiveMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project_ActiveMachinesResponse) ProtoMessage() {}

func (x *Project_ActiveMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project_ActiveMachinesResponse.ProtoReflect.Descriptor instead.
func (*Project_ActiveMachinesResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{14, 3}
}

func (x *Project_ActiveMachinesResponse) GetMachines() []*Project_MachineAndProvider {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Vagrantfile_GetVagrantfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
>>>>>>> Generate protos for Vagrantfile service

	Project *Ref_Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *Vagrantfile_GetVagrantfileRequest) Reset() {
	*x = Vagrantfile_GetVagrantfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_GetVagrantfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_GetVagrantfileRequest) ProtoMessage() {}

func (x *Vagrantfile_GetVagrantfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_GetVagrantfileRequest.ProtoReflect.Descriptor instead.
func (*Vagrantfile_GetVagrantfileRequest) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Vagrantfile_GetVagrantfileRequest) GetProject() *Ref_Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type Vagrantfile_GetVagrantfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vagrantfile *Args_Vagrantfile `protobuf:"bytes,1,opt,name=vagrantfile,proto3" json:"vagrantfile,omitempty"`
}

func (x *Vagrantfile_GetVagrantfileResponse) Reset() {
	*x = Vagrantfile_GetVagrantfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vagrantfile_GetVagrantfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vagrantfile_GetVagrantfileResponse) ProtoMessage() {}

func (x *Vagrantfile_GetVagrantfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vagrant_plugin_sdk_plugin_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vagrantfile_GetVagrantfileResponse.ProtoReflect.Descriptor instead.
func (*Vagrantfile_GetVagrantfileResponse) Descriptor() ([]byte, []int) {
	return file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP(), []int{15, 1}
}

func (x *Vagrantfile_GetVagrantfileResponse) GetVagrantfile() *Args_Vagrantfile {
	if x != nil {
		return x.Vagrantfile
	}
	return nil
}

var File_vagrant_plugin_sdk_plugin_proto protoreflect.FileDescriptor

var file_vagrant_plugin_sdk_plugin_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x5f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x15, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf,
	0x11, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x1a, 0xec, 0x03, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x72, 0x1a, 0x75, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x77, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70,
	0x44, 0x69, 0x72, 0x1a, 0x76, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x6f, 0x6f, 0x74, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x79, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6f, 0x74,
	0x44, 0x69, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x64, 0x69, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x44, 0x69, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x65, 0x6d, 0x70, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x65, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x1a, 0x9d, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x51, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x0a, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x55, 0x49, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x1a, 0x1c, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x1a, 0xdb, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x42,
	0x41, 0x53, 0x49, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43,
	0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02, 0x1a,
	0x56, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x58, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x1a, 0x59, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0xdc, 0x05, 0x0a,
	0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x8c, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x44, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x45, 0x53, 0x54, 0x52, 0x4f,
	0x59, 0x45, 0x44, 0x10, 0x03, 0x1a, 0xf3, 0x03, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x1a, 0xa7, 0x02, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x58, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x6f, 0x78, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x6c, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6f, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x6e, 0x67,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x59, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x55, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x31, 0x0a,
	0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0xa0, 0x03, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x1a, 0x90, 0x03, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x56, 0x0a,
	0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x3c, 0x0a, 0x0e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x0d, 0x42, 0x6f, 0x78, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0xbb, 0x04, 0x0a, 0x07, 0x53, 0x53, 0x48, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x48, 0x6f,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x73, 0x61, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x64, 0x73, 0x61, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x41, 0x72, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x78, 0x31, 0x31, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x58, 0x31, 0x31,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x76, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x45, 0x6e,
	0x76, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x73,
	0x68, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x22, 0x8a, 0x04, 0x0a, 0x09, 0x57, 0x69, 0x6e, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x67, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x54, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x48, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x57, 0x69, 0x6e, 0x72, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x32, 0x0a, 0x15, 0x73, 0x73, 0x6c, 0x5f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13,
	0x73, 0x73, 0x6c, 0x50, 0x65, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x09, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x45, 0x47, 0x4f, 0x54, 0x49,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x4c, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x22, 0xb8, 0x02,
	0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x5b, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x41, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x39, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xa0, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x26, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x1a, 0x3c, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x06, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x1a, 0xc1, 0x01, 0x0a, 0x12, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x5f, 0x76, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x56, 0x61, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x65, 0x0a,
	0x13, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x84, 0x03, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4f, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x1a, 0x6b,
	0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x04, 0x41,
	0x75, 0x74, 0x68, 0x1a, 0x34, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x49, 0x6d, 0x70,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x9a, 0x0d, 0x0a, 0x0a,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x1a, 0x39, 0x0a, 0x15, 0x49, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x1a, 0x25, 0x0a, 0x0d, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x1a, 0x5e, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xc9, 0x0b, 0x0a,
	0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x58, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x61, 0x77, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12,
	0x45, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52,
	0x09, 0x73, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x42, 0x0a, 0x04, 0x73, 0x74,
	0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x65, 0x70, 0x48, 0x00, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x45,
	0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x4d, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x1a, 0x4b, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x1a, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x1a, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x1a, 0x31, 0x0a, 0x03, 0x52, 0x61, 0x77,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x1a, 0x36, 0x0a, 0x0a,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x59, 0x0a, 0x0b, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x38, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x1a, 0x58, 0x0a, 0x08, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x4c, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x1a, 0x67, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x1a, 0x21, 0x0a, 0x09,
	0x53, 0x74, 0x65, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x1a,
	0x6e, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x03, 0x4d, 0x61, 0x70,
	0x1a, 0x5b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x38, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x45, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x22, 0x80,
	0x02, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x1a, 0x1e, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x23, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x34, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x0d, 0x0a,
	0x0b, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x21, 0x0a, 0x0d,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a,
	0x10, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xf0, 0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x29,
	0x0a, 0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x32, 0x0a, 0x0d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x84, 0x02,
	0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41,
	0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x9f, 0x08, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x1a, 0xe5, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1c, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x02, 0x1a, 0xda, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x65, 0x6c, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73, 0x12, 0x39, 0x0a, 0x05,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x1a, 0x60, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x1a, 0x69, 0x0a, 0x0a, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x38, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x33,
	0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0xa0, 0x02, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x43, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x6c, 0x61, 0x67, 0x52,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x1a, 0xb9, 0x01, 0x0a, 0x04, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x46, 0x6c, 0x61, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x1c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x87, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x21, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x1a, 0x0a, 0x0a, 0x08, 0x49, 0x6e,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x21, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x1a, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x1a, 0xb5, 0x01,
	0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x44, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x2a, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x1a, 0x20, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x1a, 0x0b, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x91, 0x02, 0x0a, 0x05, 0x47, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x0a, 0x0a, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x1a, 0xdd, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x1a, 0x65, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x32, 0x0a, 0x09, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x63,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x68, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x34,
	0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x1a, 0x28, 0x0a,
	0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0xdd, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x1a, 0x65, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x66, 0x75,
	0x6e, 0x63, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x32, 0x0a,
	0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61,
	0x73, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x1a, 0x34, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x89, 0x03, 0x0a, 0x03, 0x52, 0x65, 0x66, 0x1a,
	0x26, 0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x50, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x8a, 0x01, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x36, 0x0a, 0x05, 0x62, 0x61,
	0x73, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x52, 0x05, 0x62, 0x61, 0x73,
	0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x7b, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x99, 0x06, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x35,
	0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x1a, 0x3e, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x4f, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x24, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a,
	0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x4e,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xce,
	0x02, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x1a, 0x1e, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1f, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x59, 0x0a, 0x0f, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x1a, 0x24, 0x0a, 0x0e, 0x53, 0x65, 0x74,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22,
	0xd0, 0x04, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x23, 0x0a, 0x0d, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0x2b, 0x0a, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x25, 0x0a,
	0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x1a, 0x44, 0x0a, 0x12, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x2c, 0x0a, 0x14, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0x67, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x1a, 0x21, 0x0a, 0x0b, 0x43, 0x77, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x1a, 0x2d, 0x0a, 0x17, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x27, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x1a, 0x21, 0x0a, 0x0b, 0x54, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x1a, 0x2d, 0x0a, 0x19, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x32, 0xab, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a, 0x06, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x60,
	0x0a, 0x0d, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x49, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xa8, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x03, 0x4d,
	0x61, 0x70, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9e, 0x03, 0x0a, 0x0f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x62, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x4f, 0x6b, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x2a, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x61, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60,
	0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
<<<<<<< HEAD
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x63, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x32, 0xb8, 0x0f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e,
	0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x44, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x08, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x64, 0x0a, 0x06, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16,
=======
	0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x55, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a,
	0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x32, 0xab, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x61, 0x0a,
	0x06, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x49, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x60, 0x0a, 0x0d, 0x49, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49, 0x2e, 0x49, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0xa8, 0x01, 0x0a, 0x06, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x4e, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x03, 0x4d, 0x61, 0x70, 0x12, 0x22, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x70,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x70, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8f, 0x07,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x06, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a,
	0x0a, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x44, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x08, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2a, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0x91, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
>>>>>>> Generate protos for Vagrantfile service
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x50, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6a, 0x0a, 0x11, 0x50,
	0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43,
<<<<<<< HEAD
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c,
	0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x32, 0xff, 0x04, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x60, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x63, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xb8, 0x0f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x5c, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a,
	0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44,
	0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41,
	0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x63, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x66, 0x0a,
	0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x64, 0x0a, 0x06,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a, 0x07, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15,
	0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x6a,
	0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x54, 0x65,
	0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x5a, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2c, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x32,
	0x8c, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xec,
	0x06, 0x0a, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x27, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x78, 0x0a, 0x0d,
	0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x34, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x70, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x32, 0xb8, 0x06,
	0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x06, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x67, 0x0a, 0x0d, 0x48, 0x61, 0x73,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x6e, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x66, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x32, 0x92, 0x02, 0x0a, 0x13, 0x53, 0x79, 0x6e,
	0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xe4, 0x01,
	0x0a, 0x0c, 0x42, 0x61, 0x73, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x44, 0x0a, 0x02,
	0x55, 0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x55, 0x49, 0x12, 0x40, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x32, 0xe7, 0x08, 0x0a, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e,
	0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x53, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74,
	0x12, 0x4d, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x49, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x55, 0x49,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x49,
	0x12, 0x38, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x56,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xcc,
	0x0d, 0x0a, 0x14, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x23, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x4b, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x27, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x65,
	0x74, 0x12, 0x4d, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x49, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x55,
	0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x1a, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49, 0x44, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a, 0x07, 0x53,
	0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x03, 0x42, 0x6f, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2e, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x6f, 0x78, 0x32, 0xd7, 0x08,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x03, 0x43, 0x57, 0x44, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x77, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x69, 0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x61, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x02, 0x55,
	0x49, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x26, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x55,
	0x49, 0x12, 0x4b, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x03, 0x54, 0x6d, 0x70, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x65, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x38, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x20, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2c, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12,
	0x59, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x09, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
=======
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xff, 0x04, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a,
	0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x60, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x29, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x63, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x32, 0xb8, 0x0f, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x5c, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x08, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x5a, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x44, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x24,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x10, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x63, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x66,
	0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73,
	0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x64, 0x0a,
	0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x34, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x60, 0x0a, 0x07, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46,
	0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a,
	0x15, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12,
	0x6a, 0x0a, 0x11, 0x50, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x64, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x5a, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x2c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x09,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x5c, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67,
	0x73, 0x1a, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x32, 0x8c, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32,
	0xec, 0x06, 0x0a, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a,
	0x06, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x27, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x78, 0x0a,
	0x0d, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x34,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6a, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x70, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x47, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x32, 0xc7,
	0x06, 0x0a, 0x0b, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x06, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x12, 0x24, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x26, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x12, 0x76, 0x0a, 0x0d, 0x48, 0x61,
	0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x11, 0x48, 0x61, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x6e, 0x0a, 0x0a, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x66, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x53, 0x70, 0x65, 0x63, 0x32, 0x92, 0x02, 0x0a, 0x13, 0x53, 0x79, 0x6e,
	0x63, 0x65, 0x64, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x50, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x53, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12,
	0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x0d, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xdc, 0x0d,
	0x0a, 0x0e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x68, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x49, 0x44, 0x12, 0x2b, 0x2e,
	0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x49,
	0x44, 0x12, 0x2b, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08,
	0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49,
	0x44, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x2e, 0x53, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x55, 0x49, 0x44, 0x12, 0x2d, 0x2e, 0x68, 0x61,
	0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x03, 0x42, 0x6f,
	0x78, 0x12, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x6f, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x68,
	0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x6f, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x64, 0x69, 0x72, 0x12, 0x2d, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x64, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7a, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e,
	0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69,
	0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x61, 0x73,
	0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0f,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80,
	0x01, 0x0a, 0x0f, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76,
	0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x68, 0x61, 0x73, 0x68,
	0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6e, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2f,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x02, 0x55, 0x49, 0x12, 0x28, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x2e, 0x55, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xec, 0x01, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5b, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63,
	0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x0e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x34,
	0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61,
	0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70,
	0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9c, 0x01, 0x0a, 0x12,
	0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e,
	0x74, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x38, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72,
	0x70, 0x2e, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x73, 0x68, 0x69, 0x63, 0x6f,
	0x72, 0x70, 0x2f, 0x76, 0x61, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x67, 0x72,
	0x61, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x64, 0x6b, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
>>>>>>> Generate protos for Vagrantfile service
}

var (
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce sync.Once
	file_vagrant_plugin_sdk_plugin_proto_rawDescData = file_vagrant_plugin_sdk_plugin_proto_rawDesc
)

func file_vagrant_plugin_sdk_plugin_proto_rawDescGZIP() []byte {
	file_vagrant_plugin_sdk_plugin_proto_rawDescOnce.Do(func() {
		file_vagrant_plugin_sdk_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_vagrant_plugin_sdk_plugin_proto_rawDescData)
	})
	return file_vagrant_plugin_sdk_plugin_proto_rawDescData
}

<<<<<<< HEAD
var file_vagrant_plugin_sdk_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_vagrant_plugin_sdk_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 140)
var file_vagrant_plugin_sdk_plugin_proto_goTypes = []interface{}{
	(Args_JobInfo_ResourceType)(0),            // 0: hashicorp.vagrant.sdk.Args.JobInfo.ResourceType
	(Args_Target_State_State)(0),              // 1: hashicorp.vagrant.sdk.Args.Target.State.State
	(WinrmInfo_Transport)(0),                  // 2: hashicorp.vagrant.sdk.WinrmInfo.Transport
	(Command_Flag_Type)(0),                    // 3: hashicorp.vagrant.sdk.Command.Flag.Type
	(Command_Arguments_Flag_Type)(0),          // 4: hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	(*Args)(nil),                              // 5: hashicorp.vagrant.sdk.Args
	(*TargetIndex)(nil),                       // 6: hashicorp.vagrant.sdk.TargetIndex
	(*BoxCollection)(nil),                     // 7: hashicorp.vagrant.sdk.BoxCollection
	(*SSHInfo)(nil),                           // 8: hashicorp.vagrant.sdk.SSHInfo
	(*WinrmInfo)(nil),                         // 9: hashicorp.vagrant.sdk.WinrmInfo
	(*FuncSpec)(nil),                          // 10: hashicorp.vagrant.sdk.FuncSpec
	(*Config)(nil),                            // 11: hashicorp.vagrant.sdk.Config
	(*Auth)(nil),                              // 12: hashicorp.vagrant.sdk.Auth
	(*ImplementsResp)(nil),                    // 13: hashicorp.vagrant.sdk.ImplementsResp
	(*TerminalUI)(nil),                        // 14: hashicorp.vagrant.sdk.TerminalUI
	(*Map)(nil),                               // 15: hashicorp.vagrant.sdk.Map
	(*StateBag)(nil),                          // 16: hashicorp.vagrant.sdk.StateBag
	(*Provider)(nil),                          // 17: hashicorp.vagrant.sdk.Provider
	(*Command)(nil),                           // 18: hashicorp.vagrant.sdk.Command
	(*Communicator)(nil),                      // 19: hashicorp.vagrant.sdk.Communicator
	(*Guest)(nil),                             // 20: hashicorp.vagrant.sdk.Guest
	(*Host)(nil),                              // 21: hashicorp.vagrant.sdk.Host
	(*Ref)(nil),                               // 22: hashicorp.vagrant.sdk.Ref
	(*Target)(nil),                            // 23: hashicorp.vagrant.sdk.Target
	(*Project)(nil),                           // 24: hashicorp.vagrant.sdk.Project
	(*Args_DataDir)(nil),                      // 25: hashicorp.vagrant.sdk.Args.DataDir
	(*Args_MetadataSet)(nil),                  // 26: hashicorp.vagrant.sdk.Args.MetadataSet
	(*Args_TerminalUI)(nil),                   // 27: hashicorp.vagrant.sdk.Args.TerminalUI
	(*Args_Logger)(nil),                       // 28: hashicorp.vagrant.sdk.Args.Logger
	(*Args_JobInfo)(nil),                      // 29: hashicorp.vagrant.sdk.Args.JobInfo
	(*Args_Basis)(nil),                        // 30: hashicorp.vagrant.sdk.Args.Basis
	(*Args_Project)(nil),                      // 31: hashicorp.vagrant.sdk.Args.Project
	(*Args_Provider)(nil),                     // 32: hashicorp.vagrant.sdk.Args.Provider
	(*Args_Target)(nil),                       // 33: hashicorp.vagrant.sdk.Args.Target
	(*Args_StateBag)(nil),                     // 34: hashicorp.vagrant.sdk.Args.StateBag
	(*Args_Host)(nil),                         // 35: hashicorp.vagrant.sdk.Args.Host
	(*Args_NamedCapability)(nil),              // 36: hashicorp.vagrant.sdk.Args.NamedCapability
	(*Args_DataDir_Basis)(nil),                // 37: hashicorp.vagrant.sdk.Args.DataDir.Basis
	(*Args_DataDir_Project)(nil),              // 38: hashicorp.vagrant.sdk.Args.DataDir.Project
	(*Args_DataDir_Target)(nil),               // 39: hashicorp.vagrant.sdk.Args.DataDir.Target
	(*Args_DataDir_Component)(nil),            // 40: hashicorp.vagrant.sdk.Args.DataDir.Component
	nil,                                       // 41: hashicorp.vagrant.sdk.Args.MetadataSet.MetadataEntry
	(*Args_Target_State)(nil),                 // 42: hashicorp.vagrant.sdk.Args.Target.State
	(*Args_Target_Machine)(nil),               // 43: hashicorp.vagrant.sdk.Args.Target.Machine
	(*Args_Target_Machine_Box)(nil),           // 44: hashicorp.vagrant.sdk.Args.Target.Machine.Box
	(*Args_Target_Machine_State)(nil),         // 45: hashicorp.vagrant.sdk.Args.Target.Machine.State
	nil,                                       // 46: hashicorp.vagrant.sdk.Args.Target.Machine.Box.MetadataEntry
	(*TargetIndex_Entry)(nil),                 // 47: hashicorp.vagrant.sdk.TargetIndex.Entry
	nil,                                       // 48: hashicorp.vagrant.sdk.TargetIndex.Entry.ExtraDataEntry
	(*FuncSpec_Value)(nil),                    // 49: hashicorp.vagrant.sdk.FuncSpec.Value
	(*FuncSpec_Args)(nil),                     // 50: hashicorp.vagrant.sdk.FuncSpec.Args
	(*Config_ConfigureRequest)(nil),           // 51: hashicorp.vagrant.sdk.Config.ConfigureRequest
	(*Config_StructResp)(nil),                 // 52: hashicorp.vagrant.sdk.Config.StructResp
	(*Config_FieldDocumentation)(nil),         // 53: hashicorp.vagrant.sdk.Config.FieldDocumentation
	(*Config_MapperDocumentation)(nil),        // 54: hashicorp.vagrant.sdk.Config.MapperDocumentation
	(*Config_Documentation)(nil),              // 55: hashicorp.vagrant.sdk.Config.Documentation
	nil,                                       // 56: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	(*Auth_AuthResponse)(nil),                 // 57: hashicorp.vagrant.sdk.Auth.AuthResponse
	(*TerminalUI_IsInteractiveResponse)(nil),  // 58: hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	(*TerminalUI_OutputRequest)(nil),          // 59: hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	(*TerminalUI_Response)(nil),               // 60: hashicorp.vagrant.sdk.TerminalUI.Response
	(*TerminalUI_Event)(nil),                  // 61: hashicorp.vagrant.sdk.TerminalUI.Event
	(*TerminalUI_Event_Input)(nil),            // 62: hashicorp.vagrant.sdk.TerminalUI.Event.Input
	(*TerminalUI_Event_InputResp)(nil),        // 63: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	(*TerminalUI_Event_Status)(nil),           // 64: hashicorp.vagrant.sdk.TerminalUI.Event.Status
	(*TerminalUI_Event_Line)(nil),             // 65: hashicorp.vagrant.sdk.TerminalUI.Event.Line
	(*TerminalUI_Event_Raw)(nil),              // 66: hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	(*TerminalUI_Event_NamedValue)(nil),       // 67: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	(*TerminalUI_Event_NamedValues)(nil),      // 68: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	(*TerminalUI_Event_TableEntry)(nil),       // 69: hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	(*TerminalUI_Event_TableRow)(nil),         // 70: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	(*TerminalUI_Event_Table)(nil),            // 71: hashicorp.vagrant.sdk.TerminalUI.Event.Table
	(*TerminalUI_Event_StepGroup)(nil),        // 72: hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	(*TerminalUI_Event_Step)(nil),             // 73: hashicorp.vagrant.sdk.TerminalUI.Event.Step
	(*Map_Request)(nil),                       // 74: hashicorp.vagrant.sdk.Map.Request
	(*Map_Response)(nil),                      // 75: hashicorp.vagrant.sdk.Map.Response
	(*Map_ListResponse)(nil),                  // 76: hashicorp.vagrant.sdk.Map.ListResponse
	(*StateBag_GetRequest)(nil),               // 77: hashicorp.vagrant.sdk.StateBag.GetRequest
	(*StateBag_GetResponse)(nil),              // 78: hashicorp.vagrant.sdk.StateBag.GetResponse
	(*StateBag_GetOkResponse)(nil),            // 79: hashicorp.vagrant.sdk.StateBag.GetOkResponse
	(*StateBag_PutRequest)(nil),               // 80: hashicorp.vagrant.sdk.StateBag.PutRequest
	(*StateBag_PutResponse)(nil),              // 81: hashicorp.vagrant.sdk.StateBag.PutResponse
	(*StateBag_RemoveRequest)(nil),            // 82: hashicorp.vagrant.sdk.StateBag.RemoveRequest
	(*StateBag_RemoveResponse)(nil),           // 83: hashicorp.vagrant.sdk.StateBag.RemoveResponse
	(*Provider_UsableResp)(nil),               // 84: hashicorp.vagrant.sdk.Provider.UsableResp
	(*Provider_InstalledResp)(nil),            // 85: hashicorp.vagrant.sdk.Provider.InstalledResp
	(*Provider_ActionResp)(nil),               // 86: hashicorp.vagrant.sdk.Provider.ActionResp
	nil,                                       // 87: hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	(*Command_Flag)(nil),                      // 88: hashicorp.vagrant.sdk.Command.Flag
	(*Command_CommandInfo)(nil),               // 89: hashicorp.vagrant.sdk.Command.CommandInfo
	(*Command_CommandInfoResp)(nil),           // 90: hashicorp.vagrant.sdk.Command.CommandInfoResp
	(*Command_ExecuteResp)(nil),               // 91: hashicorp.vagrant.sdk.Command.ExecuteResp
	(*Command_ExecuteReq)(nil),                // 92: hashicorp.vagrant.sdk.Command.ExecuteReq
	(*Command_ExecuteSpecReq)(nil),            // 93: hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	(*Command_Arguments)(nil),                 // 94: hashicorp.vagrant.sdk.Command.Arguments
	(*Command_Arguments_Flag)(nil),            // 95: hashicorp.vagrant.sdk.Command.Arguments.Flag
	(*Communicator_MatchResp)(nil),            // 96: hashicorp.vagrant.sdk.Communicator.MatchResp
	(*Communicator_InitResp)(nil),             // 97: hashicorp.vagrant.sdk.Communicator.InitResp
	(*Communicator_ReadyResp)(nil),            // 98: hashicorp.vagrant.sdk.Communicator.ReadyResp
	(*Communicator_FileTransferResp)(nil),     // 99: hashicorp.vagrant.sdk.Communicator.FileTransferResp
	(*Communicator_ExecutionRequest)(nil),     // 100: hashicorp.vagrant.sdk.Communicator.ExecutionRequest
	(*Communicator_ExecuteResp)(nil),          // 101: hashicorp.vagrant.sdk.Communicator.ExecuteResp
	(*Communicator_TestResp)(nil),             // 102: hashicorp.vagrant.sdk.Communicator.TestResp
	(*Communicator_ResetResp)(nil),            // 103: hashicorp.vagrant.sdk.Communicator.ResetResp
	(*Guest_DetectResp)(nil),                  // 104: hashicorp.vagrant.sdk.Guest.DetectResp
	(*Guest_Capability)(nil),                  // 105: hashicorp.vagrant.sdk.Guest.Capability
	(*Guest_Capability_NamedRequest)(nil),     // 106: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	(*Guest_Capability_CheckResp)(nil),        // 107: hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	(*Guest_Capability_Resp)(nil),             // 108: hashicorp.vagrant.sdk.Guest.Capability.Resp
	(*Host_DetectResp)(nil),                   // 109: hashicorp.vagrant.sdk.Host.DetectResp
	(*Host_Capability)(nil),                   // 110: hashicorp.vagrant.sdk.Host.Capability
	(*Host_Capability_NamedRequest)(nil),      // 111: hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	(*Host_Capability_CheckResp)(nil),         // 112: hashicorp.vagrant.sdk.Host.Capability.CheckResp
	(*Host_Capability_Resp)(nil),              // 113: hashicorp.vagrant.sdk.Host.Capability.Resp
	(*Ref_Box)(nil),                           // 114: hashicorp.vagrant.sdk.Ref.Box
	(*Ref_Basis)(nil),                         // 115: hashicorp.vagrant.sdk.Ref.Basis
	(*Ref_Project)(nil),                       // 116: hashicorp.vagrant.sdk.Ref.Project
	(*Ref_Target)(nil),                        // 117: hashicorp.vagrant.sdk.Ref.Target
	(*Target_ResourceIdResponse)(nil),         // 118: hashicorp.vagrant.sdk.Target.ResourceIdResponse
	(*Target_RecordResponse)(nil),             // 119: hashicorp.vagrant.sdk.Target.RecordResponse
	(*Target_NameResponse)(nil),               // 120: hashicorp.vagrant.sdk.Target.NameResponse
	(*Target_ProjectResponse)(nil),            // 121: hashicorp.vagrant.sdk.Target.ProjectResponse
	(*Target_SetNameRequest)(nil),             // 122: hashicorp.vagrant.sdk.Target.SetNameRequest
	(*Target_VagrantfileNameResponse)(nil),    // 123: hashicorp.vagrant.sdk.Target.VagrantfileNameResponse
	(*Target_VagrantfilePathResponse)(nil),    // 124: hashicorp.vagrant.sdk.Target.VagrantfilePathResponse
	(*Target_UpdatedAtResponse)(nil),          // 125: hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	(*Target_Machine)(nil),                    // 126: hashicorp.vagrant.sdk.Target.Machine
	(*Target_Machine_SetIDRequest)(nil),       // 127: hashicorp.vagrant.sdk.Target.Machine.SetIDRequest
	(*Target_Machine_GetIDResponse)(nil),      // 128: hashicorp.vagrant.sdk.Target.Machine.GetIDResponse
	(*Target_Machine_SetStateRequest)(nil),    // 129: hashicorp.vagrant.sdk.Target.Machine.SetStateRequest
	(*Target_Machine_GetStateResponse)(nil),   // 130: hashicorp.vagrant.sdk.Target.Machine.GetStateResponse
	(*Target_Machine_GetUUIDResponse)(nil),    // 131: hashicorp.vagrant.sdk.Target.Machine.GetUUIDResponse
	(*Target_Machine_SetUUIDRequest)(nil),     // 132: hashicorp.vagrant.sdk.Target.Machine.SetUUIDRequest
	(*Project_TargetRequest)(nil),             // 133: hashicorp.vagrant.sdk.Project.TargetRequest
	(*Project_TargetNamesResponse)(nil),       // 134: hashicorp.vagrant.sdk.Project.TargetNamesResponse
	(*Project_TargetIdsResponse)(nil),         // 135: hashicorp.vagrant.sdk.Project.TargetIdsResponse
	(*Project_MachineAndProvider)(nil),        // 136: hashicorp.vagrant.sdk.Project.MachineAndProvider
	(*Project_MachineNamesResponse)(nil),      // 137: hashicorp.vagrant.sdk.Project.MachineNamesResponse
	(*Project_ActiveMachinesResponse)(nil),    // 138: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse
	(*Project_CwdResponse)(nil),               // 139: hashicorp.vagrant.sdk.Project.CwdResponse
	(*Project_VagrantfileNameResponse)(nil),   // 140: hashicorp.vagrant.sdk.Project.VagrantfileNameResponse
	(*Project_HomeResponse)(nil),              // 141: hashicorp.vagrant.sdk.Project.HomeResponse
	(*Project_LocalDataResponse)(nil),         // 142: hashicorp.vagrant.sdk.Project.LocalDataResponse
	(*Project_TmpResponse)(nil),               // 143: hashicorp.vagrant.sdk.Project.TmpResponse
	(*Project_DefaultPrivateKeyResponse)(nil), // 144: hashicorp.vagrant.sdk.Project.DefaultPrivateKeyResponse
	(*anypb.Any)(nil),                         // 145: google.protobuf.Any
	(*protostructure.Struct)(nil),             // 146: protostructure.Struct
	(*status.Status)(nil),                     // 147: google.rpc.Status
	(*timestamppb.Timestamp)(nil),             // 148: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 149: google.protobuf.Empty
}
var file_vagrant_plugin_sdk_plugin_proto_depIdxs = []int32{
	2,   // 0: hashicorp.vagrant.sdk.WinrmInfo.transport:type_name -> hashicorp.vagrant.sdk.WinrmInfo.Transport
	49,  // 1: hashicorp.vagrant.sdk.FuncSpec.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	49,  // 2: hashicorp.vagrant.sdk.FuncSpec.result:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	41,  // 3: hashicorp.vagrant.sdk.Args.MetadataSet.metadata:type_name -> hashicorp.vagrant.sdk.Args.MetadataSet.MetadataEntry
	0,   // 4: hashicorp.vagrant.sdk.Args.JobInfo.resource_type:type_name -> hashicorp.vagrant.sdk.Args.JobInfo.ResourceType
	1,   // 5: hashicorp.vagrant.sdk.Args.Target.State.state:type_name -> hashicorp.vagrant.sdk.Args.Target.State.State
	46,  // 6: hashicorp.vagrant.sdk.Args.Target.Machine.Box.metadata:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine.Box.MetadataEntry
	48,  // 7: hashicorp.vagrant.sdk.TargetIndex.Entry.extra_data:type_name -> hashicorp.vagrant.sdk.TargetIndex.Entry.ExtraDataEntry
	145, // 8: hashicorp.vagrant.sdk.FuncSpec.Value.value:type_name -> google.protobuf.Any
	49,  // 9: hashicorp.vagrant.sdk.FuncSpec.Args.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	146, // 10: hashicorp.vagrant.sdk.Config.StructResp.struct:type_name -> protostructure.Struct
	56,  // 11: hashicorp.vagrant.sdk.Config.Documentation.fields:type_name -> hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	54,  // 12: hashicorp.vagrant.sdk.Config.Documentation.mappers:type_name -> hashicorp.vagrant.sdk.Config.MapperDocumentation
	53,  // 13: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry.value:type_name -> hashicorp.vagrant.sdk.Config.FieldDocumentation
	63,  // 14: hashicorp.vagrant.sdk.TerminalUI.Response.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	65,  // 15: hashicorp.vagrant.sdk.TerminalUI.Event.line:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Line
	64,  // 16: hashicorp.vagrant.sdk.TerminalUI.Event.status:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Status
	68,  // 17: hashicorp.vagrant.sdk.TerminalUI.Event.named_values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	66,  // 18: hashicorp.vagrant.sdk.TerminalUI.Event.raw:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	71,  // 19: hashicorp.vagrant.sdk.TerminalUI.Event.table:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Table
	72,  // 20: hashicorp.vagrant.sdk.TerminalUI.Event.step_group:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	73,  // 21: hashicorp.vagrant.sdk.TerminalUI.Event.step:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Step
	62,  // 22: hashicorp.vagrant.sdk.TerminalUI.Event.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Input
	147, // 23: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp.error:type_name -> google.rpc.Status
	67,  // 24: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues.values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	69,  // 25: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow.entries:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	70,  // 26: hashicorp.vagrant.sdk.TerminalUI.Event.Table.rows:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	50,  // 27: hashicorp.vagrant.sdk.Map.Request.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	145, // 28: hashicorp.vagrant.sdk.Map.Response.result:type_name -> google.protobuf.Any
	10,  // 29: hashicorp.vagrant.sdk.Map.ListResponse.funcs:type_name -> hashicorp.vagrant.sdk.FuncSpec
	145, // 30: hashicorp.vagrant.sdk.Provider.ActionResp.result:type_name -> google.protobuf.Any
	87,  // 31: hashicorp.vagrant.sdk.Provider.ActionResp.labels:type_name -> hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	3,   // 32: hashicorp.vagrant.sdk.Command.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Flag.Type
	88,  // 33: hashicorp.vagrant.sdk.Command.CommandInfo.flags:type_name -> hashicorp.vagrant.sdk.Command.Flag
	89,  // 34: hashicorp.vagrant.sdk.Command.CommandInfo.subcommands:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	89,  // 35: hashicorp.vagrant.sdk.Command.CommandInfoResp.command_info:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	50,  // 36: hashicorp.vagrant.sdk.Command.ExecuteReq.spec:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	95,  // 37: hashicorp.vagrant.sdk.Command.Arguments.flags:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag
	4,   // 38: hashicorp.vagrant.sdk.Command.Arguments.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	43,  // 39: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.machine:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine
	26,  // 40: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.options:type_name -> hashicorp.vagrant.sdk.Args.MetadataSet
	50,  // 41: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	145, // 42: hashicorp.vagrant.sdk.Guest.Capability.Resp.result:type_name -> google.protobuf.Any
	50,  // 43: hashicorp.vagrant.sdk.Host.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	145, // 44: hashicorp.vagrant.sdk.Host.Capability.Resp.result:type_name -> google.protobuf.Any
	115, // 45: hashicorp.vagrant.sdk.Ref.Project.basis:type_name -> hashicorp.vagrant.sdk.Ref.Basis
	116, // 46: hashicorp.vagrant.sdk.Ref.Target.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	145, // 47: hashicorp.vagrant.sdk.Target.RecordResponse.record:type_name -> google.protobuf.Any
	116, // 48: hashicorp.vagrant.sdk.Target.ProjectResponse.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	148, // 49: hashicorp.vagrant.sdk.Target.UpdatedAtResponse.updated_at:type_name -> google.protobuf.Timestamp
	45,  // 50: hashicorp.vagrant.sdk.Target.Machine.SetStateRequest.state:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	45,  // 51: hashicorp.vagrant.sdk.Target.Machine.GetStateResponse.state:type_name -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	136, // 52: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse.machines:type_name -> hashicorp.vagrant.sdk.Project.MachineAndProvider
	59,  // 53: hashicorp.vagrant.sdk.TerminalUIService.Output:input_type -> hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	61,  // 54: hashicorp.vagrant.sdk.TerminalUIService.Events:input_type -> hashicorp.vagrant.sdk.TerminalUI.Event
	149, // 55: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:input_type -> google.protobuf.Empty
	149, // 56: hashicorp.vagrant.sdk.Mapper.ListMappers:input_type -> google.protobuf.Empty
	74,  // 57: hashicorp.vagrant.sdk.Mapper.Map:input_type -> hashicorp.vagrant.sdk.Map.Request
	77,  // 58: hashicorp.vagrant.sdk.StateBagService.Get:input_type -> hashicorp.vagrant.sdk.StateBag.GetRequest
	77,  // 59: hashicorp.vagrant.sdk.StateBagService.GetOk:input_type -> hashicorp.vagrant.sdk.StateBag.GetRequest
	80,  // 60: hashicorp.vagrant.sdk.StateBagService.Put:input_type -> hashicorp.vagrant.sdk.StateBag.PutRequest
	82,  // 61: hashicorp.vagrant.sdk.StateBagService.Remove:input_type -> hashicorp.vagrant.sdk.StateBag.RemoveRequest
	50,  // 62: hashicorp.vagrant.sdk.ProviderService.Usable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 63: hashicorp.vagrant.sdk.ProviderService.UsableSpec:input_type -> google.protobuf.Empty
	50,  // 64: hashicorp.vagrant.sdk.ProviderService.Installed:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 65: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:input_type -> google.protobuf.Empty
	50,  // 66: hashicorp.vagrant.sdk.ProviderService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 67: hashicorp.vagrant.sdk.ProviderService.InitSpec:input_type -> google.protobuf.Empty
	50,  // 68: hashicorp.vagrant.sdk.ProviderService.ActionUp:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 69: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:input_type -> google.protobuf.Empty
	149, // 70: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 71: hashicorp.vagrant.sdk.ProviderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 72: hashicorp.vagrant.sdk.ProviderService.Documentation:input_type -> google.protobuf.Empty
	149, // 73: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 74: hashicorp.vagrant.sdk.ProvisionerService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 75: hashicorp.vagrant.sdk.ProvisionerService.Documentation:input_type -> google.protobuf.Empty
	149, // 76: hashicorp.vagrant.sdk.CommandService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 77: hashicorp.vagrant.sdk.CommandService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 78: hashicorp.vagrant.sdk.CommandService.Documentation:input_type -> google.protobuf.Empty
	93,  // 79: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:input_type -> hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	92,  // 80: hashicorp.vagrant.sdk.CommandService.Execute:input_type -> hashicorp.vagrant.sdk.Command.ExecuteReq
	149, // 81: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:input_type -> google.protobuf.Empty
	50,  // 82: hashicorp.vagrant.sdk.CommandService.CommandInfo:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 83: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 84: hashicorp.vagrant.sdk.CommunicatorService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 85: hashicorp.vagrant.sdk.CommunicatorService.Documentation:input_type -> google.protobuf.Empty
	149, // 86: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:input_type -> google.protobuf.Empty
	50,  // 87: hashicorp.vagrant.sdk.CommunicatorService.Match:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 88: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:input_type -> google.protobuf.Empty
	50,  // 89: hashicorp.vagrant.sdk.CommunicatorService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 90: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:input_type -> google.protobuf.Empty
	50,  // 91: hashicorp.vagrant.sdk.CommunicatorService.Ready:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 92: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:input_type -> google.protobuf.Empty
	50,  // 93: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 94: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:input_type -> google.protobuf.Empty
	50,  // 95: hashicorp.vagrant.sdk.CommunicatorService.Download:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 96: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:input_type -> google.protobuf.Empty
	50,  // 97: hashicorp.vagrant.sdk.CommunicatorService.Upload:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 98: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:input_type -> google.protobuf.Empty
	50,  // 99: hashicorp.vagrant.sdk.CommunicatorService.Execute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 100: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:input_type -> google.protobuf.Empty
	50,  // 101: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 102: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:input_type -> google.protobuf.Empty
	50,  // 103: hashicorp.vagrant.sdk.CommunicatorService.Test:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 104: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:input_type -> google.protobuf.Empty
	50,  // 105: hashicorp.vagrant.sdk.CommunicatorService.Reset:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 106: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 107: hashicorp.vagrant.sdk.ConfigService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 108: hashicorp.vagrant.sdk.ConfigService.Documentation:input_type -> google.protobuf.Empty
	149, // 109: hashicorp.vagrant.sdk.GuestService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 110: hashicorp.vagrant.sdk.GuestService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 111: hashicorp.vagrant.sdk.GuestService.Documentation:input_type -> google.protobuf.Empty
	50,  // 112: hashicorp.vagrant.sdk.GuestService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 113: hashicorp.vagrant.sdk.GuestService.DetectSpec:input_type -> google.protobuf.Empty
	106, // 114: hashicorp.vagrant.sdk.GuestService.HasCapability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	106, // 115: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	106, // 116: hashicorp.vagrant.sdk.GuestService.Capability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	106, // 117: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	149, // 118: hashicorp.vagrant.sdk.HostService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 119: hashicorp.vagrant.sdk.HostService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 120: hashicorp.vagrant.sdk.HostService.Documentation:input_type -> google.protobuf.Empty
	50,  // 121: hashicorp.vagrant.sdk.HostService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 122: hashicorp.vagrant.sdk.HostService.DetectSpec:input_type -> google.protobuf.Empty
	50,  // 123: hashicorp.vagrant.sdk.HostService.HasCapability:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	149, // 124: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	111, // 125: hashicorp.vagrant.sdk.HostService.Capability:input_type -> hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	111, // 126: hashicorp.vagrant.sdk.HostService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	149, // 127: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:input_type -> google.protobuf.Empty
	51,  // 128: hashicorp.vagrant.sdk.SyncedFolderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	149, // 129: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:input_type -> google.protobuf.Empty
	149, // 130: hashicorp.vagrant.sdk.BasisService.DataDir:input_type -> google.protobuf.Empty
	149, // 131: hashicorp.vagrant.sdk.BasisService.UI:input_type -> google.protobuf.Empty
	149, // 132: hashicorp.vagrant.sdk.BasisService.Host:input_type -> google.protobuf.Empty
	149, // 133: hashicorp.vagrant.sdk.TargetService.ResourceId:input_type -> google.protobuf.Empty
	149, // 134: hashicorp.vagrant.sdk.TargetService.Record:input_type -> google.protobuf.Empty
	149, // 135: hashicorp.vagrant.sdk.TargetService.Name:input_type -> google.protobuf.Empty
	122, // 136: hashicorp.vagrant.sdk.TargetService.SetName:input_type -> hashicorp.vagrant.sdk.Target.SetNameRequest
	149, // 137: hashicorp.vagrant.sdk.TargetService.Project:input_type -> google.protobuf.Empty
	149, // 138: hashicorp.vagrant.sdk.TargetService.Metadata:input_type -> google.protobuf.Empty
	149, // 139: hashicorp.vagrant.sdk.TargetService.DataDir:input_type -> google.protobuf.Empty
	149, // 140: hashicorp.vagrant.sdk.TargetService.State:input_type -> google.protobuf.Empty
	149, // 141: hashicorp.vagrant.sdk.TargetService.UI:input_type -> google.protobuf.Empty
	145, // 142: hashicorp.vagrant.sdk.TargetService.Specialize:input_type -> google.protobuf.Any
	149, // 143: hashicorp.vagrant.sdk.TargetService.Provider:input_type -> google.protobuf.Empty
	149, // 144: hashicorp.vagrant.sdk.TargetService.VagrantfileName:input_type -> google.protobuf.Empty
	149, // 145: hashicorp.vagrant.sdk.TargetService.VagrantfilePath:input_type -> google.protobuf.Empty
	149, // 146: hashicorp.vagrant.sdk.TargetService.UpdatedAt:input_type -> google.protobuf.Empty
	149, // 147: hashicorp.vagrant.sdk.TargetMachineService.ResourceId:input_type -> google.protobuf.Empty
	149, // 148: hashicorp.vagrant.sdk.TargetMachineService.Record:input_type -> google.protobuf.Empty
	149, // 149: hashicorp.vagrant.sdk.TargetMachineService.Name:input_type -> google.protobuf.Empty
	122, // 150: hashicorp.vagrant.sdk.TargetMachineService.SetName:input_type -> hashicorp.vagrant.sdk.Target.SetNameRequest
	149, // 151: hashicorp.vagrant.sdk.TargetMachineService.Project:input_type -> google.protobuf.Empty
	149, // 152: hashicorp.vagrant.sdk.TargetMachineService.Metadata:input_type -> google.protobuf.Empty
	149, // 153: hashicorp.vagrant.sdk.TargetMachineService.DataDir:input_type -> google.protobuf.Empty
	149, // 154: hashicorp.vagrant.sdk.TargetMachineService.State:input_type -> google.protobuf.Empty
	149, // 155: hashicorp.vagrant.sdk.TargetMachineService.UI:input_type -> google.protobuf.Empty
	145, // 156: hashicorp.vagrant.sdk.TargetMachineService.Specialize:input_type -> google.protobuf.Any
	149, // 157: hashicorp.vagrant.sdk.TargetMachineService.Provider:input_type -> google.protobuf.Empty
	149, // 158: hashicorp.vagrant.sdk.TargetMachineService.VagrantfileName:input_type -> google.protobuf.Empty
	149, // 159: hashicorp.vagrant.sdk.TargetMachineService.VagrantfilePath:input_type -> google.protobuf.Empty
	149, // 160: hashicorp.vagrant.sdk.TargetMachineService.UpdatedAt:input_type -> google.protobuf.Empty
	127, // 161: hashicorp.vagrant.sdk.TargetMachineService.SetID:input_type -> hashicorp.vagrant.sdk.Target.Machine.SetIDRequest
	149, // 162: hashicorp.vagrant.sdk.TargetMachineService.GetID:input_type -> google.protobuf.Empty
	129, // 163: hashicorp.vagrant.sdk.TargetMachineService.SetState:input_type -> hashicorp.vagrant.sdk.Target.Machine.SetStateRequest
	149, // 164: hashicorp.vagrant.sdk.TargetMachineService.GetState:input_type -> google.protobuf.Empty
	132, // 165: hashicorp.vagrant.sdk.TargetMachineService.SetUUID:input_type -> hashicorp.vagrant.sdk.Target.Machine.SetUUIDRequest
	149, // 166: hashicorp.vagrant.sdk.TargetMachineService.GetUUID:input_type -> google.protobuf.Empty
	149, // 167: hashicorp.vagrant.sdk.TargetMachineService.Box:input_type -> google.protobuf.Empty
	149, // 168: hashicorp.vagrant.sdk.ProjectService.MachineNames:input_type -> google.protobuf.Empty
	149, // 169: hashicorp.vagrant.sdk.ProjectService.CWD:input_type -> google.protobuf.Empty
	149, // 170: hashicorp.vagrant.sdk.ProjectService.DataDir:input_type -> google.protobuf.Empty
	149, // 171: hashicorp.vagrant.sdk.ProjectService.VagrantfileName:input_type -> google.protobuf.Empty
	149, // 172: hashicorp.vagrant.sdk.ProjectService.UI:input_type -> google.protobuf.Empty
	149, // 173: hashicorp.vagrant.sdk.ProjectService.Home:input_type -> google.protobuf.Empty
	149, // 174: hashicorp.vagrant.sdk.ProjectService.LocalData:input_type -> google.protobuf.Empty
	149, // 175: hashicorp.vagrant.sdk.ProjectService.Tmp:input_type -> google.protobuf.Empty
	149, // 176: hashicorp.vagrant.sdk.ProjectService.DefaultPrivateKey:input_type -> google.protobuf.Empty
	149, // 177: hashicorp.vagrant.sdk.ProjectService.Host:input_type -> google.protobuf.Empty
	133, // 178: hashicorp.vagrant.sdk.ProjectService.Target:input_type -> hashicorp.vagrant.sdk.Project.TargetRequest
	149, // 179: hashicorp.vagrant.sdk.ProjectService.TargetNames:input_type -> google.protobuf.Empty
	149, // 180: hashicorp.vagrant.sdk.ProjectService.TargetIds:input_type -> google.protobuf.Empty
	149, // 181: hashicorp.vagrant.sdk.TerminalUIService.Output:output_type -> google.protobuf.Empty
	60,  // 182: hashicorp.vagrant.sdk.TerminalUIService.Events:output_type -> hashicorp.vagrant.sdk.TerminalUI.Response
	58,  // 183: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:output_type -> hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	76,  // 184: hashicorp.vagrant.sdk.Mapper.ListMappers:output_type -> hashicorp.vagrant.sdk.Map.ListResponse
	75,  // 185: hashicorp.vagrant.sdk.Mapper.Map:output_type -> hashicorp.vagrant.sdk.Map.Response
	78,  // 186: hashicorp.vagrant.sdk.StateBagService.Get:output_type -> hashicorp.vagrant.sdk.StateBag.GetResponse
	79,  // 187: hashicorp.vagrant.sdk.StateBagService.GetOk:output_type -> hashicorp.vagrant.sdk.StateBag.GetOkResponse
	81,  // 188: hashicorp.vagrant.sdk.StateBagService.Put:output_type -> hashicorp.vagrant.sdk.StateBag.PutResponse
	83,  // 189: hashicorp.vagrant.sdk.StateBagService.Remove:output_type -> hashicorp.vagrant.sdk.StateBag.RemoveResponse
	84,  // 190: hashicorp.vagrant.sdk.ProviderService.Usable:output_type -> hashicorp.vagrant.sdk.Provider.UsableResp
	10,  // 191: hashicorp.vagrant.sdk.ProviderService.UsableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	85,  // 192: hashicorp.vagrant.sdk.ProviderService.Installed:output_type -> hashicorp.vagrant.sdk.Provider.InstalledResp
	10,  // 193: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	149, // 194: hashicorp.vagrant.sdk.ProviderService.Init:output_type -> google.protobuf.Empty
	10,  // 195: hashicorp.vagrant.sdk.ProviderService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	86,  // 196: hashicorp.vagrant.sdk.ProviderService.ActionUp:output_type -> hashicorp.vagrant.sdk.Provider.ActionResp
	10,  // 197: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	52,  // 198: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 199: hashicorp.vagrant.sdk.ProviderService.Configure:output_type -> google.protobuf.Empty
	55,  // 200: hashicorp.vagrant.sdk.ProviderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	52,  // 201: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 202: hashicorp.vagrant.sdk.ProvisionerService.Configure:output_type -> google.protobuf.Empty
	55,  // 203: hashicorp.vagrant.sdk.ProvisionerService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	52,  // 204: hashicorp.vagrant.sdk.CommandService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 205: hashicorp.vagrant.sdk.CommandService.Configure:output_type -> google.protobuf.Empty
	55,  // 206: hashicorp.vagrant.sdk.CommandService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	10,  // 207: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	91,  // 208: hashicorp.vagrant.sdk.CommandService.Execute:output_type -> hashicorp.vagrant.sdk.Command.ExecuteResp
	10,  // 209: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	90,  // 210: hashicorp.vagrant.sdk.CommandService.CommandInfo:output_type -> hashicorp.vagrant.sdk.Command.CommandInfoResp
	52,  // 211: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 212: hashicorp.vagrant.sdk.CommunicatorService.Configure:output_type -> google.protobuf.Empty
	55,  // 213: hashicorp.vagrant.sdk.CommunicatorService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	10,  // 214: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	96,  // 215: hashicorp.vagrant.sdk.CommunicatorService.Match:output_type -> hashicorp.vagrant.sdk.Communicator.MatchResp
	10,  // 216: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	97,  // 217: hashicorp.vagrant.sdk.CommunicatorService.Init:output_type -> hashicorp.vagrant.sdk.Communicator.InitResp
	10,  // 218: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	98,  // 219: hashicorp.vagrant.sdk.CommunicatorService.Ready:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	10,  // 220: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	98,  // 221: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	10,  // 222: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	99,  // 223: hashicorp.vagrant.sdk.CommunicatorService.Download:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	10,  // 224: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	99,  // 225: hashicorp.vagrant.sdk.CommunicatorService.Upload:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	10,  // 226: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	101, // 227: hashicorp.vagrant.sdk.CommunicatorService.Execute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	10,  // 228: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	101, // 229: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	10,  // 230: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	102, // 231: hashicorp.vagrant.sdk.CommunicatorService.Test:output_type -> hashicorp.vagrant.sdk.Communicator.TestResp
	10,  // 232: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	103, // 233: hashicorp.vagrant.sdk.CommunicatorService.Reset:output_type -> hashicorp.vagrant.sdk.Communicator.ResetResp
	52,  // 234: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 235: hashicorp.vagrant.sdk.ConfigService.Configure:output_type -> google.protobuf.Empty
	55,  // 236: hashicorp.vagrant.sdk.ConfigService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	52,  // 237: hashicorp.vagrant.sdk.GuestService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 238: hashicorp.vagrant.sdk.GuestService.Configure:output_type -> google.protobuf.Empty
	55,  // 239: hashicorp.vagrant.sdk.GuestService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	104, // 240: hashicorp.vagrant.sdk.GuestService.Detect:output_type -> hashicorp.vagrant.sdk.Guest.DetectResp
	10,  // 241: hashicorp.vagrant.sdk.GuestService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	107, // 242: hashicorp.vagrant.sdk.GuestService.HasCapability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	10,  // 243: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	108, // 244: hashicorp.vagrant.sdk.GuestService.Capability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.Resp
	10,  // 245: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	52,  // 246: hashicorp.vagrant.sdk.HostService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 247: hashicorp.vagrant.sdk.HostService.Configure:output_type -> google.protobuf.Empty
	55,  // 248: hashicorp.vagrant.sdk.HostService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	109, // 249: hashicorp.vagrant.sdk.HostService.Detect:output_type -> hashicorp.vagrant.sdk.Host.DetectResp
	10,  // 250: hashicorp.vagrant.sdk.HostService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	112, // 251: hashicorp.vagrant.sdk.HostService.HasCapability:output_type -> hashicorp.vagrant.sdk.Host.Capability.CheckResp
	10,  // 252: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	113, // 253: hashicorp.vagrant.sdk.HostService.Capability:output_type -> hashicorp.vagrant.sdk.Host.Capability.Resp
	10,  // 254: hashicorp.vagrant.sdk.HostService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	52,  // 255: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	149, // 256: hashicorp.vagrant.sdk.SyncedFolderService.Configure:output_type -> google.protobuf.Empty
	55,  // 257: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	37,  // 258: hashicorp.vagrant.sdk.BasisService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Basis
	27,  // 259: hashicorp.vagrant.sdk.BasisService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	35,  // 260: hashicorp.vagrant.sdk.BasisService.Host:output_type -> hashicorp.vagrant.sdk.Args.Host
	118, // 261: hashicorp.vagrant.sdk.TargetService.ResourceId:output_type -> hashicorp.vagrant.sdk.Target.ResourceIdResponse
	119, // 262: hashicorp.vagrant.sdk.TargetService.Record:output_type -> hashicorp.vagrant.sdk.Target.RecordResponse
	120, // 263: hashicorp.vagrant.sdk.TargetService.Name:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	149, // 264: hashicorp.vagrant.sdk.TargetService.SetName:output_type -> google.protobuf.Empty
	31,  // 265: hashicorp.vagrant.sdk.TargetService.Project:output_type -> hashicorp.vagrant.sdk.Args.Project
	26,  // 266: hashicorp.vagrant.sdk.TargetService.Metadata:output_type -> hashicorp.vagrant.sdk.Args.MetadataSet
	39,  // 267: hashicorp.vagrant.sdk.TargetService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Target
	42,  // 268: hashicorp.vagrant.sdk.TargetService.State:output_type -> hashicorp.vagrant.sdk.Args.Target.State
	27,  // 269: hashicorp.vagrant.sdk.TargetService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	145, // 270: hashicorp.vagrant.sdk.TargetService.Specialize:output_type -> google.protobuf.Any
	32,  // 271: hashicorp.vagrant.sdk.TargetService.Provider:output_type -> hashicorp.vagrant.sdk.Args.Provider
	123, // 272: hashicorp.vagrant.sdk.TargetService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Target.VagrantfileNameResponse
	124, // 273: hashicorp.vagrant.sdk.TargetService.VagrantfilePath:output_type -> hashicorp.vagrant.sdk.Target.VagrantfilePathResponse
	125, // 274: hashicorp.vagrant.sdk.TargetService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	118, // 275: hashicorp.vagrant.sdk.TargetMachineService.ResourceId:output_type -> hashicorp.vagrant.sdk.Target.ResourceIdResponse
	119, // 276: hashicorp.vagrant.sdk.TargetMachineService.Record:output_type -> hashicorp.vagrant.sdk.Target.RecordResponse
	120, // 277: hashicorp.vagrant.sdk.TargetMachineService.Name:output_type -> hashicorp.vagrant.sdk.Target.NameResponse
	149, // 278: hashicorp.vagrant.sdk.TargetMachineService.SetName:output_type -> google.protobuf.Empty
	31,  // 279: hashicorp.vagrant.sdk.TargetMachineService.Project:output_type -> hashicorp.vagrant.sdk.Args.Project
	26,  // 280: hashicorp.vagrant.sdk.TargetMachineService.Metadata:output_type -> hashicorp.vagrant.sdk.Args.MetadataSet
	39,  // 281: hashicorp.vagrant.sdk.TargetMachineService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Target
	42,  // 282: hashicorp.vagrant.sdk.TargetMachineService.State:output_type -> hashicorp.vagrant.sdk.Args.Target.State
	27,  // 283: hashicorp.vagrant.sdk.TargetMachineService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	145, // 284: hashicorp.vagrant.sdk.TargetMachineService.Specialize:output_type -> google.protobuf.Any
	32,  // 285: hashicorp.vagrant.sdk.TargetMachineService.Provider:output_type -> hashicorp.vagrant.sdk.Args.Provider
	123, // 286: hashicorp.vagrant.sdk.TargetMachineService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Target.VagrantfileNameResponse
	124, // 287: hashicorp.vagrant.sdk.TargetMachineService.VagrantfilePath:output_type -> hashicorp.vagrant.sdk.Target.VagrantfilePathResponse
	125, // 288: hashicorp.vagrant.sdk.TargetMachineService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Target.UpdatedAtResponse
	149, // 289: hashicorp.vagrant.sdk.TargetMachineService.SetID:output_type -> google.protobuf.Empty
	128, // 290: hashicorp.vagrant.sdk.TargetMachineService.GetID:output_type -> hashicorp.vagrant.sdk.Target.Machine.GetIDResponse
	149, // 291: hashicorp.vagrant.sdk.TargetMachineService.SetState:output_type -> google.protobuf.Empty
	45,  // 292: hashicorp.vagrant.sdk.TargetMachineService.GetState:output_type -> hashicorp.vagrant.sdk.Args.Target.Machine.State
	149, // 293: hashicorp.vagrant.sdk.TargetMachineService.SetUUID:output_type -> google.protobuf.Empty
	131, // 294: hashicorp.vagrant.sdk.TargetMachineService.GetUUID:output_type -> hashicorp.vagrant.sdk.Target.Machine.GetUUIDResponse
	44,  // 295: hashicorp.vagrant.sdk.TargetMachineService.Box:output_type -> hashicorp.vagrant.sdk.Args.Target.Machine.Box
	137, // 296: hashicorp.vagrant.sdk.ProjectService.MachineNames:output_type -> hashicorp.vagrant.sdk.Project.MachineNamesResponse
	139, // 297: hashicorp.vagrant.sdk.ProjectService.CWD:output_type -> hashicorp.vagrant.sdk.Project.CwdResponse
	38,  // 298: hashicorp.vagrant.sdk.ProjectService.DataDir:output_type -> hashicorp.vagrant.sdk.Args.DataDir.Project
	140, // 299: hashicorp.vagrant.sdk.ProjectService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Project.VagrantfileNameResponse
	27,  // 300: hashicorp.vagrant.sdk.ProjectService.UI:output_type -> hashicorp.vagrant.sdk.Args.TerminalUI
	141, // 301: hashicorp.vagrant.sdk.ProjectService.Home:output_type -> hashicorp.vagrant.sdk.Project.HomeResponse
	142, // 302: hashicorp.vagrant.sdk.ProjectService.LocalData:output_type -> hashicorp.vagrant.sdk.Project.LocalDataResponse
	143, // 303: hashicorp.vagrant.sdk.ProjectService.Tmp:output_type -> hashicorp.vagrant.sdk.Project.TmpResponse
	144, // 304: hashicorp.vagrant.sdk.ProjectService.DefaultPrivateKey:output_type -> hashicorp.vagrant.sdk.Project.DefaultPrivateKeyResponse
	35,  // 305: hashicorp.vagrant.sdk.ProjectService.Host:output_type -> hashicorp.vagrant.sdk.Args.Host
	33,  // 306: hashicorp.vagrant.sdk.ProjectService.Target:output_type -> hashicorp.vagrant.sdk.Args.Target
	134, // 307: hashicorp.vagrant.sdk.ProjectService.TargetNames:output_type -> hashicorp.vagrant.sdk.Project.TargetNamesResponse
	135, // 308: hashicorp.vagrant.sdk.ProjectService.TargetIds:output_type -> hashicorp.vagrant.sdk.Project.TargetIdsResponse
	181, // [181:309] is the sub-list for method output_type
	53,  // [53:181] is the sub-list for method input_type
	53,  // [53:53] is the sub-list for extension type_name
	53,  // [53:53] is the sub-list for extension extendee
	0,   // [0:53] is the sub-list for field type_name
=======
var file_vagrant_plugin_sdk_plugin_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_vagrant_plugin_sdk_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 144)
var file_vagrant_plugin_sdk_plugin_proto_goTypes = []interface{}{
	(Args_WinrmInfo_Transport)(0),              // 0: hashicorp.vagrant.sdk.Args.WinrmInfo.Transport
	(Command_Flag_Type)(0),                     // 1: hashicorp.vagrant.sdk.Command.Flag.Type
	(Command_Arguments_Flag_Type)(0),           // 2: hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	(*Args)(nil),                               // 3: hashicorp.vagrant.sdk.Args
	(*FuncSpec)(nil),                           // 4: hashicorp.vagrant.sdk.FuncSpec
	(*Config)(nil),                             // 5: hashicorp.vagrant.sdk.Config
	(*Auth)(nil),                               // 6: hashicorp.vagrant.sdk.Auth
	(*ImplementsResp)(nil),                     // 7: hashicorp.vagrant.sdk.ImplementsResp
	(*TerminalUI)(nil),                         // 8: hashicorp.vagrant.sdk.TerminalUI
	(*Map)(nil),                                // 9: hashicorp.vagrant.sdk.Map
	(*Provider)(nil),                           // 10: hashicorp.vagrant.sdk.Provider
	(*Command)(nil),                            // 11: hashicorp.vagrant.sdk.Command
	(*Communicator)(nil),                       // 12: hashicorp.vagrant.sdk.Communicator
	(*Guest)(nil),                              // 13: hashicorp.vagrant.sdk.Guest
	(*Host)(nil),                               // 14: hashicorp.vagrant.sdk.Host
	(*Ref)(nil),                                // 15: hashicorp.vagrant.sdk.Ref
	(*Machine)(nil),                            // 16: hashicorp.vagrant.sdk.Machine
	(*Project)(nil),                            // 17: hashicorp.vagrant.sdk.Project
	(*Vagrantfile)(nil),                        // 18: hashicorp.vagrant.sdk.Vagrantfile
	(*Args_DataDir)(nil),                       // 19: hashicorp.vagrant.sdk.Args.DataDir
	(*Args_MachineIndex)(nil),                  // 20: hashicorp.vagrant.sdk.Args.MachineIndex
	(*Args_BoxCollection)(nil),                 // 21: hashicorp.vagrant.sdk.Args.BoxCollection
	(*Args_Box)(nil),                           // 22: hashicorp.vagrant.sdk.Args.Box
	(*Args_Project)(nil),                       // 23: hashicorp.vagrant.sdk.Args.Project
	(*Args_Machine)(nil),                       // 24: hashicorp.vagrant.sdk.Args.Machine
	(*Args_Configuration)(nil),                 // 25: hashicorp.vagrant.sdk.Args.Configuration
	(*Args_LabelSet)(nil),                      // 26: hashicorp.vagrant.sdk.Args.LabelSet
	(*Args_Options)(nil),                       // 27: hashicorp.vagrant.sdk.Args.Options
	(*Args_Vagrantfile)(nil),                   // 28: hashicorp.vagrant.sdk.Args.Vagrantfile
	(*Args_JobInfo)(nil),                       // 29: hashicorp.vagrant.sdk.Args.JobInfo
	(*Args_Logger)(nil),                        // 30: hashicorp.vagrant.sdk.Args.Logger
	(*Args_TerminalUI)(nil),                    // 31: hashicorp.vagrant.sdk.Args.TerminalUI
	(*Args_StateBag)(nil),                      // 32: hashicorp.vagrant.sdk.Args.StateBag
	(*Args_MachineState)(nil),                  // 33: hashicorp.vagrant.sdk.Args.MachineState
	(*Args_SSHInfo)(nil),                       // 34: hashicorp.vagrant.sdk.Args.SSHInfo
	(*Args_WinrmInfo)(nil),                     // 35: hashicorp.vagrant.sdk.Args.WinrmInfo
	(*Args_DataDir_Basis)(nil),                 // 36: hashicorp.vagrant.sdk.Args.DataDir.Basis
	(*Args_DataDir_Project)(nil),               // 37: hashicorp.vagrant.sdk.Args.DataDir.Project
	(*Args_DataDir_Machine)(nil),               // 38: hashicorp.vagrant.sdk.Args.DataDir.Machine
	(*Args_DataDir_Component)(nil),             // 39: hashicorp.vagrant.sdk.Args.DataDir.Component
	(*Args_MachineIndex_Entry)(nil),            // 40: hashicorp.vagrant.sdk.Args.MachineIndex.Entry
	nil,                                        // 41: hashicorp.vagrant.sdk.Args.Box.MetadataEntry
	(*Args_Configuration_Vagrant)(nil),         // 42: hashicorp.vagrant.sdk.Args.Configuration.Vagrant
	(*Args_Configuration_VM)(nil),              // 43: hashicorp.vagrant.sdk.Args.Configuration.VM
	(*Args_Configuration_Provider)(nil),        // 44: hashicorp.vagrant.sdk.Args.Configuration.Provider
	nil,                                        // 45: hashicorp.vagrant.sdk.Args.LabelSet.LabelsEntry
	nil,                                        // 46: hashicorp.vagrant.sdk.Args.StateBag.DataEntry
	(*Args_StateBag_Value)(nil),                // 47: hashicorp.vagrant.sdk.Args.StateBag.Value
	(*FuncSpec_Value)(nil),                     // 48: hashicorp.vagrant.sdk.FuncSpec.Value
	(*FuncSpec_Args)(nil),                      // 49: hashicorp.vagrant.sdk.FuncSpec.Args
	(*Config_ConfigureRequest)(nil),            // 50: hashicorp.vagrant.sdk.Config.ConfigureRequest
	(*Config_StructResp)(nil),                  // 51: hashicorp.vagrant.sdk.Config.StructResp
	(*Config_FieldDocumentation)(nil),          // 52: hashicorp.vagrant.sdk.Config.FieldDocumentation
	(*Config_MapperDocumentation)(nil),         // 53: hashicorp.vagrant.sdk.Config.MapperDocumentation
	(*Config_Documentation)(nil),               // 54: hashicorp.vagrant.sdk.Config.Documentation
	nil,                                        // 55: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	(*Auth_AuthResponse)(nil),                  // 56: hashicorp.vagrant.sdk.Auth.AuthResponse
	(*TerminalUI_IsInteractiveResponse)(nil),   // 57: hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	(*TerminalUI_OutputRequest)(nil),           // 58: hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	(*TerminalUI_Response)(nil),                // 59: hashicorp.vagrant.sdk.TerminalUI.Response
	(*TerminalUI_Event)(nil),                   // 60: hashicorp.vagrant.sdk.TerminalUI.Event
	(*TerminalUI_Event_Input)(nil),             // 61: hashicorp.vagrant.sdk.TerminalUI.Event.Input
	(*TerminalUI_Event_InputResp)(nil),         // 62: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	(*TerminalUI_Event_Status)(nil),            // 63: hashicorp.vagrant.sdk.TerminalUI.Event.Status
	(*TerminalUI_Event_Line)(nil),              // 64: hashicorp.vagrant.sdk.TerminalUI.Event.Line
	(*TerminalUI_Event_Raw)(nil),               // 65: hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	(*TerminalUI_Event_NamedValue)(nil),        // 66: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	(*TerminalUI_Event_NamedValues)(nil),       // 67: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	(*TerminalUI_Event_TableEntry)(nil),        // 68: hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	(*TerminalUI_Event_TableRow)(nil),          // 69: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	(*TerminalUI_Event_Table)(nil),             // 70: hashicorp.vagrant.sdk.TerminalUI.Event.Table
	(*TerminalUI_Event_StepGroup)(nil),         // 71: hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	(*TerminalUI_Event_Step)(nil),              // 72: hashicorp.vagrant.sdk.TerminalUI.Event.Step
	(*Map_Request)(nil),                        // 73: hashicorp.vagrant.sdk.Map.Request
	(*Map_Response)(nil),                       // 74: hashicorp.vagrant.sdk.Map.Response
	(*Map_ListResponse)(nil),                   // 75: hashicorp.vagrant.sdk.Map.ListResponse
	(*Provider_UsableResp)(nil),                // 76: hashicorp.vagrant.sdk.Provider.UsableResp
	(*Provider_InstalledResp)(nil),             // 77: hashicorp.vagrant.sdk.Provider.InstalledResp
	(*Provider_ActionResp)(nil),                // 78: hashicorp.vagrant.sdk.Provider.ActionResp
	nil,                                        // 79: hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	(*Command_Flag)(nil),                       // 80: hashicorp.vagrant.sdk.Command.Flag
	(*Command_CommandInfo)(nil),                // 81: hashicorp.vagrant.sdk.Command.CommandInfo
	(*Command_CommandInfoResp)(nil),            // 82: hashicorp.vagrant.sdk.Command.CommandInfoResp
	(*Command_ExecuteResp)(nil),                // 83: hashicorp.vagrant.sdk.Command.ExecuteResp
	(*Command_ExecuteReq)(nil),                 // 84: hashicorp.vagrant.sdk.Command.ExecuteReq
	(*Command_ExecuteSpecReq)(nil),             // 85: hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	(*Command_Arguments)(nil),                  // 86: hashicorp.vagrant.sdk.Command.Arguments
	(*Command_Arguments_Flag)(nil),             // 87: hashicorp.vagrant.sdk.Command.Arguments.Flag
	(*Communicator_MatchResp)(nil),             // 88: hashicorp.vagrant.sdk.Communicator.MatchResp
	(*Communicator_InitResp)(nil),              // 89: hashicorp.vagrant.sdk.Communicator.InitResp
	(*Communicator_ReadyResp)(nil),             // 90: hashicorp.vagrant.sdk.Communicator.ReadyResp
	(*Communicator_FileTransferResp)(nil),      // 91: hashicorp.vagrant.sdk.Communicator.FileTransferResp
	(*Communicator_ExecutionRequest)(nil),      // 92: hashicorp.vagrant.sdk.Communicator.ExecutionRequest
	(*Communicator_ExecuteResp)(nil),           // 93: hashicorp.vagrant.sdk.Communicator.ExecuteResp
	(*Communicator_TestResp)(nil),              // 94: hashicorp.vagrant.sdk.Communicator.TestResp
	(*Communicator_ResetResp)(nil),             // 95: hashicorp.vagrant.sdk.Communicator.ResetResp
	(*Guest_DetectResp)(nil),                   // 96: hashicorp.vagrant.sdk.Guest.DetectResp
	(*Guest_Capability)(nil),                   // 97: hashicorp.vagrant.sdk.Guest.Capability
	(*Guest_Capability_NamedRequest)(nil),      // 98: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	(*Guest_Capability_CheckResp)(nil),         // 99: hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	(*Guest_Capability_Resp)(nil),              // 100: hashicorp.vagrant.sdk.Guest.Capability.Resp
	(*Host_DetectResp)(nil),                    // 101: hashicorp.vagrant.sdk.Host.DetectResp
	(*Host_Capability)(nil),                    // 102: hashicorp.vagrant.sdk.Host.Capability
	(*Host_Capability_NamedRequest)(nil),       // 103: hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	(*Host_Capability_CheckResp)(nil),          // 104: hashicorp.vagrant.sdk.Host.Capability.CheckResp
	(*Host_Capability_Resp)(nil),               // 105: hashicorp.vagrant.sdk.Host.Capability.Resp
	(*Ref_Box)(nil),                            // 106: hashicorp.vagrant.sdk.Ref.Box
	(*Ref_Project)(nil),                        // 107: hashicorp.vagrant.sdk.Ref.Project
	(*Ref_Machine)(nil),                        // 108: hashicorp.vagrant.sdk.Ref.Machine
	(*Machine_SetNameRequest)(nil),             // 109: hashicorp.vagrant.sdk.Machine.SetNameRequest
	(*Machine_SetNameResponse)(nil),            // 110: hashicorp.vagrant.sdk.Machine.SetNameResponse
	(*Machine_GetNameRequest)(nil),             // 111: hashicorp.vagrant.sdk.Machine.GetNameRequest
	(*Machine_GetNameResponse)(nil),            // 112: hashicorp.vagrant.sdk.Machine.GetNameResponse
	(*Machine_SetIDRequest)(nil),               // 113: hashicorp.vagrant.sdk.Machine.SetIDRequest
	(*Machine_SetIDResponse)(nil),              // 114: hashicorp.vagrant.sdk.Machine.SetIDResponse
	(*Machine_GetIDRequest)(nil),               // 115: hashicorp.vagrant.sdk.Machine.GetIDRequest
	(*Machine_GetIDResponse)(nil),              // 116: hashicorp.vagrant.sdk.Machine.GetIDResponse
	(*Machine_SetStateRequest)(nil),            // 117: hashicorp.vagrant.sdk.Machine.SetStateRequest
	(*Machine_SetStateResponse)(nil),           // 118: hashicorp.vagrant.sdk.Machine.SetStateResponse
	(*Machine_GetStateRequest)(nil),            // 119: hashicorp.vagrant.sdk.Machine.GetStateRequest
	(*Machine_GetStateResponse)(nil),           // 120: hashicorp.vagrant.sdk.Machine.GetStateResponse
	(*Machine_GetUUIDRequest)(nil),             // 121: hashicorp.vagrant.sdk.Machine.GetUUIDRequest
	(*Machine_GetUUIDResponse)(nil),            // 122: hashicorp.vagrant.sdk.Machine.GetUUIDResponse
	(*Machine_SetUUIDRequest)(nil),             // 123: hashicorp.vagrant.sdk.Machine.SetUUIDRequest
	(*Machine_SetUUIDResponse)(nil),            // 124: hashicorp.vagrant.sdk.Machine.SetUUIDResponse
	(*Machine_BoxRequest)(nil),                 // 125: hashicorp.vagrant.sdk.Machine.BoxRequest
	(*Machine_BoxResponse)(nil),                // 126: hashicorp.vagrant.sdk.Machine.BoxResponse
	(*Machine_DatadirRequest)(nil),             // 127: hashicorp.vagrant.sdk.Machine.DatadirRequest
	(*Machine_DatadirResponse)(nil),            // 128: hashicorp.vagrant.sdk.Machine.DatadirResponse
	(*Machine_LocalDataPathRequest)(nil),       // 129: hashicorp.vagrant.sdk.Machine.LocalDataPathRequest
	(*Machine_LocalDataPathResponse)(nil),      // 130: hashicorp.vagrant.sdk.Machine.LocalDataPathResponse
	(*Machine_ProviderRequest)(nil),            // 131: hashicorp.vagrant.sdk.Machine.ProviderRequest
	(*Machine_ProviderResponse)(nil),           // 132: hashicorp.vagrant.sdk.Machine.ProviderResponse
	(*Machine_VagrantfileNameRequest)(nil),     // 133: hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest
	(*Machine_VagrantfileNameResponse)(nil),    // 134: hashicorp.vagrant.sdk.Machine.VagrantfileNameResponse
	(*Machine_VagrantfilePathRequest)(nil),     // 135: hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest
	(*Machine_VagrantfilePathResponse)(nil),    // 136: hashicorp.vagrant.sdk.Machine.VagrantfilePathResponse
	(*Machine_UpdatedAtRequest)(nil),           // 137: hashicorp.vagrant.sdk.Machine.UpdatedAtRequest
	(*Machine_UpdatedAtResponse)(nil),          // 138: hashicorp.vagrant.sdk.Machine.UpdatedAtResponse
	(*Machine_UIRequest)(nil),                  // 139: hashicorp.vagrant.sdk.Machine.UIRequest
	(*Machine_UIResponse)(nil),                 // 140: hashicorp.vagrant.sdk.Machine.UIResponse
	(*Project_MachineAndProvider)(nil),         // 141: hashicorp.vagrant.sdk.Project.MachineAndProvider
	(*Project_MachineNamesResponse)(nil),       // 142: hashicorp.vagrant.sdk.Project.MachineNamesResponse
	(*Project_ActiveMachinesRequest)(nil),      // 143: hashicorp.vagrant.sdk.Project.ActiveMachinesRequest
	(*Project_ActiveMachinesResponse)(nil),     // 144: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse
	(*Vagrantfile_GetVagrantfileRequest)(nil),  // 145: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest
	(*Vagrantfile_GetVagrantfileResponse)(nil), // 146: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse
	(*any.Any)(nil),                            // 147: google.protobuf.Any
	(*protostructure.Struct)(nil),              // 148: protostructure.Struct
	(*status.Status)(nil),                      // 149: google.rpc.Status
	(*timestamp.Timestamp)(nil),                // 150: google.protobuf.Timestamp
	(*empty.Empty)(nil),                        // 151: google.protobuf.Empty
}
var file_vagrant_plugin_sdk_plugin_proto_depIdxs = []int32{
	48,  // 0: hashicorp.vagrant.sdk.FuncSpec.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	48,  // 1: hashicorp.vagrant.sdk.FuncSpec.result:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	41,  // 2: hashicorp.vagrant.sdk.Args.Box.metadata:type_name -> hashicorp.vagrant.sdk.Args.Box.MetadataEntry
	31,  // 3: hashicorp.vagrant.sdk.Args.Project.ui:type_name -> hashicorp.vagrant.sdk.Args.TerminalUI
	45,  // 4: hashicorp.vagrant.sdk.Args.LabelSet.labels:type_name -> hashicorp.vagrant.sdk.Args.LabelSet.LabelsEntry
	26,  // 5: hashicorp.vagrant.sdk.Args.Options.opt:type_name -> hashicorp.vagrant.sdk.Args.LabelSet
	46,  // 6: hashicorp.vagrant.sdk.Args.StateBag.data:type_name -> hashicorp.vagrant.sdk.Args.StateBag.DataEntry
	0,   // 7: hashicorp.vagrant.sdk.Args.WinrmInfo.transport:type_name -> hashicorp.vagrant.sdk.Args.WinrmInfo.Transport
	27,  // 8: hashicorp.vagrant.sdk.Args.MachineIndex.Entry.extra_data:type_name -> hashicorp.vagrant.sdk.Args.Options
	47,  // 9: hashicorp.vagrant.sdk.Args.StateBag.DataEntry.value:type_name -> hashicorp.vagrant.sdk.Args.StateBag.Value
	147, // 10: hashicorp.vagrant.sdk.Args.StateBag.Value.map:type_name -> google.protobuf.Any
	147, // 11: hashicorp.vagrant.sdk.FuncSpec.Value.value:type_name -> google.protobuf.Any
	48,  // 12: hashicorp.vagrant.sdk.FuncSpec.Args.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Value
	148, // 13: hashicorp.vagrant.sdk.Config.StructResp.struct:type_name -> protostructure.Struct
	55,  // 14: hashicorp.vagrant.sdk.Config.Documentation.fields:type_name -> hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry
	53,  // 15: hashicorp.vagrant.sdk.Config.Documentation.mappers:type_name -> hashicorp.vagrant.sdk.Config.MapperDocumentation
	52,  // 16: hashicorp.vagrant.sdk.Config.Documentation.FieldsEntry.value:type_name -> hashicorp.vagrant.sdk.Config.FieldDocumentation
	62,  // 17: hashicorp.vagrant.sdk.TerminalUI.Response.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.InputResp
	64,  // 18: hashicorp.vagrant.sdk.TerminalUI.Event.line:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Line
	63,  // 19: hashicorp.vagrant.sdk.TerminalUI.Event.status:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Status
	67,  // 20: hashicorp.vagrant.sdk.TerminalUI.Event.named_values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues
	65,  // 21: hashicorp.vagrant.sdk.TerminalUI.Event.raw:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Raw
	70,  // 22: hashicorp.vagrant.sdk.TerminalUI.Event.table:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Table
	71,  // 23: hashicorp.vagrant.sdk.TerminalUI.Event.step_group:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.StepGroup
	72,  // 24: hashicorp.vagrant.sdk.TerminalUI.Event.step:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Step
	61,  // 25: hashicorp.vagrant.sdk.TerminalUI.Event.input:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.Input
	149, // 26: hashicorp.vagrant.sdk.TerminalUI.Event.InputResp.error:type_name -> google.rpc.Status
	66,  // 27: hashicorp.vagrant.sdk.TerminalUI.Event.NamedValues.values:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.NamedValue
	68,  // 28: hashicorp.vagrant.sdk.TerminalUI.Event.TableRow.entries:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableEntry
	69,  // 29: hashicorp.vagrant.sdk.TerminalUI.Event.Table.rows:type_name -> hashicorp.vagrant.sdk.TerminalUI.Event.TableRow
	49,  // 30: hashicorp.vagrant.sdk.Map.Request.args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	147, // 31: hashicorp.vagrant.sdk.Map.Response.result:type_name -> google.protobuf.Any
	4,   // 32: hashicorp.vagrant.sdk.Map.ListResponse.funcs:type_name -> hashicorp.vagrant.sdk.FuncSpec
	147, // 33: hashicorp.vagrant.sdk.Provider.ActionResp.result:type_name -> google.protobuf.Any
	79,  // 34: hashicorp.vagrant.sdk.Provider.ActionResp.labels:type_name -> hashicorp.vagrant.sdk.Provider.ActionResp.LabelsEntry
	1,   // 35: hashicorp.vagrant.sdk.Command.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Flag.Type
	80,  // 36: hashicorp.vagrant.sdk.Command.CommandInfo.flags:type_name -> hashicorp.vagrant.sdk.Command.Flag
	81,  // 37: hashicorp.vagrant.sdk.Command.CommandInfo.subcommands:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	81,  // 38: hashicorp.vagrant.sdk.Command.CommandInfoResp.command_info:type_name -> hashicorp.vagrant.sdk.Command.CommandInfo
	49,  // 39: hashicorp.vagrant.sdk.Command.ExecuteReq.spec:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	87,  // 40: hashicorp.vagrant.sdk.Command.Arguments.flags:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag
	2,   // 41: hashicorp.vagrant.sdk.Command.Arguments.Flag.type:type_name -> hashicorp.vagrant.sdk.Command.Arguments.Flag.Type
	24,  // 42: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.machine:type_name -> hashicorp.vagrant.sdk.Args.Machine
	26,  // 43: hashicorp.vagrant.sdk.Communicator.ExecutionRequest.options:type_name -> hashicorp.vagrant.sdk.Args.LabelSet
	49,  // 44: hashicorp.vagrant.sdk.Guest.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	147, // 45: hashicorp.vagrant.sdk.Guest.Capability.Resp.result:type_name -> google.protobuf.Any
	49,  // 46: hashicorp.vagrant.sdk.Host.Capability.NamedRequest.func_args:type_name -> hashicorp.vagrant.sdk.FuncSpec.Args
	147, // 47: hashicorp.vagrant.sdk.Host.Capability.Resp.result:type_name -> google.protobuf.Any
	108, // 48: hashicorp.vagrant.sdk.Machine.SetNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 49: hashicorp.vagrant.sdk.Machine.GetNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 50: hashicorp.vagrant.sdk.Machine.SetIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 51: hashicorp.vagrant.sdk.Machine.GetIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 52: hashicorp.vagrant.sdk.Machine.SetStateRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	33,  // 53: hashicorp.vagrant.sdk.Machine.SetStateRequest.state:type_name -> hashicorp.vagrant.sdk.Args.MachineState
	108, // 54: hashicorp.vagrant.sdk.Machine.GetStateRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	33,  // 55: hashicorp.vagrant.sdk.Machine.GetStateResponse.state:type_name -> hashicorp.vagrant.sdk.Args.MachineState
	108, // 56: hashicorp.vagrant.sdk.Machine.GetUUIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 57: hashicorp.vagrant.sdk.Machine.SetUUIDRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 58: hashicorp.vagrant.sdk.Machine.BoxRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	22,  // 59: hashicorp.vagrant.sdk.Machine.BoxResponse.box:type_name -> hashicorp.vagrant.sdk.Args.Box
	108, // 60: hashicorp.vagrant.sdk.Machine.DatadirRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	38,  // 61: hashicorp.vagrant.sdk.Machine.DatadirResponse.datadir:type_name -> hashicorp.vagrant.sdk.Args.DataDir.Machine
	108, // 62: hashicorp.vagrant.sdk.Machine.LocalDataPathRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 63: hashicorp.vagrant.sdk.Machine.ProviderRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 64: hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 65: hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	108, // 66: hashicorp.vagrant.sdk.Machine.UpdatedAtRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	150, // 67: hashicorp.vagrant.sdk.Machine.UpdatedAtResponse.updated_at:type_name -> google.protobuf.Timestamp
	108, // 68: hashicorp.vagrant.sdk.Machine.UIRequest.machine:type_name -> hashicorp.vagrant.sdk.Ref.Machine
	31,  // 69: hashicorp.vagrant.sdk.Machine.UIResponse.ui:type_name -> hashicorp.vagrant.sdk.Args.TerminalUI
	107, // 70: hashicorp.vagrant.sdk.Project.ActiveMachinesRequest.env:type_name -> hashicorp.vagrant.sdk.Ref.Project
	141, // 71: hashicorp.vagrant.sdk.Project.ActiveMachinesResponse.machines:type_name -> hashicorp.vagrant.sdk.Project.MachineAndProvider
	107, // 72: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest.project:type_name -> hashicorp.vagrant.sdk.Ref.Project
	28,  // 73: hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse.vagrantfile:type_name -> hashicorp.vagrant.sdk.Args.Vagrantfile
	58,  // 74: hashicorp.vagrant.sdk.TerminalUIService.Output:input_type -> hashicorp.vagrant.sdk.TerminalUI.OutputRequest
	60,  // 75: hashicorp.vagrant.sdk.TerminalUIService.Events:input_type -> hashicorp.vagrant.sdk.TerminalUI.Event
	151, // 76: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:input_type -> google.protobuf.Empty
	151, // 77: hashicorp.vagrant.sdk.Mapper.ListMappers:input_type -> google.protobuf.Empty
	73,  // 78: hashicorp.vagrant.sdk.Mapper.Map:input_type -> hashicorp.vagrant.sdk.Map.Request
	49,  // 79: hashicorp.vagrant.sdk.ProviderService.Usable:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 80: hashicorp.vagrant.sdk.ProviderService.UsableSpec:input_type -> google.protobuf.Empty
	49,  // 81: hashicorp.vagrant.sdk.ProviderService.Installed:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 82: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:input_type -> google.protobuf.Empty
	49,  // 83: hashicorp.vagrant.sdk.ProviderService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 84: hashicorp.vagrant.sdk.ProviderService.InitSpec:input_type -> google.protobuf.Empty
	49,  // 85: hashicorp.vagrant.sdk.ProviderService.ActionUp:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 86: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:input_type -> google.protobuf.Empty
	151, // 87: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 88: hashicorp.vagrant.sdk.ProviderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 89: hashicorp.vagrant.sdk.ProviderService.Documentation:input_type -> google.protobuf.Empty
	151, // 90: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 91: hashicorp.vagrant.sdk.ProvisionerService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 92: hashicorp.vagrant.sdk.ProvisionerService.Documentation:input_type -> google.protobuf.Empty
	151, // 93: hashicorp.vagrant.sdk.CommandService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 94: hashicorp.vagrant.sdk.CommandService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 95: hashicorp.vagrant.sdk.CommandService.Documentation:input_type -> google.protobuf.Empty
	85,  // 96: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:input_type -> hashicorp.vagrant.sdk.Command.ExecuteSpecReq
	84,  // 97: hashicorp.vagrant.sdk.CommandService.Execute:input_type -> hashicorp.vagrant.sdk.Command.ExecuteReq
	151, // 98: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:input_type -> google.protobuf.Empty
	49,  // 99: hashicorp.vagrant.sdk.CommandService.CommandInfo:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 100: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 101: hashicorp.vagrant.sdk.CommunicatorService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 102: hashicorp.vagrant.sdk.CommunicatorService.Documentation:input_type -> google.protobuf.Empty
	151, // 103: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:input_type -> google.protobuf.Empty
	49,  // 104: hashicorp.vagrant.sdk.CommunicatorService.Match:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 105: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:input_type -> google.protobuf.Empty
	49,  // 106: hashicorp.vagrant.sdk.CommunicatorService.Init:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 107: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:input_type -> google.protobuf.Empty
	49,  // 108: hashicorp.vagrant.sdk.CommunicatorService.Ready:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 109: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:input_type -> google.protobuf.Empty
	49,  // 110: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 111: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:input_type -> google.protobuf.Empty
	49,  // 112: hashicorp.vagrant.sdk.CommunicatorService.Download:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 113: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:input_type -> google.protobuf.Empty
	49,  // 114: hashicorp.vagrant.sdk.CommunicatorService.Upload:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 115: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:input_type -> google.protobuf.Empty
	49,  // 116: hashicorp.vagrant.sdk.CommunicatorService.Execute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 117: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:input_type -> google.protobuf.Empty
	49,  // 118: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 119: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:input_type -> google.protobuf.Empty
	49,  // 120: hashicorp.vagrant.sdk.CommunicatorService.Test:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 121: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:input_type -> google.protobuf.Empty
	49,  // 122: hashicorp.vagrant.sdk.CommunicatorService.Reset:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 123: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 124: hashicorp.vagrant.sdk.ConfigService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 125: hashicorp.vagrant.sdk.ConfigService.Documentation:input_type -> google.protobuf.Empty
	151, // 126: hashicorp.vagrant.sdk.GuestService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 127: hashicorp.vagrant.sdk.GuestService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 128: hashicorp.vagrant.sdk.GuestService.Documentation:input_type -> google.protobuf.Empty
	49,  // 129: hashicorp.vagrant.sdk.GuestService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 130: hashicorp.vagrant.sdk.GuestService.DetectSpec:input_type -> google.protobuf.Empty
	98,  // 131: hashicorp.vagrant.sdk.GuestService.HasCapability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	98,  // 132: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	98,  // 133: hashicorp.vagrant.sdk.GuestService.Capability:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	98,  // 134: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Guest.Capability.NamedRequest
	151, // 135: hashicorp.vagrant.sdk.HostService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 136: hashicorp.vagrant.sdk.HostService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 137: hashicorp.vagrant.sdk.HostService.Documentation:input_type -> google.protobuf.Empty
	49,  // 138: hashicorp.vagrant.sdk.HostService.Detect:input_type -> hashicorp.vagrant.sdk.FuncSpec.Args
	151, // 139: hashicorp.vagrant.sdk.HostService.DetectSpec:input_type -> google.protobuf.Empty
	103, // 140: hashicorp.vagrant.sdk.HostService.HasCapability:input_type -> hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	151, // 141: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:input_type -> google.protobuf.Empty
	103, // 142: hashicorp.vagrant.sdk.HostService.Capability:input_type -> hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	103, // 143: hashicorp.vagrant.sdk.HostService.CapabilitySpec:input_type -> hashicorp.vagrant.sdk.Host.Capability.NamedRequest
	151, // 144: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:input_type -> google.protobuf.Empty
	50,  // 145: hashicorp.vagrant.sdk.SyncedFolderService.Configure:input_type -> hashicorp.vagrant.sdk.Config.ConfigureRequest
	151, // 146: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:input_type -> google.protobuf.Empty
	109, // 147: hashicorp.vagrant.sdk.MachineService.SetName:input_type -> hashicorp.vagrant.sdk.Machine.SetNameRequest
	111, // 148: hashicorp.vagrant.sdk.MachineService.GetName:input_type -> hashicorp.vagrant.sdk.Machine.GetNameRequest
	113, // 149: hashicorp.vagrant.sdk.MachineService.SetID:input_type -> hashicorp.vagrant.sdk.Machine.SetIDRequest
	115, // 150: hashicorp.vagrant.sdk.MachineService.GetID:input_type -> hashicorp.vagrant.sdk.Machine.GetIDRequest
	117, // 151: hashicorp.vagrant.sdk.MachineService.SetState:input_type -> hashicorp.vagrant.sdk.Machine.SetStateRequest
	119, // 152: hashicorp.vagrant.sdk.MachineService.GetState:input_type -> hashicorp.vagrant.sdk.Machine.GetStateRequest
	123, // 153: hashicorp.vagrant.sdk.MachineService.SetUUID:input_type -> hashicorp.vagrant.sdk.Machine.SetUUIDRequest
	121, // 154: hashicorp.vagrant.sdk.MachineService.GetUUID:input_type -> hashicorp.vagrant.sdk.Machine.GetUUIDRequest
	125, // 155: hashicorp.vagrant.sdk.MachineService.Box:input_type -> hashicorp.vagrant.sdk.Machine.BoxRequest
	127, // 156: hashicorp.vagrant.sdk.MachineService.Datadir:input_type -> hashicorp.vagrant.sdk.Machine.DatadirRequest
	129, // 157: hashicorp.vagrant.sdk.MachineService.LocalDataPath:input_type -> hashicorp.vagrant.sdk.Machine.LocalDataPathRequest
	131, // 158: hashicorp.vagrant.sdk.MachineService.Provider:input_type -> hashicorp.vagrant.sdk.Machine.ProviderRequest
	133, // 159: hashicorp.vagrant.sdk.MachineService.VagrantfileName:input_type -> hashicorp.vagrant.sdk.Machine.VagrantfileNameRequest
	135, // 160: hashicorp.vagrant.sdk.MachineService.VagrantfilePath:input_type -> hashicorp.vagrant.sdk.Machine.VagrantfilePathRequest
	137, // 161: hashicorp.vagrant.sdk.MachineService.UpdatedAt:input_type -> hashicorp.vagrant.sdk.Machine.UpdatedAtRequest
	139, // 162: hashicorp.vagrant.sdk.MachineService.UI:input_type -> hashicorp.vagrant.sdk.Machine.UIRequest
	151, // 163: hashicorp.vagrant.sdk.ProjectService.MachineNames:input_type -> google.protobuf.Empty
	143, // 164: hashicorp.vagrant.sdk.ProjectService.ActiveMachines:input_type -> hashicorp.vagrant.sdk.Project.ActiveMachinesRequest
	145, // 165: hashicorp.vagrant.sdk.VagrantfileService.GetVagrantfile:input_type -> hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileRequest
	151, // 166: hashicorp.vagrant.sdk.TerminalUIService.Output:output_type -> google.protobuf.Empty
	59,  // 167: hashicorp.vagrant.sdk.TerminalUIService.Events:output_type -> hashicorp.vagrant.sdk.TerminalUI.Response
	57,  // 168: hashicorp.vagrant.sdk.TerminalUIService.IsInteractive:output_type -> hashicorp.vagrant.sdk.TerminalUI.IsInteractiveResponse
	75,  // 169: hashicorp.vagrant.sdk.Mapper.ListMappers:output_type -> hashicorp.vagrant.sdk.Map.ListResponse
	74,  // 170: hashicorp.vagrant.sdk.Mapper.Map:output_type -> hashicorp.vagrant.sdk.Map.Response
	76,  // 171: hashicorp.vagrant.sdk.ProviderService.Usable:output_type -> hashicorp.vagrant.sdk.Provider.UsableResp
	4,   // 172: hashicorp.vagrant.sdk.ProviderService.UsableSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	77,  // 173: hashicorp.vagrant.sdk.ProviderService.Installed:output_type -> hashicorp.vagrant.sdk.Provider.InstalledResp
	4,   // 174: hashicorp.vagrant.sdk.ProviderService.InstalledSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	151, // 175: hashicorp.vagrant.sdk.ProviderService.Init:output_type -> google.protobuf.Empty
	4,   // 176: hashicorp.vagrant.sdk.ProviderService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	78,  // 177: hashicorp.vagrant.sdk.ProviderService.ActionUp:output_type -> hashicorp.vagrant.sdk.Provider.ActionResp
	4,   // 178: hashicorp.vagrant.sdk.ProviderService.ActionUpSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	51,  // 179: hashicorp.vagrant.sdk.ProviderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 180: hashicorp.vagrant.sdk.ProviderService.Configure:output_type -> google.protobuf.Empty
	54,  // 181: hashicorp.vagrant.sdk.ProviderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	51,  // 182: hashicorp.vagrant.sdk.ProvisionerService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 183: hashicorp.vagrant.sdk.ProvisionerService.Configure:output_type -> google.protobuf.Empty
	54,  // 184: hashicorp.vagrant.sdk.ProvisionerService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	51,  // 185: hashicorp.vagrant.sdk.CommandService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 186: hashicorp.vagrant.sdk.CommandService.Configure:output_type -> google.protobuf.Empty
	54,  // 187: hashicorp.vagrant.sdk.CommandService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	4,   // 188: hashicorp.vagrant.sdk.CommandService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	83,  // 189: hashicorp.vagrant.sdk.CommandService.Execute:output_type -> hashicorp.vagrant.sdk.Command.ExecuteResp
	4,   // 190: hashicorp.vagrant.sdk.CommandService.CommandInfoSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	82,  // 191: hashicorp.vagrant.sdk.CommandService.CommandInfo:output_type -> hashicorp.vagrant.sdk.Command.CommandInfoResp
	51,  // 192: hashicorp.vagrant.sdk.CommunicatorService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 193: hashicorp.vagrant.sdk.CommunicatorService.Configure:output_type -> google.protobuf.Empty
	54,  // 194: hashicorp.vagrant.sdk.CommunicatorService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	4,   // 195: hashicorp.vagrant.sdk.CommunicatorService.MatchSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	88,  // 196: hashicorp.vagrant.sdk.CommunicatorService.Match:output_type -> hashicorp.vagrant.sdk.Communicator.MatchResp
	4,   // 197: hashicorp.vagrant.sdk.CommunicatorService.InitSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	89,  // 198: hashicorp.vagrant.sdk.CommunicatorService.Init:output_type -> hashicorp.vagrant.sdk.Communicator.InitResp
	4,   // 199: hashicorp.vagrant.sdk.CommunicatorService.ReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	90,  // 200: hashicorp.vagrant.sdk.CommunicatorService.Ready:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	4,   // 201: hashicorp.vagrant.sdk.CommunicatorService.WaitForReadySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	90,  // 202: hashicorp.vagrant.sdk.CommunicatorService.WaitForReady:output_type -> hashicorp.vagrant.sdk.Communicator.ReadyResp
	4,   // 203: hashicorp.vagrant.sdk.CommunicatorService.DownloadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	91,  // 204: hashicorp.vagrant.sdk.CommunicatorService.Download:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	4,   // 205: hashicorp.vagrant.sdk.CommunicatorService.UploadSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	91,  // 206: hashicorp.vagrant.sdk.CommunicatorService.Upload:output_type -> hashicorp.vagrant.sdk.Communicator.FileTransferResp
	4,   // 207: hashicorp.vagrant.sdk.CommunicatorService.ExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	93,  // 208: hashicorp.vagrant.sdk.CommunicatorService.Execute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	4,   // 209: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecuteSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	93,  // 210: hashicorp.vagrant.sdk.CommunicatorService.PrivilegedExecute:output_type -> hashicorp.vagrant.sdk.Communicator.ExecuteResp
	4,   // 211: hashicorp.vagrant.sdk.CommunicatorService.TestSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	94,  // 212: hashicorp.vagrant.sdk.CommunicatorService.Test:output_type -> hashicorp.vagrant.sdk.Communicator.TestResp
	4,   // 213: hashicorp.vagrant.sdk.CommunicatorService.ResetSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	95,  // 214: hashicorp.vagrant.sdk.CommunicatorService.Reset:output_type -> hashicorp.vagrant.sdk.Communicator.ResetResp
	51,  // 215: hashicorp.vagrant.sdk.ConfigService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 216: hashicorp.vagrant.sdk.ConfigService.Configure:output_type -> google.protobuf.Empty
	54,  // 217: hashicorp.vagrant.sdk.ConfigService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	51,  // 218: hashicorp.vagrant.sdk.GuestService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 219: hashicorp.vagrant.sdk.GuestService.Configure:output_type -> google.protobuf.Empty
	54,  // 220: hashicorp.vagrant.sdk.GuestService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	96,  // 221: hashicorp.vagrant.sdk.GuestService.Detect:output_type -> hashicorp.vagrant.sdk.Guest.DetectResp
	4,   // 222: hashicorp.vagrant.sdk.GuestService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	99,  // 223: hashicorp.vagrant.sdk.GuestService.HasCapability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.CheckResp
	4,   // 224: hashicorp.vagrant.sdk.GuestService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	100, // 225: hashicorp.vagrant.sdk.GuestService.Capability:output_type -> hashicorp.vagrant.sdk.Guest.Capability.Resp
	4,   // 226: hashicorp.vagrant.sdk.GuestService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	51,  // 227: hashicorp.vagrant.sdk.HostService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 228: hashicorp.vagrant.sdk.HostService.Configure:output_type -> google.protobuf.Empty
	54,  // 229: hashicorp.vagrant.sdk.HostService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	101, // 230: hashicorp.vagrant.sdk.HostService.Detect:output_type -> hashicorp.vagrant.sdk.Host.DetectResp
	4,   // 231: hashicorp.vagrant.sdk.HostService.DetectSpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	104, // 232: hashicorp.vagrant.sdk.HostService.HasCapability:output_type -> hashicorp.vagrant.sdk.Host.Capability.CheckResp
	4,   // 233: hashicorp.vagrant.sdk.HostService.HasCapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	105, // 234: hashicorp.vagrant.sdk.HostService.Capability:output_type -> hashicorp.vagrant.sdk.Host.Capability.Resp
	4,   // 235: hashicorp.vagrant.sdk.HostService.CapabilitySpec:output_type -> hashicorp.vagrant.sdk.FuncSpec
	51,  // 236: hashicorp.vagrant.sdk.SyncedFolderService.ConfigStruct:output_type -> hashicorp.vagrant.sdk.Config.StructResp
	151, // 237: hashicorp.vagrant.sdk.SyncedFolderService.Configure:output_type -> google.protobuf.Empty
	54,  // 238: hashicorp.vagrant.sdk.SyncedFolderService.Documentation:output_type -> hashicorp.vagrant.sdk.Config.Documentation
	110, // 239: hashicorp.vagrant.sdk.MachineService.SetName:output_type -> hashicorp.vagrant.sdk.Machine.SetNameResponse
	112, // 240: hashicorp.vagrant.sdk.MachineService.GetName:output_type -> hashicorp.vagrant.sdk.Machine.GetNameResponse
	114, // 241: hashicorp.vagrant.sdk.MachineService.SetID:output_type -> hashicorp.vagrant.sdk.Machine.SetIDResponse
	116, // 242: hashicorp.vagrant.sdk.MachineService.GetID:output_type -> hashicorp.vagrant.sdk.Machine.GetIDResponse
	118, // 243: hashicorp.vagrant.sdk.MachineService.SetState:output_type -> hashicorp.vagrant.sdk.Machine.SetStateResponse
	120, // 244: hashicorp.vagrant.sdk.MachineService.GetState:output_type -> hashicorp.vagrant.sdk.Machine.GetStateResponse
	124, // 245: hashicorp.vagrant.sdk.MachineService.SetUUID:output_type -> hashicorp.vagrant.sdk.Machine.SetUUIDResponse
	122, // 246: hashicorp.vagrant.sdk.MachineService.GetUUID:output_type -> hashicorp.vagrant.sdk.Machine.GetUUIDResponse
	126, // 247: hashicorp.vagrant.sdk.MachineService.Box:output_type -> hashicorp.vagrant.sdk.Machine.BoxResponse
	128, // 248: hashicorp.vagrant.sdk.MachineService.Datadir:output_type -> hashicorp.vagrant.sdk.Machine.DatadirResponse
	130, // 249: hashicorp.vagrant.sdk.MachineService.LocalDataPath:output_type -> hashicorp.vagrant.sdk.Machine.LocalDataPathResponse
	132, // 250: hashicorp.vagrant.sdk.MachineService.Provider:output_type -> hashicorp.vagrant.sdk.Machine.ProviderResponse
	134, // 251: hashicorp.vagrant.sdk.MachineService.VagrantfileName:output_type -> hashicorp.vagrant.sdk.Machine.VagrantfileNameResponse
	136, // 252: hashicorp.vagrant.sdk.MachineService.VagrantfilePath:output_type -> hashicorp.vagrant.sdk.Machine.VagrantfilePathResponse
	138, // 253: hashicorp.vagrant.sdk.MachineService.UpdatedAt:output_type -> hashicorp.vagrant.sdk.Machine.UpdatedAtResponse
	140, // 254: hashicorp.vagrant.sdk.MachineService.UI:output_type -> hashicorp.vagrant.sdk.Machine.UIResponse
	142, // 255: hashicorp.vagrant.sdk.ProjectService.MachineNames:output_type -> hashicorp.vagrant.sdk.Project.MachineNamesResponse
	144, // 256: hashicorp.vagrant.sdk.ProjectService.ActiveMachines:output_type -> hashicorp.vagrant.sdk.Project.ActiveMachinesResponse
	146, // 257: hashicorp.vagrant.sdk.VagrantfileService.GetVagrantfile:output_type -> hashicorp.vagrant.sdk.Vagrantfile.GetVagrantfileResponse
	166, // [166:258] is the sub-list for method output_type
	74,  // [74:166] is the sub-list for method input_type
	74,  // [74:74] is the sub-list for extension type_name
	74,  // [74:74] is the sub-list for extension extendee
	0,   // [0:74] is the sub-list for field type_name
>>>>>>> Generate protos for Vagrantfile service
}

func init() { file_vagrant_plugin_sdk_plugin_proto_init() }
func file_vagrant_plugin_sdk_plugin_proto_init() {
	if File_vagrant_plugin_sdk_plugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoxCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WinrmInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImplementsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*Guest); i {
=======
			switch v := v.(*Vagrantfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MachineIndex); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_BoxCollection); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Box); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Project); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Machine); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MetadataSet); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TerminalUI); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_LabelSet); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Logger); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Options); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_JobInfo); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Vagrantfile); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Basis); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_JobInfo); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Project); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Logger); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Provider); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_TerminalUI); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_MachineState); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Host); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_SSHInfo); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Basis); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_WinrmInfo); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Project); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Basis); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Target); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Project); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Component); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_DataDir_Machine); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*Args_Target_State); i {
=======
			switch v := v.(*Args_DataDir_Component); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*Args_Target_Machine); i {
=======
			switch v := v.(*Args_MachineIndex_Entry); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target_Machine_Box); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration_Vagrant); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Target_Machine_State); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_Configuration_VM); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*TargetIndex_Entry); i {
=======
			switch v := v.(*Args_Configuration_Provider); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Value); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Args_StateBag_Value); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Args); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Value); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_ConfigureRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuncSpec_Args); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_StructResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_ConfigureRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_FieldDocumentation); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_StructResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MapperDocumentation); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_FieldDocumentation); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_Documentation); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config_MapperDocumentation); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*Auth_AuthResponse); i {
=======
			switch v := v.(*Config_Documentation); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_IsInteractiveResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth_AuthResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_OutputRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_IsInteractiveResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Response); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_OutputRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Response); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Input); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_InputResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Input); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Status); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_InputResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Line); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Status); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Raw); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Line); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValue); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Raw); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValues); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValue); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableEntry); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_NamedValues); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableRow); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableEntry); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Table); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_TableRow); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_StepGroup); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Table); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Step); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_StepGroup); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Request); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalUI_Event_Step); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Response); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Request); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_ListResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_Response); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map_ListResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_UsableResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_GetOkResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_InstalledResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_PutRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_ActionResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_PutResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Flag); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_RemoveRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfo); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateBag_RemoveResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfoResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_UsableResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_InstalledResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteReq); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider_ActionResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteSpecReq); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Flag); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfo); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments_Flag); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_CommandInfoResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_MatchResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_InitResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteReq); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ReadyResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_ExecuteSpecReq); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_FileTransferResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecutionRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command_Arguments_Flag); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecuteResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_MatchResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_TestResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_InitResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ResetResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ReadyResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_DetectResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_FileTransferResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecutionRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_NamedRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ExecuteResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_CheckResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_TestResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_Resp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Communicator_ResetResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_DetectResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_DetectResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_NamedRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_NamedRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_CheckResp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_CheckResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_Resp); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Guest_Capability_Resp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Box); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_DetectResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Project); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Machine); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_NamedRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetNameRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_CheckResp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetNameResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host_Capability_Resp); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetNameRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Box); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetNameResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Basis); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetIDRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Project); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetIDResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ref_Target); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetIDRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_ResourceIdResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetIDResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_RecordResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetStateRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_NameResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetStateResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_ProjectResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetStateRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_SetNameRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetStateResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_VagrantfileNameResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetUUIDRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_VagrantfilePathResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_GetUUIDResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_UpdatedAtResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetUUIDRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_SetUUIDResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SetIDRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_BoxRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_GetIDResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_BoxResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SetStateRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_DatadirRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_GetStateResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_DatadirResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_GetUUIDResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_LocalDataPathRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Target_Machine_SetUUIDRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_LocalDataPathResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetRequest); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_ProviderRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetNamesResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_ProviderResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TargetIdsResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfileNameRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineAndProvider); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfileNameResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineNamesResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfilePathRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ActiveMachinesResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_VagrantfilePathResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_CwdResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UpdatedAtRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_VagrantfileNameResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UpdatedAtResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_HomeResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UIRequest); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_LocalDataResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine_UIResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_TmpResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineAndProvider); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
<<<<<<< HEAD
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_DefaultPrivateKeyResponse); i {
=======
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_MachineNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ActiveMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project_ActiveMachinesResponse); i {
>>>>>>> Generate protos for Vagrantfile service
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_GetVagrantfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vagrant_plugin_sdk_plugin_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vagrantfile_GetVagrantfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
<<<<<<< HEAD
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[54].OneofWrappers = []interface{}{
		(*TerminalUI_Response_Input)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[55].OneofWrappers = []interface{}{
=======
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*Args_StateBag_Value_Text)(nil),
		(*Args_StateBag_Value_Map)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[56].OneofWrappers = []interface{}{
		(*TerminalUI_Response_Input)(nil),
	}
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[57].OneofWrappers = []interface{}{
>>>>>>> Generate protos for Vagrantfile service
		(*TerminalUI_Event_Line_)(nil),
		(*TerminalUI_Event_Status_)(nil),
		(*TerminalUI_Event_NamedValues_)(nil),
		(*TerminalUI_Event_Raw_)(nil),
		(*TerminalUI_Event_Table_)(nil),
		(*TerminalUI_Event_StepGroup_)(nil),
		(*TerminalUI_Event_Step_)(nil),
		(*TerminalUI_Event_Input_)(nil),
	}
<<<<<<< HEAD
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[89].OneofWrappers = []interface{}{
=======
	file_vagrant_plugin_sdk_plugin_proto_msgTypes[84].OneofWrappers = []interface{}{
>>>>>>> Generate protos for Vagrantfile service
		(*Command_Arguments_Flag_String_)(nil),
		(*Command_Arguments_Flag_Bool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vagrant_plugin_sdk_plugin_proto_rawDesc,
<<<<<<< HEAD
			NumEnums:      5,
			NumMessages:   140,
			NumExtensions: 0,
			NumServices:   15,
=======
			NumEnums:      3,
			NumMessages:   144,
			NumExtensions: 0,
			NumServices:   13,
>>>>>>> Generate protos for Vagrantfile service
		},
		GoTypes:           file_vagrant_plugin_sdk_plugin_proto_goTypes,
		DependencyIndexes: file_vagrant_plugin_sdk_plugin_proto_depIdxs,
		EnumInfos:         file_vagrant_plugin_sdk_plugin_proto_enumTypes,
		MessageInfos:      file_vagrant_plugin_sdk_plugin_proto_msgTypes,
	}.Build()
	File_vagrant_plugin_sdk_plugin_proto = out.File
	file_vagrant_plugin_sdk_plugin_proto_rawDesc = nil
	file_vagrant_plugin_sdk_plugin_proto_goTypes = nil
	file_vagrant_plugin_sdk_plugin_proto_depIdxs = nil
}
