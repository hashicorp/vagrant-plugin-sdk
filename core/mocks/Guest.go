// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	core "github.com/hashicorp/vagrant-plugin-sdk/core"
	docs "github.com/hashicorp/vagrant-plugin-sdk/docs"

	mock "github.com/stretchr/testify/mock"
)

// Guest is an autogenerated mock type for the Guest type
type Guest struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Guest) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Config provides a mock function with given fields:
func (_m *Guest) Config() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// Detect provides a mock function with given fields: machine
func (_m *Guest) Detect(machine core.Machine) (bool, error) {
	ret := _m.Called(machine)

	var r0 bool
	if rf, ok := ret.Get(0).(func(core.Machine) bool); ok {
		r0 = rf(machine)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(core.Machine) error); ok {
		r1 = rf(machine)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Documentation provides a mock function with given fields:
func (_m *Guest) Documentation() (*docs.Documentation, error) {
	ret := _m.Called()

	var r0 *docs.Documentation
	if rf, ok := ret.Get(0).(func() *docs.Documentation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*docs.Documentation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
