// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	core "github.com/hashicorp/vagrant-plugin-sdk/core"
	mock "github.com/stretchr/testify/mock"
)

// MachineIndex is an autogenerated mock type for the MachineIndex type
type MachineIndex struct {
	mock.Mock
}

// Delete provides a mock function with given fields: machine
func (_m *MachineIndex) Delete(machine core.MachineEntry) error {
	ret := _m.Called(machine)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.MachineEntry) error); ok {
		r0 = rf(machine)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: uuid
func (_m *MachineIndex) Get(uuid string) (core.MachineEntry, error) {
	ret := _m.Called(uuid)

	var r0 core.MachineEntry
	if rf, ok := ret.Get(0).(func(string) core.MachineEntry); ok {
		r0 = rf(uuid)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.MachineEntry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Includes provides a mock function with given fields: uuid
func (_m *MachineIndex) Includes(uuid string) (bool, error) {
	ret := _m.Called(uuid)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(uuid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Recover provides a mock function with given fields: entry
func (_m *MachineIndex) Recover(entry core.MachineEntry) (core.MachineEntry, error) {
	ret := _m.Called(entry)

	var r0 core.MachineEntry
	if rf, ok := ret.Get(0).(func(core.MachineEntry) core.MachineEntry); ok {
		r0 = rf(entry)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.MachineEntry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(core.MachineEntry) error); ok {
		r1 = rf(entry)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Release provides a mock function with given fields: entry
func (_m *MachineIndex) Release(entry core.MachineEntry) error {
	ret := _m.Called(entry)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.MachineEntry) error); ok {
		r0 = rf(entry)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Set provides a mock function with given fields: entry
func (_m *MachineIndex) Set(entry core.MachineEntry) (core.MachineEntry, error) {
	ret := _m.Called(entry)

	var r0 core.MachineEntry
	if rf, ok := ret.Get(0).(func(core.MachineEntry) core.MachineEntry); ok {
		r0 = rf(entry)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.MachineEntry)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(core.MachineEntry) error); ok {
		r1 = rf(entry)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
