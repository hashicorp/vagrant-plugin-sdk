// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	core "github.com/hashicorp/vagrant-plugin-sdk/core"
	mock "github.com/stretchr/testify/mock"
)

// Provisioner is an autogenerated mock type for the Provisioner type
type Provisioner struct {
	mock.Mock
}

// Cleanup provides a mock function with given fields: machine, config
func (_m *Provisioner) Cleanup(machine core.Machine, config core.ProvisionerConfig) error {
	ret := _m.Called(machine, config)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.Machine, core.ProvisionerConfig) error); ok {
		r0 = rf(machine, config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Configure provides a mock function with given fields: machine, config, rootConfig
func (_m *Provisioner) Configure(machine core.Machine, config core.ProvisionerConfig, rootConfig core.Vagrantfile) error {
	ret := _m.Called(machine, config, rootConfig)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.Machine, core.ProvisionerConfig, core.Vagrantfile) error); ok {
		r0 = rf(machine, config, rootConfig)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Provision provides a mock function with given fields: machine, config
func (_m *Provisioner) Provision(machine core.Machine, config core.ProvisionerConfig) error {
	ret := _m.Called(machine, config)

	var r0 error
	if rf, ok := ret.Get(0).(func(core.Machine, core.ProvisionerConfig) error); ok {
		r0 = rf(machine, config)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
