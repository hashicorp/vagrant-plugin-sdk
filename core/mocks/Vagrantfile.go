// Code generated by mockery v2.4.0-beta. DO NOT EDIT.

package mocks

import (
	core "github.com/hashicorp/vagrant-plugin-sdk/core"
	mock "github.com/stretchr/testify/mock"

	path "github.com/hashicorp/vagrant-plugin-sdk/helper/path"
)

// Vagrantfile is an autogenerated mock type for the Vagrantfile type
type Vagrantfile struct {
	mock.Mock
}

// PrimaryTargetName provides a mock function with given fields:
func (_m *Vagrantfile) PrimaryTargetName() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Target provides a mock function with given fields: name, provider, boxes, dataPath, env
func (_m *Vagrantfile) Target(name string, provider string, boxes core.BoxCollection, dataPath path.Path, env core.Project) (core.Machine, error) {
	ret := _m.Called(name, provider, boxes, dataPath, env)

	var r0 core.Machine
	if rf, ok := ret.Get(0).(func(string, string, core.BoxCollection, path.Path, core.Project) core.Machine); ok {
		r0 = rf(name, provider, boxes, dataPath, env)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(core.Machine)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, core.BoxCollection, path.Path, core.Project) error); ok {
		r1 = rf(name, provider, boxes, dataPath, env)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TargetConfig provides a mock function with given fields: name, provider, boxes, dataPath, validateProvider
func (_m *Vagrantfile) TargetConfig(name string, provider string, boxes core.BoxCollection, dataPath path.Path, validateProvider bool) (core.MachineConfig, error) {
	ret := _m.Called(name, provider, boxes, dataPath, validateProvider)

	var r0 core.MachineConfig
	if rf, ok := ret.Get(0).(func(string, string, core.BoxCollection, path.Path, bool) core.MachineConfig); ok {
		r0 = rf(name, provider, boxes, dataPath, validateProvider)
	} else {
		r0 = ret.Get(0).(core.MachineConfig)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, core.BoxCollection, path.Path, bool) error); ok {
		r1 = rf(name, provider, boxes, dataPath, validateProvider)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TargetNames provides a mock function with given fields:
func (_m *Vagrantfile) TargetNames() ([]string, error) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
