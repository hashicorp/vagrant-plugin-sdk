// Code generated by mockery v2.20.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
)

// ProtoMarshaler is an autogenerated mock type for the ProtoMarshaler type
type ProtoMarshaler struct {
	mock.Mock
}

// Proto provides a mock function with given fields:
func (_m *ProtoMarshaler) Proto() protoreflect.ProtoMessage {
	ret := _m.Called()

	var r0 protoreflect.ProtoMessage
	if rf, ok := ret.Get(0).(func() protoreflect.ProtoMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(protoreflect.ProtoMessage)
		}
	}

	return r0
}

type mockConstructorTestingTNewProtoMarshaler interface {
	mock.TestingT
	Cleanup(func())
}

// NewProtoMarshaler creates a new instance of ProtoMarshaler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProtoMarshaler(t mockConstructorTestingTNewProtoMarshaler) *ProtoMarshaler {
	mock := &ProtoMarshaler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
