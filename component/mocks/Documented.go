// Code generated by mockery v2.12.3. DO NOT EDIT.

package mocks

import (
	docs "github.com/hashicorp/vagrant-plugin-sdk/docs"
	mock "github.com/stretchr/testify/mock"
)

// Documented is an autogenerated mock type for the Documented type
type Documented struct {
	mock.Mock
}

// Documentation provides a mock function with given fields:
func (_m *Documented) Documentation() (*docs.Documentation, error) {
	ret := _m.Called()

	var r0 *docs.Documentation
	if rf, ok := ret.Get(0).(func() *docs.Documentation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*docs.Documentation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewDocumentedT interface {
	mock.TestingT
	Cleanup(func())
}

// NewDocumented creates a new instance of Documented. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDocumented(t NewDocumentedT) *Documented {
	mock := &Documented{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
