// Code generated by "stringer -type=Type,FlagType -linecomment ./component"; DO NOT EDIT.

package component

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[InvalidType-0]
	_ = x[CommandType-1]
	_ = x[CommunicatorType-2]
	_ = x[GuestType-3]
	_ = x[HostType-4]
	_ = x[ProviderType-5]
	_ = x[ProvisionerType-6]
	_ = x[SyncedFolderType-7]
	_ = x[AuthenticatorType-8]
	_ = x[LogPlatformType-9]
	_ = x[LogViewerType-10]
	_ = x[MapperType-11]
	_ = x[ConfigType-12]
	_ = x[PluginInfoType-13]
	_ = x[PushType-14]
	_ = x[maxType-15]
}

const _Type_name = "InvalidCommandCommunicatorGuestHostProviderProvisionerSyncedFolderAuthenticatorLogPlatformLogViewerMapperConfigPluginInfoPushmaxType"

var _Type_index = [...]uint8{0, 7, 14, 26, 31, 35, 43, 54, 66, 79, 90, 99, 105, 111, 121, 125, 132}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FlagString-1]
	_ = x[FlagBool-2]
}

const _FlagType_name = "StringBool"

var _FlagType_index = [...]uint8{0, 6, 10}

func (i FlagType) String() string {
	i -= 1
	if i >= FlagType(len(_FlagType_index)-1) {
		return "FlagType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FlagType_name[_FlagType_index[i]:_FlagType_index[i+1]]
}
